import{k as i,aO as g,P as m,m as b,aA as De,S as xe,N as k,n as E,q as F,s as Ne,u as Pe,w as ze,x as Ce,y as Ke,z as Oe,v as ye,H as he,F as ce,A as Re,aP as Ye,aQ as Ge,B as v,aR as Ue,aS as I,aT as W,aU as Je,ag as qe,L as Le}from"./index-96034c65.js";import{g as Qe,T as je,a as He,c as Ve,j as Ze,b as ge}from"./AppDescriptionTop-44a23ed9.js";var $e=Object.defineProperty,Xe=(t,e,n)=>e in t?$e(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,r=(t,e,n)=>(Xe(t,typeof e!="symbol"?e+"":e,n),n);const Te=new i.BeetArgsStruct([["tradeFeeNumerator",i.u64],["tradeFeeDenominator",i.u64],["ownerTradeFeeNumerator",i.u64],["ownerTradeFeeDenominator",i.u64],["ownerWithdrawFeeNumerator",i.u64],["ownerWithdrawFeeDenominator",i.u64],["hostFeeNumerator",i.u64],["hostFeeDenominator",i.u64]],"FeesInfo"),Ae=new i.BeetArgsStruct([["curveType",i.u8],["curveParameters",i.uniformFixedSizeArray(i.u8,32)]],"CurveInfo"),ue=[135,144,215,161,140,125,41,96];class h{constructor(e,n,c,a,d,f,u,o,B,T,y,ie){this.isInitialized=e,this.bumpSeed=n,this.tokenProgramId=c,this.tokenA=a,this.tokenB=d,this.poolMint=f,this.tokenAMint=u,this.tokenBMint=o,this.poolFeeAccount=B,this.fees=T,this.curve=y,this.policy=ie}static fromArgs(e){return new h(e.isInitialized,e.bumpSeed,e.tokenProgramId,e.tokenA,e.tokenB,e.poolMint,e.tokenAMint,e.tokenBMint,e.poolFeeAccount,e.fees,e.curve,e.policy)}static fromAccountInfo(e,n=0){return h.deserialize(e.data,n)}static async fromAccountAddress(e,n,c){const a=await e.getAccountInfo(n,c);if(a==null)throw new Error(`Unable to find TokenSwap account at ${n}`);return h.fromAccountInfo(a,0)[0]}static gpaBuilder(e=new m("J8YCNcS2xDvowMcSzWrDYNguk5y9NWfGStNT4YsiKuea")){return g.GpaBuilder.fromStruct(e,M)}static deserialize(e,n=0){return M.deserialize(e,n)}serialize(){return M.serialize({accountDiscriminator:ue,...this})}static byteSize(e){const n=h.fromArgs(e);return M.toFixedFromValue({accountDiscriminator:ue,...n}).byteSize}static async getMinimumBalanceForRentExemption(e,n,c){return n.getMinimumBalanceForRentExemption(h.byteSize(e),c)}pretty(){return{isInitialized:this.isInitialized,bumpSeed:this.bumpSeed,tokenProgramId:this.tokenProgramId.toBase58(),tokenA:this.tokenA.toBase58(),tokenB:this.tokenB.toBase58(),poolMint:this.poolMint.toBase58(),tokenAMint:this.tokenAMint.toBase58(),tokenBMint:this.tokenBMint.toBase58(),poolFeeAccount:this.poolFeeAccount.toBase58(),fees:this.fees,curve:this.curve,policy:this.policy}}}const M=new i.FixableBeetStruct([["accountDiscriminator",i.uniformFixedSizeArray(i.u8,8)],["isInitialized",i.bool],["bumpSeed",i.u8],["tokenProgramId",g.publicKey],["tokenA",g.publicKey],["tokenB",g.publicKey],["poolMint",g.publicKey],["tokenAMint",g.publicKey],["tokenBMint",g.publicKey],["poolFeeAccount",g.publicKey],["fees",Te],["curve",Ae],["policy",i.coption(g.publicKey)]],h.fromArgs,"TokenSwap"),l=new Map,p=new Map;class D extends Error{constructor(){super("Swap account already in use"),r(this,"code",6e3),r(this,"name","AlreadyInUse"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,D)}}l.set(6e3,()=>new D);p.set("AlreadyInUse",()=>new D);class x extends Error{constructor(){super("Invalid program address generated from bump seed and key"),r(this,"code",6001),r(this,"name","InvalidProgramAddress"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,x)}}l.set(6001,()=>new x);p.set("InvalidProgramAddress",()=>new x);class N extends Error{constructor(){super("Input account owner is not the program address"),r(this,"code",6002),r(this,"name","InvalidOwner"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,N)}}l.set(6002,()=>new N);p.set("InvalidOwner",()=>new N);class P extends Error{constructor(){super("Output pool account owner cannot be the program address"),r(this,"code",6003),r(this,"name","InvalidOutputOwner"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,P)}}l.set(6003,()=>new P);p.set("InvalidOutputOwner",()=>new P);class z extends Error{constructor(){super("Deserialized account is not an SPL Token mint"),r(this,"code",6004),r(this,"name","ExpectedMint"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,z)}}l.set(6004,()=>new z);p.set("ExpectedMint",()=>new z);class C extends Error{constructor(){super("Deserialized account is not an SPL Token account"),r(this,"code",6005),r(this,"name","ExpectedAccount"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,C)}}l.set(6005,()=>new C);p.set("ExpectedAccount",()=>new C);class K extends Error{constructor(){super("Input token account empty"),r(this,"code",6006),r(this,"name","EmptySupply"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,K)}}l.set(6006,()=>new K);p.set("EmptySupply",()=>new K);class O extends Error{constructor(){super("Pool token mint has a non-zero supply"),r(this,"code",6007),r(this,"name","InvalidSupply"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,O)}}l.set(6007,()=>new O);p.set("InvalidSupply",()=>new O);class R extends Error{constructor(){super("Token account has a delegate"),r(this,"code",6008),r(this,"name","InvalidDelegate"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,R)}}l.set(6008,()=>new R);p.set("InvalidDelegate",()=>new R);class Y extends Error{constructor(){super("InvalidInput"),r(this,"code",6009),r(this,"name","InvalidInput"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,Y)}}l.set(6009,()=>new Y);p.set("InvalidInput",()=>new Y);class G extends Error{constructor(){super("Address of the provided swap token account is incorrect"),r(this,"code",6010),r(this,"name","IncorrectSwapAccount"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,G)}}l.set(6010,()=>new G);p.set("IncorrectSwapAccount",()=>new G);class U extends Error{constructor(){super("Address of the provided pool token mint is incorrect"),r(this,"code",6011),r(this,"name","IncorrectPoolMint"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,U)}}l.set(6011,()=>new U);p.set("IncorrectPoolMint",()=>new U);class J extends Error{constructor(){super("InvalidOutput"),r(this,"code",6012),r(this,"name","InvalidOutput"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,J)}}l.set(6012,()=>new J);p.set("InvalidOutput",()=>new J);class q extends Error{constructor(){super("General calculation failure due to overflow or underflow"),r(this,"code",6013),r(this,"name","CalculationFailure"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,q)}}l.set(6013,()=>new q);p.set("CalculationFailure",()=>new q);class L extends Error{constructor(){super("Invalid instruction"),r(this,"code",6014),r(this,"name","InvalidInstruction"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,L)}}l.set(6014,()=>new L);p.set("InvalidInstruction",()=>new L);class Q extends Error{constructor(){super("Swap input token accounts have the same mint"),r(this,"code",6015),r(this,"name","RepeatedMint"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,Q)}}l.set(6015,()=>new Q);p.set("RepeatedMint",()=>new Q);class j extends Error{constructor(){super("Swap instruction exceeds desired slippage limit"),r(this,"code",6016),r(this,"name","ExceededSlippage"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,j)}}l.set(6016,()=>new j);p.set("ExceededSlippage",()=>new j);class H extends Error{constructor(){super("Token account has a close authority"),r(this,"code",6017),r(this,"name","InvalidCloseAuthority"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,H)}}l.set(6017,()=>new H);p.set("InvalidCloseAuthority",()=>new H);class V extends Error{constructor(){super("Pool token mint has a freeze authority"),r(this,"code",6018),r(this,"name","InvalidFreezeAuthority"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,V)}}l.set(6018,()=>new V);p.set("InvalidFreezeAuthority",()=>new V);class Z extends Error{constructor(){super("Pool fee token account incorrect"),r(this,"code",6019),r(this,"name","IncorrectFeeAccount"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,Z)}}l.set(6019,()=>new Z);p.set("IncorrectFeeAccount",()=>new Z);class $ extends Error{constructor(){super("Given pool token amount results in zero trading tokens"),r(this,"code",6020),r(this,"name","ZeroTradingTokens"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,$)}}l.set(6020,()=>new $);p.set("ZeroTradingTokens",()=>new $);class X extends Error{constructor(){super("Fee calculation failed due to overflow, underflow, or unexpected 0"),r(this,"code",6021),r(this,"name","FeeCalculationFailure"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,X)}}l.set(6021,()=>new X);p.set("FeeCalculationFailure",()=>new X);class _ extends Error{constructor(){super("Conversion to u64/u128 failed with an overflow or underflow"),r(this,"code",6022),r(this,"name","ConversionFailure"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,_)}}l.set(6022,()=>new _);p.set("ConversionFailure",()=>new _);class ee extends Error{constructor(){super("The provided fee does not match the program owner's constraints"),r(this,"code",6023),r(this,"name","InvalidFee"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,ee)}}l.set(6023,()=>new ee);p.set("InvalidFee",()=>new ee);class te extends Error{constructor(){super("The provided token program does not match the token program expected by the swap"),r(this,"code",6024),r(this,"name","IncorrectTokenProgramId"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,te)}}l.set(6024,()=>new te);p.set("IncorrectTokenProgramId",()=>new te);class oe extends Error{constructor(){super("The provided curve type is not supported by the program owner"),r(this,"code",6025),r(this,"name","UnsupportedCurveType"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,oe)}}l.set(6025,()=>new oe);p.set("UnsupportedCurveType",()=>new oe);class ne extends Error{constructor(){super("The provided curve parameters are invalid"),r(this,"code",6026),r(this,"name","InvalidCurve"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,ne)}}l.set(6026,()=>new ne);p.set("InvalidCurve",()=>new ne);class re extends Error{constructor(){super("The operation cannot be performed on the given curve"),r(this,"code",6027),r(this,"name","UnsupportedCurveOperation"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,re)}}l.set(6027,()=>new re);p.set("UnsupportedCurveOperation",()=>new re);const _e=new i.BeetArgsStruct([["instructionDiscriminator",i.uniformFixedSizeArray(i.u8,8)],["poolTokenAmount",i.u64],["maximumTokenAAmount",i.u64],["maximumTokenBAmount",i.u64]],"DepositAllTokenTypesInstructionArgs"),et=[32,95,69,60,75,79,205,238];function tt(t,e,n=new m("J8YCNcS2xDvowMcSzWrDYNguk5y9NWfGStNT4YsiKuea")){const[c]=_e.serialize({instructionDiscriminator:et,...e}),a=[{pubkey:t.tokenSwap,isWritable:!1,isSigner:!1},{pubkey:t.authority,isWritable:!1,isSigner:!1},{pubkey:t.userTransferAuthority,isWritable:!1,isSigner:!0},{pubkey:t.userTokenA,isWritable:!0,isSigner:!1},{pubkey:t.userTokenB,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenA,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenB,isWritable:!0,isSigner:!1},{pubkey:t.poolMint,isWritable:!0,isSigner:!1},{pubkey:t.destination,isWritable:!0,isSigner:!1},{pubkey:t.tokenProgram??E,isWritable:!1,isSigner:!1}];if(t.anchorRemainingAccounts!=null)for(const d of t.anchorRemainingAccounts)a.push(d);return new F({programId:n,keys:a,data:c})}const ot=new i.BeetArgsStruct([["instructionDiscriminator",i.uniformFixedSizeArray(i.u8,8)],["sourceTokenAmount",i.u64],["minimumPoolTokenAmount",i.u64]],"DepositSingleTokenTypeInstructionArgs"),nt=[175,0,152,41,199,0,148,43];function rt(t,e,n=new m("J8YCNcS2xDvowMcSzWrDYNguk5y9NWfGStNT4YsiKuea")){const[c]=ot.serialize({instructionDiscriminator:nt,...e}),a=[{pubkey:t.tokenSwap,isWritable:!1,isSigner:!1},{pubkey:t.authority,isWritable:!1,isSigner:!1},{pubkey:t.userTransferAuthority,isWritable:!1,isSigner:!0},{pubkey:t.source,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenA,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenB,isWritable:!0,isSigner:!1},{pubkey:t.poolMint,isWritable:!0,isSigner:!1},{pubkey:t.destination,isWritable:!0,isSigner:!1},{pubkey:t.tokenProgram??E,isWritable:!1,isSigner:!1}];if(t.anchorRemainingAccounts!=null)for(const d of t.anchorRemainingAccounts)a.push(d);return new F({programId:n,keys:a,data:c})}const it=new i.FixableBeetArgsStruct([["instructionDiscriminator",i.uniformFixedSizeArray(i.u8,8)],["feesInput",Te],["curveInput",Ae],["policy",i.coption(g.publicKey)]],"InitializeInstructionArgs"),at=[175,175,109,31,13,152,155,237];function st(t,e,n=new m("J8YCNcS2xDvowMcSzWrDYNguk5y9NWfGStNT4YsiKuea")){const[c]=it.serialize({instructionDiscriminator:at,...e}),a=[{pubkey:t.authority,isWritable:!1,isSigner:!1},{pubkey:t.tokenSwap,isWritable:!0,isSigner:!0},{pubkey:t.poolMint,isWritable:!0,isSigner:!1},{pubkey:t.tokenA,isWritable:!0,isSigner:!1},{pubkey:t.tokenB,isWritable:!0,isSigner:!1},{pubkey:t.poolFee,isWritable:!0,isSigner:!1},{pubkey:t.destination,isWritable:!0,isSigner:!1},{pubkey:t.tokenProgram??E,isWritable:!1,isSigner:!1}];if(t.anchorRemainingAccounts!=null)for(const d of t.anchorRemainingAccounts)a.push(d);return new F({programId:n,keys:a,data:c})}const ct=new i.BeetArgsStruct([["instructionDiscriminator",i.uniformFixedSizeArray(i.u8,8)],["amountIn",i.u64],["minimumAmountOut",i.u64]],"SwapInstructionArgs"),ut=[248,198,158,145,225,117,135,200];function lt(t,e,n=new m("J8YCNcS2xDvowMcSzWrDYNguk5y9NWfGStNT4YsiKuea")){const[c]=ct.serialize({instructionDiscriminator:ut,...e}),a=[{pubkey:t.proofRequest??n,isWritable:!1,isSigner:!1},{pubkey:t.tokenSwap,isWritable:!1,isSigner:!1},{pubkey:t.authority,isWritable:!1,isSigner:!1},{pubkey:t.userTransferAuthority,isWritable:!1,isSigner:!0},{pubkey:t.userSource,isWritable:!0,isSigner:!1},{pubkey:t.userDestination,isWritable:!0,isSigner:!1},{pubkey:t.poolSource,isWritable:!0,isSigner:!1},{pubkey:t.poolDestination,isWritable:!0,isSigner:!1},{pubkey:t.poolMint,isWritable:!0,isSigner:!1},{pubkey:t.poolFee,isWritable:!0,isSigner:!1},{pubkey:t.hostFeeAccount??n,isWritable:!1,isSigner:!1},{pubkey:t.tokenProgram??E,isWritable:!1,isSigner:!1}];if(t.anchorRemainingAccounts!=null)for(const d of t.anchorRemainingAccounts)a.push(d);return new F({programId:n,keys:a,data:c})}const pt=new i.BeetArgsStruct([["instructionDiscriminator",i.uniformFixedSizeArray(i.u8,8)],["poolTokenAmount",i.u64],["minimumTokenAAmount",i.u64],["minimumTokenBAmount",i.u64]],"WithdrawAllTokenTypesInstructionArgs"),dt=[189,254,156,174,210,9,164,216];function mt(t,e,n=new m("J8YCNcS2xDvowMcSzWrDYNguk5y9NWfGStNT4YsiKuea")){const[c]=pt.serialize({instructionDiscriminator:dt,...e}),a=[{pubkey:t.tokenSwap,isWritable:!1,isSigner:!1},{pubkey:t.authority,isWritable:!1,isSigner:!1},{pubkey:t.userTransferAuthority,isWritable:!1,isSigner:!0},{pubkey:t.poolMint,isWritable:!0,isSigner:!1},{pubkey:t.source,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenA,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenB,isWritable:!0,isSigner:!1},{pubkey:t.destTokenA,isWritable:!0,isSigner:!1},{pubkey:t.destTokenB,isWritable:!0,isSigner:!1},{pubkey:t.poolFee,isWritable:!0,isSigner:!1},{pubkey:t.tokenProgram??E,isWritable:!1,isSigner:!1}];if(t.anchorRemainingAccounts!=null)for(const d of t.anchorRemainingAccounts)a.push(d);return new F({programId:n,keys:a,data:c})}const kt=new i.BeetArgsStruct([["instructionDiscriminator",i.uniformFixedSizeArray(i.u8,8)],["destinationTokenAmount",i.u64],["maximumPoolTokenAmount",i.u64]],"WithdrawSingleTokenTypeInstructionArgs"),wt=[111,171,21,77,237,181,241,56];function ft(t,e,n=new m("J8YCNcS2xDvowMcSzWrDYNguk5y9NWfGStNT4YsiKuea")){const[c]=kt.serialize({instructionDiscriminator:wt,...e}),a=[{pubkey:t.tokenSwap,isWritable:!1,isSigner:!1},{pubkey:t.authority,isWritable:!1,isSigner:!1},{pubkey:t.userTransferAuthority,isWritable:!1,isSigner:!0},{pubkey:t.poolMint,isWritable:!0,isSigner:!1},{pubkey:t.source,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenA,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenB,isWritable:!0,isSigner:!1},{pubkey:t.destination,isWritable:!0,isSigner:!1},{pubkey:t.poolFee,isWritable:!0,isSigner:!1},{pubkey:t.tokenProgram??E,isWritable:!1,isSigner:!1}];if(t.anchorRemainingAccounts!=null)for(const d of t.anchorRemainingAccounts)a.push(d);return new F({programId:n,keys:a,data:c})}var be=(t=>(t[t.ConstantProduct=0]="ConstantProduct",t[t.ConstantPrice=1]="ConstantPrice",t[t.Offset=2]="Offset",t))(be||{});i.fixedScalarEnum(be);var ve=(t=>(t[t.Floor=0]="Floor",t[t.Ceiling=1]="Ceiling",t))(ve||{});i.fixedScalarEnum(ve);var Ee=(t=>(t[t.AtoB=0]="AtoB",t[t.BtoA=1]="BtoA",t))(Ee||{});i.fixedScalarEnum(Ee);const St="J8YCNcS2xDvowMcSzWrDYNguk5y9NWfGStNT4YsiKuea",yt=new m(St);class ht{constructor(e){r(this,"programId",yt),this.provider=e}get connection(){return this.provider.connection}swapAuthority(e){return m.findProgramAddressSync([e.toBuffer()],this.programId)[0]}async createTokenSwap(e,n){const c=new b,a=e.tokenSwap??De.generate(),d=Array.from({length:32}),f=Array.from(e.curveParameters??[]);for(let y=0;y<f.length;y++)d[y]=f[y];const u={curveType:e.curveType,curveParameters:d},o=h.byteSize({bumpSeed:0,curve:u,fees:{tradeFeeNumerator:0,tradeFeeDenominator:0,ownerTradeFeeNumerator:0,ownerTradeFeeDenominator:0,ownerWithdrawFeeNumerator:0,ownerWithdrawFeeDenominator:0,hostFeeNumerator:0,hostFeeDenominator:0},isInitialized:!1,policy:m.default,poolFeeAccount:m.default,poolMint:m.default,tokenA:m.default,tokenAMint:m.default,tokenB:m.default,tokenBMint:m.default,tokenProgramId:m.default}),B=await this.connection.getMinimumBalanceForRentExemption(o);c.add(xe.createAccount({fromPubkey:this.provider.publicKey,newAccountPubkey:a.publicKey,programId:this.programId,lamports:B,space:o})),c.add(st({authority:this.swapAuthority(a.publicKey),tokenSwap:a.publicKey,destination:e.destination,poolMint:e.poolMint,poolFee:e.poolFee,tokenA:e.tokenA,tokenB:e.tokenB},{feesInput:{tradeFeeNumerator:new k(e.fees.tradeFeeNumerator.toString()),tradeFeeDenominator:new k(e.fees.tradeFeeDenominator.toString()),ownerTradeFeeNumerator:new k(e.fees.ownerTradeFeeNumerator.toString()),ownerTradeFeeDenominator:new k(e.fees.ownerTradeFeeDenominator.toString()),ownerWithdrawFeeNumerator:new k(e.fees.ownerWithdrawFeeNumerator.toString()),ownerWithdrawFeeDenominator:new k(e.fees.ownerWithdrawFeeDenominator.toString()),hostFeeNumerator:new k(e.fees.hostFeeNumerator.toString()),hostFeeDenominator:new k(e.fees.hostFeeDenominator.toString())},curveInput:u,policy:e.policy??null}));const T=await this.provider.sendAndConfirm(c,[a],n);return{tokenSwap:a.publicKey,signature:T}}async swap(e,n){const c=new b;try{await Qe(this.connection,e.userDestination)}catch(a){(a instanceof je||a instanceof He)&&e.receiver&&e.destinationTokenMint&&c.add(Ve(this.provider.publicKey,e.userDestination,e.receiver,e.destinationTokenMint))}return c.add(lt({authority:this.swapAuthority(e.tokenSwap),userTransferAuthority:this.provider.publicKey,userSource:e.userSource,userDestination:e.userDestination,tokenSwap:e.tokenSwap,poolFee:e.poolFee,poolMint:e.poolMint,poolSource:e.poolSource,poolDestination:e.poolDestination,proofRequest:e.proofRequest,hostFeeAccount:e.hostFeeAccount},{amountIn:new k(e.amountIn.toString()),minimumAmountOut:new k(e.minimumAmountOut.toString())})),this.provider.sendAndConfirm(c,[],n)}async depositAllTokenTypes(e,n){const c=tt({authority:this.swapAuthority(e.tokenSwap),userTransferAuthority:this.provider.publicKey,tokenSwap:e.tokenSwap,poolMint:e.poolMint,destination:e.destination,userTokenA:e.userTokenA,userTokenB:e.userTokenB,swapTokenA:e.swapTokenA,swapTokenB:e.swapTokenB},{poolTokenAmount:new k(e.poolTokenAmount.toString()),maximumTokenAAmount:new k(e.maximumTokenA.toString()),maximumTokenBAmount:new k(e.maximumTokenB.toString())}),a=new b().add(c);return this.provider.sendAndConfirm(a,[],n)}async withdrawAllTokenTypes(e,n){const c=mt({authority:this.swapAuthority(e.tokenSwap),userTransferAuthority:this.provider.publicKey,tokenSwap:e.tokenSwap,poolMint:e.poolMint,poolFee:e.poolFee,source:e.source,destTokenA:e.destTokenA,destTokenB:e.destTokenB,swapTokenA:e.swapTokenA,swapTokenB:e.swapTokenB},{poolTokenAmount:new k(e.poolTokenAmount.toString()),minimumTokenAAmount:new k(e.minimumTokenA.toString()),minimumTokenBAmount:new k(e.minimumTokenB.toString())}),a=new b().add(c);return this.provider.sendAndConfirm(a,[],n)}async depositSingleTokenTypeExactAmountIn(e,n){const c=rt({authority:this.swapAuthority(e.tokenSwap),userTransferAuthority:this.provider.publicKey,tokenSwap:e.tokenSwap,poolMint:e.poolMint,source:e.source,destination:e.destination,swapTokenA:e.swapTokenA,swapTokenB:e.swapTokenB},{sourceTokenAmount:new k(e.sourceTokenAmount.toString()),minimumPoolTokenAmount:new k(e.minimumPoolTokenAmount.toString())}),a=new b().add(c);return this.provider.sendAndConfirm(a,[],n)}async withdrawSingleTokenTypeExactAmountOut(e,n){const c=ft({authority:this.swapAuthority(e.tokenSwap),userTransferAuthority:this.provider.publicKey,tokenSwap:e.tokenSwap,poolMint:e.poolMint,poolFee:e.poolFee,source:e.source,destination:e.destination,swapTokenA:e.swapTokenA,swapTokenB:e.swapTokenB},{destinationTokenAmount:new k(e.destinationTokenAmount.toString()),maximumPoolTokenAmount:new k(e.maximumPoolTokenAmount.toString())}),a=new b().add(c);return this.provider.sendAndConfirm(a,[],n)}async load(e,n){return h.fromAccountAddress(this.provider.connection,new m(e),n)}async loadAll(e={}){const n=h.gpaBuilder().addFilter("accountDiscriminator",ue);return e.noData&&(n.config.dataSlice={offset:0,length:0}),e.tokenProgramId&&n.addFilter("tokenProgramId",new m(e.tokenProgramId)),e.poolMint&&n.addFilter("poolMint",new m(e.poolMint)),e.tokenAMint&&n.addFilter("tokenAMint",new m(e.tokenAMint)),e.tokenBMint&&n.addFilter("tokenBMint",new m(e.tokenBMint)),(await n.run(this.provider.connection)).map(({pubkey:c,account:a})=>({pubkey:c,data:e.noData?null:h.fromAccountInfo(a)[0]}))}}const bt=Ne("swap",()=>{const t=Pe(),e=ze(),n=Ce(),{publicKey:c}=Ke(),{notify:a}=Oe(),d=ye(()=>new ht(new he(t.connection,n.value??{publicKey:m.default},he.defaultOptions()))),f=ce([]),u=ce(),o=Re({loading:!1,slippageDialog:!1,status:void 0,poolBalance:{},poolTokenSupply:0,from:Ye,to:Ge,swapping:!1,active:!1,slippage:.01,rate:0,impact:0,fees:{host:0,trade:0,ownerTrade:0,ownerWithdraw:0},direction:0});v(n,async s=>{B().then(),s||ie()},{immediate:!0});async function B(){o.loading=!0;try{console.log("swapClient ================: ",d.value),f.value=await d.value.loadAll(),console.log("swaps ================: ",f.value)}catch(s){console.log(s),f.value=[]}finally{o.loading=!1}}const T=ce(!1),y=Ue(async()=>{if(console.log("loadPoolTokenAccounts ========= "),!!u.value){T.value=!0;try{const s=await Je(t.connection,d.value.swapAuthority(u.value.pubkey));for(const S of s)o.poolBalance[`${S.mint}`]=S.amount;const w=await Ze(t.connection,u.value.data.poolMint);o.poolTokenSupply=Number(w.supply),console.log("[Pool Balance]",o.poolBalance),console.log("[Pool Balance] poolTokenSupply",o.poolTokenSupply)}catch(s){console.log("[Pool Balance] error",s)}finally{T.value=!1}}},500);setInterval(y,6e4),v([f,()=>o.from.mint,()=>o.to.mint],async()=>{console.log("tokenSwaps ================: ",f.value),console.log("from.mint ================: ",o.from.mint),console.log("to.mint ================: ",o.to.mint),f.value&&o.from.mint&&o.to.mint&&o.from.mint!==o.to.mint?(u.value=f.value.find(s=>{const w=s.data?.tokenAMint.toBase58(),S=s.data?.tokenBMint.toBase58();return w===o.from.mint&&S===o.to.mint||w===o.to.mint&&S===o.from.mint}),console.log("Token SWAP: ",u.value),e.setContractPolicy(u.value?.data.policy?.toBase58()??""),y()):(u.value=void 0,e.setContractPolicy(""),o.poolBalance={})},{immediate:!0});function ie(){o.loading=!1,o.slippageDialog=!1,o.status=void 0,o.poolBalance={},o.poolTokenSupply=0}v([()=>o.from.amount,()=>o.poolBalance],async()=>{const s=I(o.from.amount??0,o.from.decimals),w=Number(o.poolBalance[o.from.mint]??0),S=Number(o.poolBalance[o.to.mint]??0);if(s===0||Number.isNaN(s)){o.to.amount=0,o.rate=S/w,o.impact=0;return}console.log(o.fees);const A=S-w*S/(w+s);o.rate=s?A/s:S/w,o.to.amount=qe(A?A*(1-o.fees.ownerTrade-o.fees.trade):0,o.to.decimals),o.impact=s?1-A/s/(S/w):0},{immediate:!0});const ae=ye(()=>{const s=Number(I(o.to.amount??0,o.to.decimals));return Math.floor(s-s*o.slippage)});async function Fe(){if(!e.certificateValid)return Le();if(!u.value||!c.value){console.log("TokenSwap is not initialized...");return}n.value.publicKey||a({type:"info",message:"Please connect your wallet first"});const w=Number(I(o.from.amount??0,o.from.decimals)),S=Number(I(e.tokenBalance(o.from.mint)??0,o.from.decimals)),A=Number(I(o.to.amount??0,o.to.decimals));if(w>S){a({type:"negative",message:"Insufficient balance."});return}try{o.swapping=!0;const se=o.direction===0?u.value.data.tokenAMint:u.value.data.tokenBMint,pe=o.direction===0?u.value.data.tokenBMint:u.value.data.tokenAMint,de=o.direction===0?u.value.data.tokenA:u.value.data.tokenB,me=o.direction===0?u.value.data.tokenB:u.value.data.tokenA,ke=await ge(se,n.value.publicKey),we=await ge(pe,n.value.publicKey),fe=w;console.log("toAmount = ",A),console.log("slippage = ",o.slippage),console.log("slippage 2 = ",A*o.slippage);const Se=d.value.swapAuthority(u.value.pubkey);console.log("proofRequest = ",e.certificate?.pubkey.toBase58()),console.log("swapAuthority = ",Se),console.log("tokenSwap = ",u.value.pubkey.toBase58()),console.log("userSource = ",ke.toBase58()),console.log("userDestination = ",we.toBase58()),console.log("poolSource = ",de.toBase58()),console.log("poolDestination = ",me.toBase58()),console.log("poolMint = ",u.value.data.poolMint.toBase58()),console.log("poolFee = ",u.value.data.poolFeeAccount.toBase58()),console.log("amountIn = ",fe),console.log("minimumAmountOut = ",ae.value),await d.value.swap({proofRequest:e.certificate?.pubkey,authority:Se,tokenSwap:u.value.pubkey,userSource:ke,userDestination:we,poolSource:de,poolDestination:me,poolMint:u.value.data.poolMint,poolFee:u.value.data.poolFeeAccount,amountIn:fe,minimumAmountOut:ae.value,receiver:c.value,destinationTokenMint:pe},{commitment:"confirmed"}),le()}catch(se){console.log(se)}finally{o.swapping=!1}}function Be(){const{from:s,to:w}=o;o.rate=0,o.to={...s,amount:void 0},o.from={...w,amount:void 0},o.direction=o.direction===0?1:0}function Ie(){o.slippageDialog=!0}function We(){o.slippageDialog=!1}function Me(s){o.from.amount=s}function le(){y(),o.from.amount=void 0,o.to.amount=void 0}return v(()=>n.value?.publicKey,s=>{s||le()}),v(()=>o.to,s=>{s.amount&&(s.amount=void 0)}),v(u,s=>{s&&(o.fees.host=W(s.data.fees.hostFeeNumerator,s.data.fees.hostFeeDenominator),o.fees.ownerTrade=W(s.data.fees.ownerTradeFeeNumerator,s.data.fees.ownerTradeFeeDenominator),o.fees.ownerWithdraw=W(s.data.fees.ownerWithdrawFeeNumerator,s.data.fees.ownerWithdrawFeeDenominator),o.fees.trade=W(s.data.fees.tradeFeeNumerator,s.data.fees.tradeFeeDenominator))}),{state:o,tokenSwaps:f,tokenSwap:u,swapClient:d,loadingPoolTokens:T,loadPoolTokenAccounts:y,minimumReceived:ae,setMax:Me,closeSlippage:We,openSlippage:Ie,changeDirection:Be,swapSubmit:Fe}});export{h as k,be as t,bt as u};
