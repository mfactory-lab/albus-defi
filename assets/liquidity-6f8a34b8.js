import{_ as be,a as Se,b as xe}from"./AppDescriptionTop-5cde9845.js";import{_ as ue}from"./PolicyCard.vue_vue_type_script_setup_true_lang-84181436.js";import{_ as ce}from"./SelectPool.vue_vue_type_script_setup_true_lang-50bc1b9f.js";import{V as Y,v as f,W as de,H as J,G as Me,C as F,o as M,Y as G,Z as c,a3 as e,i as U,j as s,aM as X,aN as $e,a2 as a,aO as qe,aP as Ce,aQ as le,a0 as N,a5 as i,aJ as Z,aR as Ve,s as me,u as re,w as ae,x as pe,y as ke,z as fe,B as _e,aS as x,Q as ve,I as j,ax as b,aT as I,a4 as ee,a6 as C,a7 as oe,a8 as D,az as ge,$ as ne,a1 as z,aA as we,aB as Ae,aC as Te,a9 as Be,aD as ye,X as Pe,ab as Ne,ac as Ue,N as Ie,A as Le,aU as se,aV as Qe,aW as Ee,aX as ie,aY as Ke,_ as De,ad as We}from"./index-a2855520.js";import{u as O}from"./swap-cb94d25d.js";import{o as te,_ as je}from"./SelectToken.vue_vue_type_script_setup_true_lang-6860d392.js";import"./PoolsListItem.vue_vue_type_script_setup_true_lang-0cff7acd.js";import"./associatedTokenAccount-fb973eb5.js";const Fe={key:0,class:"select-token-pair__selected-prepend q-mr-xs"},Re=["src","alt"],Oe={key:1,class:"text-body2"},He={avatar:"",class:"row q-mr-sm q-pr-xs"},Xe=["src"],ze=["src"],Ye={class:"row items-center"},Ge=a("span",null,"/",-1),Je=Y({__name:"SelectPair",setup(Q){const r=O(),{state:t}=r,B=f(()=>r.tokenSwapsAllFiltered),{handleFilterToken:_,tokens:m}=de();_(J);const l=f(()=>(B.value?.map(o=>({tokenA:o.data.tokenAMint.toBase58(),tokenB:o.data.tokenBMint.toBase58()})).filter((o,d,V)=>{const y=V.findIndex($=>$.tokenA===o.tokenA&&$.tokenB===o.tokenB||$.tokenA===o.tokenB&&$.tokenB===o.tokenA);return y===-1||y===d})).map(o=>{const d=m.value.find(y=>y.mint===o.tokenA),V=m.value.find(y=>y.mint===o.tokenB);return{value:{tokenA:d,tokenB:V},label:`${d?.symbol}/${V?.symbol}`}}).filter(o=>o.value.tokenA&&o.value.tokenB)),n=Me();return F([()=>t.from,()=>t.to,l],([u,o])=>{n.value=l.value.find(d=>u.mint===d.value.tokenA?.mint&&o.mint===d.value.tokenB?.mint||u.mint===d.value.tokenB?.mint&&o.mint===d.value.tokenA?.mint)},{immediate:!0}),F(n,()=>{n.value&&(t.from=n.value.value.tokenA,t.to=n.value.value.tokenB)},{immediate:!0}),(u,o)=>(M(),G(Ve,{modelValue:e(n),"onUpdate:modelValue":o[0]||(o[0]=d=>Z(n)?n.value=d:null),"option-disable":"inactive","popup-content-class":"select-token-pair-popup transition-duration",outlined:"",options:e(l),dense:"","options-dense":!1,class:"select-token-pair",standout:!1},{prepend:c(()=>[e(n)?(M(),U("div",Fe,[s(X,null,{default:c(()=>[s($e,{src:e(n)?.value.tokenA.image,alt:e(n)?.value.tokenA.symbol},null,8,["src","alt"])]),_:1}),s(X,null,{default:c(()=>[a("img",{src:e(n)?.value.tokenB.image,alt:e(n)?.value.tokenB.symbol},null,8,Re)]),_:1})])):(M(),U("div",Oe," Select a pair of tokens "))]),option:c(d=>[s(qe,Ce(d.itemProps,{class:"token-select__token items-center"}),{default:c(()=>[a("div",He,[s(X,null,{default:c(()=>[a("img",{src:d.opt.value.tokenA.image},null,8,Xe)]),_:2},1024),s(X,null,{default:c(()=>[a("img",{src:d.opt.value.tokenB.image},null,8,ze)]),_:2},1024)]),a("div",Ye,[s(le,null,{default:c(()=>[N(i(d.opt.value.tokenA.symbol),1)]),_:2},1024),Ge,s(le,null,{default:c(()=>[N(i(d.opt.value.tokenB.symbol),1)]),_:2},1024)])]),_:2},1040)]),_:1},8,["modelValue","options"]))}}),Ze=me("liquidity-withdraw",()=>{const Q=re(),r=ae(),t=pe(),{publicKey:B}=ke(),{notify:_}=fe(),m=O(),l=f(()=>m.tokenSwap),n=f(()=>m.state),u=f(()=>m.swapClient),o=_e({slippageDialog:!1,swapping:!1,active:!1,slippage:.01,poolAmount:0,minAmountTokenA:0,minAmountTokenB:0}),d=async()=>{const S=x(o.poolAmount,I)/n.value.poolTokenSupply;(o.poolAmount===0||Number.isNaN(o.poolAmount))&&(o.minAmountTokenA=0,o.minAmountTokenB=0),o.minAmountTokenA=Math.floor(S*n.value.poolBalance[n.value.from.mint]*(1-o.slippage)*(1-n.value.fees.ownerWithdraw)),o.minAmountTokenB=Math.floor(S*n.value.poolBalance[n.value.to.mint]*(1-o.slippage)*(1-n.value.fees.ownerWithdraw))};F([()=>n.value.poolBalance,()=>o.poolAmount,()=>o.slippage],()=>d(),{immediate:!0});function V(){m.loadPoolTokenAccounts(),m.reloadUserLP(),o.poolAmount=0}async function y(){if(!r.certificateValid)return ve();if(!l.value||!B.value){console.log("Pool is not selected...");return}if(t.value.publicKey||_({type:"info",message:"Please connect your wallet first"}),o.poolAmount>m.userPoolsTokens[l.value.data.poolMint.toBase58()]){_({type:"negative",message:"Insufficient LP tokens balance"});return}try{o.swapping=!0;let v=o.minAmountTokenA,w=o.minAmountTokenB,A=n.value.from,P=n.value.to;l.value.data.tokenBMint.toBase58()===n.value.from.mint&&(v=o.minAmountTokenB,w=o.minAmountTokenA,A=n.value.to,P=n.value.from);const k=await j(l.value.data.tokenAMint,t.value.publicKey),g=await j(l.value.data.tokenBMint,t.value.publicKey),T=await j(l.value.data.poolMint,t.value.publicKey);console.log("slippage = ",o.slippage);const L=u.value.swapAuthority(l.value.pubkey);console.log("source = ",T.toBase58()),console.log("destTokenA = ",k.toBase58()),console.log("destTokenB = ",g.toBase58()),console.log("swapAuthority = ",L.toBase58()),console.log("tokenSwap = ",l.value.pubkey.toBase58()),console.log("poolMint = ",l.value.data.poolMint.toBase58()),console.log("swapTokenA Mint = ",l.value.data.tokenAMint.toBase58()),console.log("swapTokenA = ",l.value.data.tokenA.toBase58()),console.log("swapTokenB Mint = ",l.value.data.tokenBMint.toBase58()),console.log("swapTokenB = ",l.value.data.tokenB.toBase58()),console.log("TokenA = ",A.symbol),console.log("minimumTokenA = ",v),console.log("minimumTokenA = ",b(v,A.decimals)),console.log("TokenB = ",P.symbol),console.log("minimumTokenB = ",w),console.log("minimumTokenB = ",b(w,P.decimals)),console.log("poolTokenAmount = ",o.poolAmount),console.log("poolTokenAmount = ",x(o.poolAmount,I)),console.log({tokenSwap:l.value.pubkey,poolMint:l.value.data.poolMint,poolFee:l.value.data.poolFeeAccount,source:T,destTokenA:k,destTokenB:g,swapTokenA:l.value.data.tokenA,swapTokenB:l.value.data.tokenB,poolTokenAmount:x(o.poolAmount,I),minimumTokenA:v,minimumTokenB:w,tokenAMint:l.value.data.tokenAMint,tokenBMint:l.value.data.tokenBMint});const E=await u.value.withdrawAllTokenTypes({tokenSwap:l.value.pubkey,poolMint:l.value.data.poolMint,poolFee:l.value.data.poolFeeAccount,source:T,destTokenA:k,destTokenB:g,swapTokenA:l.value.data.tokenA,swapTokenB:l.value.data.tokenB,poolTokenAmount:x(o.poolAmount,I),minimumTokenA:v,minimumTokenB:w,tokenAMint:l.value.data.tokenAMint,tokenBMint:l.value.data.tokenBMint},{commitment:"confirmed"});_({message:"Transaction confirmed",type:"positive",actions:[{label:"Explore",color:"white",target:"_blank",href:`https://explorer.solana.com/tx/${E}?cluster=${Q.cluster}`,onClick:()=>!1}]}),V()}catch(v){console.log(v),`${v}`.includes("User rejected the request")||_({type:"negative",message:`${v}`})}finally{o.swapping=!1}}function $(){o.slippageDialog=!1}return{state:o,closeSlippage:$,depositBothTokens:y}}),eo={class:"swap-form q-mt-md"},oo={class:"swap-field"},to={class:"swap-field__info"},ao={class:"row"},no=a("div",{class:"col-2 swap-field__label"}," AMOUNT ",-1),lo={class:"col row justify-end swap-field__balance q-pr-sm"},so={key:0,class:"insufficient-error"},io={class:"row justify-between",style:{gap:"10px"}},uo={class:"swap-info q-mt-md q-pt-xs"},co={class:"text-weight-medium"},mo={class:"text-weight-medium"},ro=a("dt",null,"Slippage Tolerance",-1),po={href:"#"},ko=a("dt",null,"Withdraw fee",-1),fo={class:"swap-submit q-mt-md"},_o={key:0,class:"text-weight-medium fs-13 text-center q-mt-md text-negative"},vo={key:1,class:"row q-mt-md text-center relative-position full-width"},go={class:"absolute-right swap-rate__refresh"},wo={class:"swap-info q-mt-lg q-pt-sm"},Ao=a("dt",null,"LP tokens total",-1),To=Y({__name:"WithdrawBothCard",setup(Q){const r=O(),{state:t,loadingPoolTokens:B,loadPoolTokenAccounts:_}=r,m=f(()=>r.tokenSwap),l=Ze(),{state:n,depositBothTokens:u,closeSlippage:o}=l,d=f(()=>m.value&&r.userPoolsTokens[m.value.data.poolMint.toBase58()]||0),V=f(()=>t.poolBalance[t.from.mint]?b(t.poolBalance[t.from.mint],t.from.decimals):0),y=f(()=>t.poolBalance[t.to.mint]?b(t.poolBalance[t.to.mint],t.to.decimals):0),$=w=>ye.format(w);function S(){n.poolAmount=b(d.value,I)}const v=f(()=>Number(x(n.poolAmount,I))>d.value?"Insufficient funds":!1);return F([()=>n.poolAmount,d],()=>{n.active=!v.value}),(w,A)=>{const P=Je,k=ce,g=ue;return M(),G(z,{class:"swap-card__body"},{default:c(()=>[s(P),a("div",eo,[a("div",oo,[a("div",to,[a("div",ao,[no,a("div",lo,[e(v)?(M(),U("div",so," Insufficient funds ")):ee("",!0),N(" Balance: "+i(e(C)(e(b)(e(d),e(I)))),1)])])]),a("div",io,[s(oe,{modelValue:e(n).poolAmount,"onUpdate:modelValue":A[0]||(A[0]=T=>e(n).poolAmount=T),maxlength:14,outlined:"",placeholder:"0.0",class:"swap-input col",onKeypress:e(te)},{append:c(()=>[s(D,{dense:"",unelevated:"",ripple:!1,class:"swap-input__max",onClick:S},{default:c(()=>[N(" MAX ")]),_:1})]),_:1},8,["modelValue","onKeypress"])])])]),a("div",uo,[a("dl",co,[a("dt",null,"Min "+i(e(t).from.symbol.toUpperCase())+" received",1),a("dd",null,i(e(C)(e(b)(e(n).minAmountTokenA,e(t).from.decimals),e(t).from.decimals))+" "+i(e(t).from.symbol.toUpperCase()),1)]),a("dl",mo,[a("dt",null,"Min "+i(e(t).to.symbol.toUpperCase())+" received",1),a("dd",null,i(e(C)(e(b)(e(n).minAmountTokenB,e(t).to.decimals),e(t).to.decimals))+" "+i(e(t).to.symbol.toUpperCase()),1)]),a("dl",null,[ro,a("dd",null,[a("a",po,[N(i($(e(n).slippage))+" ",1),s(ge,{modelValue:e(n).slippageDialog,"onUpdate:modelValue":A[2]||(A[2]=T=>e(n).slippageDialog=T),"transition-duration":"100","transition-show":"fade","transition-hide":"fade"},{default:c(()=>[s(ne,null,{default:c(()=>[s(z,null,{default:c(()=>[s(we,{modelValue:e(n).slippage,"onUpdate:modelValue":[A[1]||(A[1]=T=>e(n).slippage=T),e(o)],spread:"","no-caps":"",unelevated:"",ripple:!1,"toggle-color":"secondary",color:"white","text-color":"dark",options:[{label:"0.1%",value:.001},{label:"0.5%",value:.005},{label:"1%",value:.01},{label:"5%",value:.05}]},null,8,["modelValue","onUpdate:modelValue"])]),_:1})]),_:1})]),_:1},8,["modelValue"])])])]),a("dl",null,[ko,a("dd",null,i($(e(t).fees.ownerWithdraw))+" SOL",1)])]),s(k,{class:"q-mt-md"}),s(g,{class:"q-mt-md q-mx-auto"}),a("div",fo,[s(D,{loading:e(n).swapping,disable:!e(n).active||!e(m)||!e(n).poolAmount,rounded:"",ripple:!1,onClick:e(u)},{default:c(()=>[N(" Remove Liquidity ")]),_:1},8,["loading","disable","onClick"])]),e(m)?(M(),U("div",vo,[a("div",go,[s(D,{loading:e(B),class:"swap-card__reload",unelevated:"",color:w.$q.dark.isActive?"white":"primary",round:"",onClick:e(_)},{default:c(()=>[s(Ae,{name:e(Te),color:w.$q.dark.isActive?"primary":"white"},null,8,["name","color"])]),_:1},8,["loading","color","onClick"])])])):(M(),U("div",_o," Pool not found ")),a("div",wo,[a("dl",null,[Ao,a("dd",null,i(e(b)(e(t).poolTokenSupply,e(I))),1)]),a("dl",null,[a("dt",null,"Pool "+i(e(t).from.symbol)+" balance",1),a("dd",null,i(e(C)(e(V)))+" "+i(e(t).from.symbol),1)]),a("dl",null,[a("dt",null,"Pool "+i(e(t).to.symbol)+" balance",1),a("dd",null,i(e(C)(e(y)))+" "+i(e(t).to.symbol),1)])]),s(Be,{showing:e(t)?.loading,class:"swap-loading",color:"grey"},null,8,["showing"])]),_:1})}}}),Bo=me("liquidity",()=>{const Q=re(),r=ae(),t=pe(),{publicKey:B}=ke(),{notify:_}=fe(),m=O(),l=f(()=>m.tokenSwap),n=f(()=>m.state),u=f(()=>m.swapClient),o=_e({slippageDialog:!1,swapping:!1,active:!1,slippage:.01,poolAmount:0,amountTokenA:0,amountTokenB:0,maxAmountTokenA:0,maxAmountTokenB:0}),d=async(S=!1)=>{const v=Number((S?o.amountTokenB:o.amountTokenA)??0),w=Number(b(Number(n.value.poolBalance[n.value.from.mint]??0),n.value.from.decimals)),A=Number(b(Number(n.value.poolBalance[n.value.to.mint]??0),n.value.to.decimals)),P=S?w/A:A/w;if(v===0||Number.isNaN(v)){o.poolAmount=0,S?(o.amountTokenA=0,o.maxAmountTokenA=0):(o.amountTokenB=0,o.maxAmountTokenB=0);return}S?o.amountTokenA=Number(C(P*o.amountTokenB,n.value.to.decimals)):o.amountTokenB=Number(C(P*o.amountTokenA,n.value.from.decimals)),o.maxAmountTokenA=o.amountTokenA*(1+o.slippage),o.maxAmountTokenB=o.amountTokenB*(1+o.slippage);const k=o.amountTokenA,g=n.value.from;o.poolAmount=Math.floor(x(k,g.decimals)/n.value.poolBalance[g.mint]*n.value.poolTokenSupply)};F([()=>n.value.poolBalance,()=>o.slippage],()=>d(),{immediate:!0});function V(){m.loadPoolTokenAccounts(),m.reloadUserLP(),o.maxAmountTokenA=0,o.maxAmountTokenB=0,o.amountTokenA=0,o.amountTokenB=0}async function y(){if(!r.certificateValid)return ve();if(!l.value||!B.value){console.log("Pool is not selected...");return}t.value.publicKey||_({type:"info",message:"Please connect your wallet first"});const v=Number(x(o.amountTokenA??0,n.value.from.decimals)),w=Number(x(r.tokenBalance(n.value.from.mint)??0,n.value.from.decimals));if(v>w){_({type:"negative",message:`Insufficient balance ${n.value.from.symbol}.`});return}const A=Number(x(o.amountTokenA??0,n.value.to.decimals)),P=Number(x(r.tokenBalance(n.value.to.mint)??0,n.value.to.decimals));if(A>P){_({type:"negative",message:`Insufficient balance ${n.value.to.symbol}.`});return}try{o.swapping=!0;let k=o.amountTokenA,g=o.amountTokenB,T=n.value.from,L=n.value.to;l.value.data.tokenBMint.toBase58()===n.value.from.mint&&(k=o.amountTokenB,g=o.amountTokenA,T=n.value.to,L=n.value.from);const E=await j(l.value.data.tokenAMint,t.value.publicKey),W=await j(l.value.data.tokenBMint,t.value.publicKey),h=await j(l.value.data.poolMint,t.value.publicKey);console.log("slippage = ",o.slippage);const p=u.value.swapAuthority(l.value.pubkey);console.log("destination = ",h.toBase58()),console.log("userTokenA = ",E.toBase58()),console.log("userTokenB = ",W.toBase58()),console.log("swapAuthority = ",p.toBase58()),console.log("tokenSwap = ",l.value.pubkey.toBase58()),console.log("poolMint = ",l.value.data.poolMint.toBase58()),console.log("swapTokenA Mint = ",l.value.data.tokenAMint.toBase58()),console.log("swapTokenA = ",l.value.data.tokenA.toBase58()),console.log("swapTokenB Mint = ",l.value.data.tokenBMint.toBase58()),console.log("swapTokenB = ",l.value.data.tokenB.toBase58()),console.log("TokenA = ",T.symbol),console.log("maximumTokenA = ",k),console.log("maximumTokenA = ",x(k,T.decimals)),console.log("TokenB = ",L.symbol),console.log("maximumTokenB = ",g),console.log("maximumTokenB = ",x(g,L.decimals)),console.log("poolTokenAmount = ",o.poolAmount);const K=await u.value.depositAllTokenTypes({tokenSwap:l.value.pubkey,poolMint:l.value.data.poolMint,destination:h,userTokenA:E,userTokenB:W,swapTokenA:l.value.data.tokenA,swapTokenB:l.value.data.tokenB,poolTokenAmount:o.poolAmount,maximumTokenA:Math.floor(x(k,T.decimals)*(1+o.slippage)),maximumTokenB:Math.floor(x(g,L.decimals)*(1+o.slippage)),tokenAMint:l.value.data.tokenAMint,tokenBMint:l.value.data.tokenBMint},{commitment:"confirmed"});_({message:"Transaction confirmed",type:"positive",actions:[{label:"Explore",color:"white",target:"_blank",href:`https://explorer.solana.com/tx/${K}?cluster=${Q.cluster}`,onClick:()=>!1}]}),V()}catch(k){console.log(k),`${k}`.includes("User rejected the request")||_({type:"negative",message:`${k}`})}finally{o.swapping=!1}}function $(){o.slippageDialog=!1}return{state:o,calcRate:d,closeSlippage:$,depositBothTokens:y}}),yo={class:"swap-form"},ho={class:"swap-field"},bo={class:"swap-field__info"},So={class:"row items-end justify-end"},xo={class:"col-8 col-xs-10 row justify-end swap-field__balance"},Mo={key:0,class:"insufficient-error"},$o={class:"swap-field q-pt-xs"},qo={class:"swap-field__info q-mt-sm"},Co={class:"row items-end justify-end"},Vo={class:"col-8 col-xs-10 row justify-end swap-field__balance"},Po={key:0,class:"insufficient-error"},No={class:"swap-info q-mt-md q-pt-xs"},Uo={class:"text-weight-medium"},Io=a("dt",null,"LP tokens received",-1),Lo={class:"text-weight-medium"},Qo={class:"text-weight-medium"},Eo=a("dt",null,"Slippage Tolerance",-1),Ko={href:"#"},Do={class:"swap-submit q-mt-md"},Wo={key:0,class:"text-weight-medium fs-13 text-center q-mt-md text-negative"},jo={key:1,class:"row q-mt-md text-center relative-position full-width"},Fo={class:"absolute-right swap-rate__refresh"},Ro={class:"swap-info q-mt-lg q-pt-sm"},Oo=a("dt",null,"Your LP tokens",-1),Ho=Y({__name:"DepositBothCard",setup(Q){const r=O(),{state:t,loadingPoolTokens:B,loadPoolTokenAccounts:_}=r,m=f(()=>r.tokenSwap),l=f(()=>m.value&&r.userPoolsTokens[m.value.data.poolMint.toBase58()]||0),n=Bo(),{state:u,depositBothTokens:o,calcRate:d,closeSlippage:V}=n,{handleSearchToken:y,handleFilterToken:$,tokens:S}=de();$(J);const v=ae(),w=f(()=>t.poolBalance[t.from.mint]?b(t.poolBalance[t.from.mint],t.from.decimals):0),A=f(()=>t.poolBalance[t.to.mint]?b(t.poolBalance[t.to.mint],t.to.decimals):0),P=h=>ye.format(h),k=f(()=>v.tokenBalance(t.from.mint)),g=f(()=>v.tokenBalance(t.to.mint));function T(h,p){t[p?"to":"from"]=h}function L(h=!1){const p=h?"to":"from",K=h?"amountTokenB":"amountTokenA",H=h?g.value:k.value;t[p]?.mint===J||t[p]?.mint===Pe?u[K]=H-Ne-3*Ue-Ie:u[K]=H,d(h)}const E=f(()=>Number(u.amountTokenA)>k.value?"Insufficient funds":!1),W=f(()=>Number(u.amountTokenB)>g.value?"Insufficient funds":!1);return F([()=>u.amountTokenA,k,()=>u.amountTokenB,g],h=>{u.active=!E.value&&!W.value}),(h,p)=>{const K=je,H=ce,he=ue;return M(),G(z,{class:"swap-card__body"},{default:c(()=>[a("div",yo,[a("div",ho,[a("div",bo,[a("div",So,[a("div",xo,[e(E)?(M(),U("div",Mo,i(e(E)),1)):ee("",!0),N(" Balance: "+i(e(C)(e(k)))+" "+i(e(t).from.symbol),1)])])]),s(oe,{modelValue:e(u).amountTokenA,"onUpdate:modelValue":[p[1]||(p[1]=q=>e(u).amountTokenA=q),p[2]||(p[2]=q=>{const R=String(q);R[R.length-1]!=="."&&e(d)()})],maxlength:14,outlined:"",placeholder:"0.0",class:"swap-input",onKeypress:e(te)},{append:c(()=>[s(D,{dense:"",unelevated:"",ripple:!1,class:"swap-input__max",onClick:p[0]||(p[0]=q=>L())},{default:c(()=>[N(" MAX ")]),_:1}),s(K,{options:e(S),token:e(t).from,"swap-token":String(e(t).to.symbol),onHandleSearchToken:e(y),onSetToken:T},null,8,["options","token","swap-token","onHandleSearchToken"])]),_:1},8,["modelValue","onKeypress"])]),a("div",$o,[a("div",qo,[a("div",Co,[a("div",Vo,[e(W)?(M(),U("div",Po,i(e(W)),1)):ee("",!0),N(" Balance: "+i(e(C)(e(g)))+" "+i(e(t).to.symbol),1)])])]),s(oe,{modelValue:e(u).amountTokenB,"onUpdate:modelValue":[p[4]||(p[4]=q=>e(u).amountTokenB=q),p[5]||(p[5]=q=>{const R=String(q);R[R.length-1]!=="."&&e(d)(!0)})],maxlength:14,outlined:"",placeholder:"0.0",class:"swap-input",onKeypress:e(te)},{append:c(()=>[s(D,{dense:"",unelevated:"",ripple:!1,class:"swap-input__max",onClick:p[3]||(p[3]=q=>L(!0))},{default:c(()=>[N(" MAX ")]),_:1}),s(K,{"swap-token":String(e(t).from.symbol),options:e(S),direction:!0,token:e(t).to,"destination-unavailable":!e(m),onHandleSearchToken:e(y),onSetToken:T},null,8,["swap-token","options","token","destination-unavailable","onHandleSearchToken"])]),_:1},8,["modelValue","onKeypress"])])]),a("div",No,[a("dl",Uo,[Io,a("dd",null,i(e(b)(e(u).poolAmount,e(I))),1)]),a("dl",Lo,[a("dt",null,"Max "+i(e(t).from.symbol.toUpperCase())+" to be withdrawn",1),a("dd",null,i(e(C)(e(u).maxAmountTokenA,e(t).from.decimals))+" "+i(e(t).from.symbol.toUpperCase()),1)]),a("dl",Qo,[a("dt",null,"Max "+i(e(t).to.symbol.toUpperCase())+" to be withdrawn",1),a("dd",null,i(e(C)(e(u).maxAmountTokenB,e(t).to.decimals))+" "+i(e(t).to.symbol.toUpperCase()),1)]),a("dl",null,[Eo,a("dd",null,[a("a",Ko,[N(i(P(e(u).slippage))+" ",1),s(ge,{modelValue:e(u).slippageDialog,"onUpdate:modelValue":p[7]||(p[7]=q=>e(u).slippageDialog=q),"transition-duration":"100","transition-show":"fade","transition-hide":"fade"},{default:c(()=>[s(ne,null,{default:c(()=>[s(z,null,{default:c(()=>[s(we,{modelValue:e(u).slippage,"onUpdate:modelValue":[p[6]||(p[6]=q=>e(u).slippage=q),e(V)],spread:"","no-caps":"",unelevated:"",ripple:!1,"toggle-color":"secondary",color:"white","text-color":"dark",options:[{label:"0.1%",value:.001},{label:"0.5%",value:.005},{label:"1%",value:.01},{label:"5%",value:.05}]},null,8,["modelValue","onUpdate:modelValue"])]),_:1})]),_:1})]),_:1},8,["modelValue"])])])])]),s(H,{class:"q-mt-md"}),s(he,{class:"q-mt-md q-mx-auto"}),a("div",Do,[s(D,{loading:e(u).swapping,disable:!e(u).active||!e(m)||!e(u).amountTokenA,rounded:"",ripple:!1,onClick:e(o)},{default:c(()=>[N(" Add Liquidity ")]),_:1},8,["loading","disable","onClick"])]),e(m)?(M(),U("div",jo,[a("div",Fo,[s(D,{loading:e(B),class:"swap-card__reload",unelevated:"",color:h.$q.dark.isActive?"white":"primary",round:"",onClick:e(_)},{default:c(()=>[s(Ae,{name:e(Te),color:h.$q.dark.isActive?"primary":"white"},null,8,["name","color"])]),_:1},8,["loading","color","onClick"])])])):(M(),U("div",Wo," Pool not found ")),a("div",Ro,[a("dl",null,[Oo,a("dd",null,i(e(b)(e(l),e(I))),1)]),a("dl",null,[a("dt",null,"Pool "+i(e(t).from.symbol)+" balance",1),a("dd",null,i(e(C)(e(w)))+" "+i(e(t).from.symbol),1)]),a("dl",null,[a("dt",null,"Pool "+i(e(t).to.symbol)+" balance",1),a("dd",null,i(e(C)(e(A)))+" "+i(e(t).to.symbol),1)])]),s(Be,{showing:e(t)?.loading,class:"swap-loading",color:"grey"},null,8,["showing"])]),_:1})}}}),Xo=Y({__name:"LiquidityCard",setup(Q){const r=Le("withdraw-tab","deposit");return(t,B)=>{const _=Ho,m=To;return M(),G(ne,{class:"liquidity-tabs swap-card swap-widget"},{default:c(()=>[s(Ee,{modelValue:e(r),"onUpdate:modelValue":B[0]||(B[0]=l=>Z(r)?r.value=l:null),align:"justify","indicator-color":"transparent",class:Qe(t.$q.dark.isActive?"bg-blue-grey-9":"bg-grey-3"),"active-color":"white","active-bg-color":"primary"},{default:c(()=>[s(se,{ripple:!1,label:"Deposit",name:"deposit"}),s(se,{ripple:!1,label:"Withdraw",name:"withdraw"})]),_:1},8,["modelValue","class"]),s(Ke,{modelValue:e(r),"onUpdate:modelValue":B[1]||(B[1]=l=>Z(r)?r.value=l:null),animated:"",class:"bg-transparent"},{default:c(()=>[s(ie,{name:"deposit"},{default:c(()=>[s(_)]),_:1}),s(ie,{name:"withdraw"},{default:c(()=>[s(m)]),_:1})]),_:1},8,["modelValue"])]),_:1})}}}),zo={},Yo={class:"main-block row justify-center"},Go={class:"row justify-center col-12"};function Jo(Q,r){const t=be,B=Xo,_=Se,m=xe;return M(),U(We,null,[s(t,{class:"q-mt-lg"}),a("div",Yo,[a("div",Go,[s(B)])]),s(_,{class:"q-mt-lg"}),s(m,{class:"q-mt-lg"})],64)}const it=De(zo,[["render",Jo]]);export{it as default};
