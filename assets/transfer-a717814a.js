import{_ as L,o as K,j as $,m as O,u as z,n as U,t as V,p as E,q as P,s as x,w as Q,x as R,y as q,z as F,A as k,B as H,C as W,P as M,h as j,S as J,L as X,F as G,G as Z,H as C,N as Y,I as ee,J as y,Q as te,k as u,K as T,O as A,R as i,U as D,V as s,W as N,X as ae}from"./index-1b8fea5b.js";import{u as I,s as se,a as ne,f as oe,Q as B,o as ie,b as re,_ as le}from"./token-d4879e40.js";const ce={},de={class:"swap-content"},ue=O('<div class="row"><div class="swap-content__title"> Compliant DeFi with KYC </div><div class="swap-content__details"><p> Compliant DeFi with KYC (Know Your Customer) and AML (Anti-Money Laundering) refers to a type of decentralized finance (DeFi) that incorporates customer identification and anti-money laundering measures to ensure compliance with regulatory requirements. </p><p> KYC refers to the process of verifying the identity of a customer to assess their risk profile and prevent illegal activities such as money laundering and financing of terrorism. In Compliant DeFi with KYC, users are required to provide personal information and undergo identity verification procedures before they can participate in DeFi activities. </p><p> AML refers to the set of policies, procedures, and regulations aimed at detecting and preventing money laundering. In Compliant DeFi with AML, transactions are monitored and analyzed to identify any suspicious or illegal activities. </p><p> By incorporating KYC and AML measures, Compliant DeFi aims to enhance the transparency and security of DeFi transactions while ensuring regulatory compliance. This helps to mitigate the risk of illegal activities in the DeFi ecosystem and enhance the trust and confidence of users, regulators, and other stakeholders. In conclusion, Compliant DeFi with KYC and AML is a new and evolving segment of the DeFi ecosystem that seeks to balance the benefits of decentralized finance with the need for regulatory compliance and security. </p></div></div><div class="row"><div class="swap-content__title"> What zKKYC? What are the benefits? </div><div class="swap-content__details"><p> zKKYC (Zero-Knowledge KYC) is a privacy-preserving technology that enables users to prove their identity without revealing their personal information. It is based on zero-knowledge proofs, a cryptographic technique that allows users to prove the validity of information without revealing the actual data. zKKYC provides a number of benefits over traditional KYC (Know Your Customer) methods that rely on sharing personal information with the platform or a third party: </p><ul class="swap-details"><li> Privacy: zKKYC allows users to prove their identity without revealing their personal information, providing greater privacy and control over their data. </li><li> Security: zKKYC eliminates the risk of personal information being stolen or misused, as the information is not stored or transmitted. </li><li> Convenience: zKKYC enables users to complete the KYC process quickly and easily, without having to provide personal information or wait for manual verification. </li><li> Compliance: zKKYC enables DeFi platforms to comply with regulatory requirements while still preserving user privacy and security. In conclusion, zKKYC is a cutting-edge technology that provides a solution to the challenges posed by traditional KYC methods and offers numerous benefits to both users and platforms in the DeFi ecosystem. </li></ul></div></div>',2),pe=[ue];function fe(f,e){return K(),$("div",de,pe)}const he=L(ce,[["render",fe]]);function me(){const f=z(),{notify:e}=U(),h=V(f,"cluster"),r=E(!1);async function m(w,{onSuccess:t,onError:g,idx:o,commitment:l=P,sendTimeout:_=x,confirmTimeout:b=Q}={}){o=o??"";let c=e({progress:!0,type:"ongoing",message:o?`Sending transaction "${o}" ...`:"Sending transaction...",timeout:_});const n={label:"Close",color:"white"};r.value=!0;let a="";try{a=String(await w)}catch(p){r.value=!1,c(),String(p?.message).startsWith("User rejected")||e({message:o?`Transaction "${o}" error`:"Transaction error",caption:p?.message,type:"negative",timeout:0,actions:[n]});return}const d={label:"Explore",color:"white",target:"_blank",href:`https://solscan.io/tx/${a}?cluster=${h.value}`,onClick:()=>!1};try{c(),c=e({progress:!0,type:"ongoing",message:o?`Confirming transaction "${o}" ...`:"Confirming transaction...",actions:[d],timeout:b});const p=await f.connection.getLatestBlockhash(),S=await f.connection.confirmTransaction({blockhash:p.blockhash,lastValidBlockHeight:p.lastValidBlockHeight,signature:a},l);if(c(),S.value.err)throw new Error(JSON.stringify(S.value.err));c=e({message:o?`Transaction "${o}" confirmed`:"Transaction confirmed",type:"positive",actions:[d]}),t&&t(a)}catch(p){c(),e({message:o?`Transaction "${o}" error`:"Transaction error",caption:p.message,type:"negative",timeout:0,actions:[d,n]}),g&&g(p),console.error(p)}finally{r.value=!1}}return{monitorTransaction:m,sending:r}}const _e=R("transfer",()=>{const{monitorTransaction:f}=me(),e=z(),{getTokens:h}=I(),r=0,m=q(),w=F({image:se,value:"sol",label:"sol"}),t=F({address:"",value:void 0,loading:!1,token:w,fee:r,valid:!1});function g(n){t.value=n}function o(n){t.token=n}function l(){t.address="",t.value=void 0,t.fee=r}k(()=>t.token,()=>{l()}),k(()=>t.address,async()=>{t.valid=await H(t.address)}),k([()=>t.valid,()=>t.value],async([n,a])=>{n&&Number(a)>0?b():t.fee=r});async function _(){const n=new M(m.value?.publicKey),a=new M(t.address),v=new j().add(J.transfer({fromPubkey:n,toPubkey:a,lamports:Number(t.value)*X})),d=(await e.connection.getLatestBlockhash("finalized")).blockhash;return v.recentBlockhash=d,v.feePayer=m.value?.publicKey,v}async function b(){const n=await _();t.fee=await W(n,e.connection)}async function c(){try{t.loading=!0;const n=await _(),{instructions:a}=n;console.log("instructions => ",a),await f(G(e.connection,m.value,a,[]),{onSuccess:async()=>{console.log("[Transaction] Success"),l(),h()}})}finally{t.loading=!1}}return{state:t,setMax:g,setToken:o,transferSOL:c}}),ge={class:"swap-form"},ve={class:"swap-field"},ye={class:"swap-field__info"},we={class:"row items-end"},be=i("div",{class:"col-3 swap-field__label"}," FROM: ",-1),ke=i("div",{class:"col-2 swap-field__label"}," AMOUNT ",-1),Ce={class:"col swap-field__balance"},Te={class:"row justify-between",style:{gap:"10px"}},Ke={class:"transfer-address"},Se=i("div",{class:"col transfer-address__label"}," Address ",-1),Fe={class:"swap-info"},Me=i("dt",null,"Transfer fee:",-1),Ye={class:"swap-submit transfer-submit"},Ae=Z({__name:"TransferCard",setup(f){const{state:e,setMax:h,transferSOL:r,setToken:m}=_e(),{state:w}=I(),{handleSearchToken:t,options:g,tokenBalance:o}=ne(),l=C(()=>o(e.token.label)),_=C(()=>l.value===0);async function b(){if(!e.valid)return Y.create({type:"negative",timeout:2e3,message:"Not valid address"});r()}const c=C(()=>Number(e.value)>0&&e.address.length>=44);return k(()=>e.value,n=>{Number(n)>l.value&&(e.value=l.value,Y.create({type:"warning",timeout:1500,message:"Insufficient funds!"}))}),(n,a)=>{const v=le;return K(),ee(te,{class:"swap-card"},{default:y(()=>[u(A,{class:"swap-card__header"},{default:y(()=>[T(" Transfer ")]),_:1}),u(A,{class:"swap-card__body"},{default:y(()=>[i("div",ge,[i("div",ve,[i("div",ye,[i("div",we,[be,ke,i("div",Ce," Balance: "+D(s(oe)(s(l))),1)])]),i("div",Te,[u(v,{options:s(g),onHandleSearchToken:s(t),onSetToken:s(m)},null,8,["options","onHandleSearchToken","onSetToken"]),u(B,{modelValue:s(e).value,"onUpdate:modelValue":a[1]||(a[1]=d=>s(e).value=d),maxlength:14,outlined:"",placeholder:"0.0",class:"swap-input col",disable:s(_),onKeypress:s(ie)},{append:y(()=>[u(N,{dense:"",unelevated:"",ripple:!1,class:"swap-input__max",onClick:a[0]||(a[0]=d=>s(h)(s(l)))},{default:y(()=>[T(" MAX ")]),_:1})]),_:1},8,["modelValue","disable","onKeypress"])])])]),i("div",Ke,[Se,u(B,{modelValue:s(e).address,"onUpdate:modelValue":a[2]||(a[2]=d=>s(e).address=d),disable:s(_),maxlength:50,outlined:"",class:"swap-input col"},null,8,["modelValue","disable"])]),i("div",Fe,[i("dl",null,[Me,i("dd",null,D(s(e).fee),1)])]),i("div",Ye,[u(N,{loading:s(e).loading,disable:!s(c),rounded:"",ripple:!1,onClick:b},{default:y(()=>[T(" Send ")]),_:1},8,["loading","disable"])])]),_:1}),u(re,{showing:s(w).loading,class:"swap-loading",color:"grey"},null,8,["showing"])]),_:1})}}}),De={};function Ne(f,e){const h=Ae,r=he;return K(),$(ae,null,[u(h),u(r)],64)}const $e=L(De,[["render",Ne]]);export{$e as default};
