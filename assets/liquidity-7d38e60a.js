import{_ as xe,a as Me}from"./AppDescription-9203de90.js";import{_ as ce}from"./PolicyCard.vue_vue_type_script_setup_true_lang-ecc0fe55.js";import{_ as de}from"./SelectPool.vue_vue_type_script_setup_true_lang-4769b819.js";import{Z as z,A as k,$ as re,M as Z,L as $e,J as W,o as C,a2 as Y,a3 as c,a8 as e,j as L,k as i,aA as G,aB as qe,a7 as a,aC as Ce,aD as Ve,aE as se,a5 as U,aa as u,ax as ee,aF as Pe,x as me,y as pe,B as ne,C as ke,F as fe,G as _e,I as ve,aG as q,W as ge,N as j,ak as S,aH as I,a1 as we,a9 as oe,ab as N,ac as te,ad as K,am as Ae,a4 as le,a6 as J,an as Be,ao as Te,ap as ye,ae as he,aq as be,a0 as Ne,ag as Ue,ah as Le,U as Ie,H as Ee,aI as ie,aJ as Qe,aK as Ke,aL as ue,aM as De,_ as Fe,ai as je}from"./index-33cf60a3.js";import{u as O}from"./swap-d290b7ed.js";import{o as ae,_ as We}from"./SelectToken.vue_vue_type_script_setup_true_lang-d3e2da4a.js";import{_ as Re}from"./AppDescriptionTop-557a275a.js";import"./PoolsListItem.vue_vue_type_script_setup_true_lang-c70ea80f.js";import"./internal-b113e877.js";const He={key:0,class:"select-token-pair__selected-prepend q-mr-xs"},Oe=["src","alt"],Xe={key:1,class:"text-body2"},Ge={avatar:"",class:"row q-mr-sm q-pr-xs"},Je=["src"],ze=["src"],Ye={class:"row items-center"},Ze=a("span",null,"/",-1),eo=z({__name:"SelectPair",setup(E){const m=O(),{state:t}=m,A=k(()=>m.tokenSwapsAllFiltered),{handleFilterToken:f,tokens:d}=re();f(Z);const n=k(()=>(A.value?.map(o=>({tokenA:o.data.tokenAMint.toBase58(),tokenB:o.data.tokenBMint.toBase58()})).filter((o,r,T)=>{const x=T.findIndex(V=>V.tokenA===o.tokenA&&V.tokenB===o.tokenB||V.tokenA===o.tokenB&&V.tokenB===o.tokenA);return x===-1||x===r})).map(o=>{const r=d.value.find(x=>x.mint===o.tokenA),T=d.value.find(x=>x.mint===o.tokenB);return{value:{tokenA:r,tokenB:T},label:`${r?.symbol}/${T?.symbol}`}}).filter(o=>o.value.tokenA&&o.value.tokenB)),l=$e();return W([()=>t.from,()=>t.to,n],([s,o])=>{l.value=n.value.find(r=>s.mint===r.value.tokenA?.mint&&o.mint===r.value.tokenB?.mint||s.mint===r.value.tokenB?.mint&&o.mint===r.value.tokenA?.mint)},{immediate:!0}),W(l,()=>{l.value&&(t.from=l.value.value.tokenA,t.to=l.value.value.tokenB)},{immediate:!0}),(s,o)=>(C(),Y(Pe,{modelValue:e(l),"onUpdate:modelValue":o[0]||(o[0]=r=>ee(l)?l.value=r:null),"option-disable":"inactive","popup-content-class":"select-token-pair-popup transition-duration",outlined:"",options:e(n),dense:"","options-dense":!1,class:"select-token-pair",standout:!1},{prepend:c(()=>[e(l)?(C(),L("div",He,[i(G,null,{default:c(()=>[i(qe,{src:e(l)?.value.tokenA.image,alt:e(l)?.value.tokenA.symbol},null,8,["src","alt"])]),_:1}),i(G,null,{default:c(()=>[a("img",{src:e(l)?.value.tokenB.image,alt:e(l)?.value.tokenB.symbol},null,8,Oe)]),_:1})])):(C(),L("div",Xe," Select a pair of tokens "))]),option:c(r=>[i(Ce,Ve(r.itemProps,{class:"token-select__token items-center"}),{default:c(()=>[a("div",Ge,[i(G,null,{default:c(()=>[a("img",{src:r.opt.value.tokenA.image},null,8,Je)]),_:2},1024),i(G,null,{default:c(()=>[a("img",{src:r.opt.value.tokenB.image},null,8,ze)]),_:2},1024)]),a("div",Ye,[i(se,null,{default:c(()=>[U(u(r.opt.value.tokenA.symbol),1)]),_:2},1024),Ze,i(se,null,{default:c(()=>[U(u(r.opt.value.tokenB.symbol),1)]),_:2},1024)])]),_:2},1040)]),_:1},8,["modelValue","options"]))}}),oo=me("liquidity-withdraw",()=>{const E=pe(),m=ne(),t=ke(),{publicKey:A}=fe(),{notify:f}=_e(),d=O(),n=k(()=>d.tokenSwap),l=k(()=>d.state),s=k(()=>d.swapClient),o=ve({slippageDialog:!1,swapping:!1,active:!1,slippage:.01,poolAmount:0,minAmountTokenA:0,minAmountTokenB:0}),r=async()=>{const M=q(o.poolAmount,I)/l.value.poolTokenSupply;(o.poolAmount===0||Number.isNaN(o.poolAmount))&&(o.minAmountTokenA=0,o.minAmountTokenB=0),o.minAmountTokenA=Math.floor(M*l.value.poolBalance[l.value.from.mint]*(1-o.slippage)*(1-l.value.fees.ownerWithdraw)),o.minAmountTokenB=Math.floor(M*l.value.poolBalance[l.value.to.mint]*(1-o.slippage)*(1-l.value.fees.ownerWithdraw))};W([()=>l.value.poolBalance,()=>o.poolAmount,()=>o.slippage],()=>r(),{immediate:!0});function T(){d.loadPoolTokenAccounts(),d.reloadUserLP(),o.poolAmount=0}async function x(){if(!m.certificateValid)return ge();if(!n.value||!A.value){console.log("Pool is not selected...");return}if(t.value.publicKey||f({type:"info",message:"Please connect your wallet first"}),o.poolAmount>d.userPoolsTokens[n.value.data.poolMint.toBase58()]){f({type:"negative",message:"Insufficient LP tokens balance"});return}try{o.swapping=!0;let _=o.minAmountTokenA,B=o.minAmountTokenB,y=l.value.from,w=l.value.to;n.value.data.tokenBMint.toBase58()===l.value.from.mint&&(_=o.minAmountTokenB,B=o.minAmountTokenA,y=l.value.to,w=l.value.from);const v=await j(n.value.data.tokenAMint,t.value.publicKey),g=await j(n.value.data.tokenBMint,t.value.publicKey),h=await j(n.value.data.poolMint,t.value.publicKey);console.log("slippage = ",o.slippage);const b=s.value.swapAuthority(n.value.pubkey);console.log("source = ",h.toBase58()),console.log("destTokenA = ",v.toBase58()),console.log("destTokenB = ",g.toBase58()),console.log("swapAuthority = ",b.toBase58()),console.log("tokenSwap = ",n.value.pubkey.toBase58()),console.log("poolMint = ",n.value.data.poolMint.toBase58()),console.log("swapTokenA Mint = ",n.value.data.tokenAMint.toBase58()),console.log("swapTokenA = ",n.value.data.tokenA.toBase58()),console.log("swapTokenB Mint = ",n.value.data.tokenBMint.toBase58()),console.log("swapTokenB = ",n.value.data.tokenB.toBase58()),console.log("TokenA = ",y.symbol),console.log("minimumTokenA = ",_),console.log("minimumTokenA = ",S(_,y.decimals)),console.log("TokenB = ",w.symbol),console.log("minimumTokenB = ",B),console.log("minimumTokenB = ",S(B,w.decimals)),console.log("poolTokenAmount = ",o.poolAmount),console.log("poolTokenAmount = ",q(o.poolAmount,I)),console.log({tokenSwap:n.value.pubkey,poolMint:n.value.data.poolMint,poolFee:n.value.data.poolFeeAccount,source:h,destTokenA:v,destTokenB:g,swapTokenA:n.value.data.tokenA,swapTokenB:n.value.data.tokenB,poolTokenAmount:q(o.poolAmount,I),minimumTokenA:_,minimumTokenB:B,tokenAMint:n.value.data.tokenAMint,tokenBMint:n.value.data.tokenBMint});const Q=await s.value.withdrawAllTokenTypes({tokenSwap:n.value.pubkey,poolMint:n.value.data.poolMint,poolFee:n.value.data.poolFeeAccount,source:h,destTokenA:v,destTokenB:g,swapTokenA:n.value.data.tokenA,swapTokenB:n.value.data.tokenB,poolTokenAmount:q(o.poolAmount,I),minimumTokenA:_,minimumTokenB:B,tokenAMint:n.value.data.tokenAMint,tokenBMint:n.value.data.tokenBMint},{commitment:"confirmed"});f({message:"Transaction confirmed",type:"positive",actions:[{label:"Explore",color:"white",target:"_blank",href:`https://explorer.solana.com/tx/${Q}?cluster=${E.cluster}`,onClick:()=>!1}]}),T()}catch(_){console.log(_),console.error(_.logs),`${_}`.includes("User rejected the request")||f({type:"negative",message:`${_}`})}finally{o.swapping=!1}}function V(){o.slippageDialog=!1}return{state:o,closeSlippage:V,depositBothTokens:x}}),to={class:"swap-form q-mt-md"},ao={class:"swap-field"},no={class:"swap-field__info"},lo={class:"row"},so=a("div",{class:"col-2 swap-field__label"}," AMOUNT ",-1),io={class:"col row justify-end swap-field__balance q-pr-sm"},uo={key:0,class:"insufficient-error"},co={class:"row justify-between",style:{gap:"10px"}},ro={class:"swap-info q-mt-md q-pt-xs"},mo={class:"text-weight-medium"},po={class:"text-weight-medium"},ko=a("dt",null,"Slippage Tolerance",-1),fo={href:"#"},_o=a("dt",null,"Withdraw fee",-1),vo={class:"swap-submit q-mt-md"},go={key:0,class:"text-weight-medium fs-13 text-center q-mt-md text-negative"},wo={key:1,class:"row q-mt-md text-center relative-position full-width"},Ao={class:"absolute-right swap-rate__refresh"},Bo={class:"swap-info q-mt-lg q-pt-sm"},To=a("dt",null,"LP tokens total",-1),yo=z({__name:"WithdrawBothCard",setup(E){const m=O(),{state:t,loadingPoolTokens:A,loadPoolTokenAccounts:f}=m,d=k(()=>m.tokenSwap),{certificateExpired:n}=we(),l=oo(),{state:s,depositBothTokens:o,closeSlippage:r}=l,T=k(()=>d.value&&m.userPoolsTokens[d.value.data.poolMint.toBase58()]||0),x=k(()=>t.poolBalance[t.from.mint]?S(t.poolBalance[t.from.mint],t.from.decimals):0),V=k(()=>t.poolBalance[t.to.mint]?S(t.poolBalance[t.to.mint],t.to.decimals):0),M=y=>be.format(y);function _(){s.poolAmount=S(T.value,I)}const B=k(()=>Number(q(s.poolAmount,I))>T.value?"Insufficient funds":!1);return W([()=>s.poolAmount,T],()=>{s.active=!B.value}),(y,w)=>{const v=eo,g=de,h=ce;return C(),Y(J,{class:"swap-card__body"},{default:c(()=>[i(v),a("div",to,[a("div",ao,[a("div",no,[a("div",lo,[so,a("div",io,[e(B)?(C(),L("div",uo," Insufficient funds ")):oe("",!0),U(" Balance: "+u(e(N)(e(S)(e(T),e(I)))),1)])])]),a("div",co,[i(te,{modelValue:e(s).poolAmount,"onUpdate:modelValue":w[0]||(w[0]=b=>e(s).poolAmount=b),maxlength:14,outlined:"",placeholder:"0.0",class:"swap-input col",onKeypress:e(ae)},{append:c(()=>[i(K,{dense:"",unelevated:"",ripple:!1,class:"swap-input__max",onClick:_},{default:c(()=>[U(" MAX ")]),_:1})]),_:1},8,["modelValue","onKeypress"])])])]),a("div",ro,[a("dl",mo,[a("dt",null,"Min "+u(e(t).from.symbol.toUpperCase())+" received",1),a("dd",null,u(e(N)(e(S)(e(s).minAmountTokenA,e(t).from.decimals),e(t).from.decimals))+" "+u(e(t).from.symbol.toUpperCase()),1)]),a("dl",po,[a("dt",null,"Min "+u(e(t).to.symbol.toUpperCase())+" received",1),a("dd",null,u(e(N)(e(S)(e(s).minAmountTokenB,e(t).to.decimals),e(t).to.decimals))+" "+u(e(t).to.symbol.toUpperCase()),1)]),a("dl",null,[ko,a("dd",null,[a("a",fo,[U(u(M(e(s).slippage))+" ",1),i(Ae,{modelValue:e(s).slippageDialog,"onUpdate:modelValue":w[2]||(w[2]=b=>e(s).slippageDialog=b),"transition-duration":"100","transition-show":"fade","transition-hide":"fade"},{default:c(()=>[i(le,null,{default:c(()=>[i(J,null,{default:c(()=>[i(Be,{modelValue:e(s).slippage,"onUpdate:modelValue":[w[1]||(w[1]=b=>e(s).slippage=b),e(r)],spread:"","no-caps":"",unelevated:"",ripple:!1,"toggle-color":"secondary",color:"white","text-color":"dark",options:[{label:"0.1%",value:.001},{label:"0.5%",value:.005},{label:"1%",value:.01},{label:"5%",value:.05}]},null,8,["modelValue","onUpdate:modelValue"])]),_:1})]),_:1})]),_:1},8,["modelValue"])])])]),a("dl",null,[_o,a("dd",null,u(M(e(t).fees.ownerWithdraw))+" SOL",1)])]),i(g,{class:"q-mt-md"}),i(h,{class:"q-mt-md q-mx-auto"}),a("div",vo,[i(K,{loading:e(s).swapping,disable:!e(s).active||!e(d)||!e(s).poolAmount||e(n),rounded:"",ripple:!1,onClick:e(o)},{default:c(()=>[U(" Remove Liquidity ")]),_:1},8,["loading","disable","onClick"])]),e(d)?(C(),L("div",wo,[a("div",Ao,[i(K,{loading:e(A),class:"swap-card__reload",unelevated:"",color:y.$q.dark.isActive?"white":"primary",round:"",onClick:e(f)},{default:c(()=>[i(Te,{name:e(ye),color:y.$q.dark.isActive?"primary":"white"},null,8,["name","color"])]),_:1},8,["loading","color","onClick"])])])):(C(),L("div",go," Pool not found ")),a("div",Bo,[a("dl",null,[To,a("dd",null,u(e(S)(e(t).poolTokenSupply,e(I))),1)]),a("dl",null,[a("dt",null,"Pool "+u(e(t).from.symbol)+" balance",1),a("dd",null,u(e(N)(e(x)))+" "+u(e(t).from.symbol),1)]),a("dl",null,[a("dt",null,"Pool "+u(e(t).to.symbol)+" balance",1),a("dd",null,u(e(N)(e(V)))+" "+u(e(t).to.symbol),1)])]),i(he,{showing:e(t)?.loading,class:"swap-loading",color:"grey"},null,8,["showing"])]),_:1})}}}),ho=me("liquidity",()=>{const E=pe(),m=ne(),t=ke(),{publicKey:A}=fe(),{notify:f}=_e(),d=O(),n=k(()=>d.tokenSwap),l=k(()=>d.state),s=k(()=>d.swapClient),o=ve({slippageDialog:!1,swapping:!1,active:!1,slippage:.01,poolAmount:0,amountTokenA:0,amountTokenB:0,maxAmountTokenA:0,maxAmountTokenB:0}),r=async(M=!1)=>{const _=Number((M?o.amountTokenB:o.amountTokenA)??0),B=Number(S(Number(l.value.poolBalance[l.value.from.mint]??0),l.value.from.decimals)),y=Number(S(Number(l.value.poolBalance[l.value.to.mint]??0),l.value.to.decimals)),w=M?B/y:y/B;if(_===0||Number.isNaN(_)){o.poolAmount=0,M?(o.amountTokenA=0,o.maxAmountTokenA=0):(o.amountTokenB=0,o.maxAmountTokenB=0);return}M?o.amountTokenA=Number(N(w*o.amountTokenB,l.value.to.decimals)):o.amountTokenB=Number(N(w*o.amountTokenA,l.value.from.decimals)),o.maxAmountTokenA=o.amountTokenA*(1+o.slippage),o.maxAmountTokenB=o.amountTokenB*(1+o.slippage);const v=o.amountTokenA,g=l.value.from;o.poolAmount=Math.floor(q(v,g.decimals)/l.value.poolBalance[g.mint]*l.value.poolTokenSupply)};W([()=>l.value.poolBalance,()=>o.slippage],()=>r(),{immediate:!0});function T(){d.loadPoolTokenAccounts(),d.reloadUserLP(),o.maxAmountTokenA=0,o.maxAmountTokenB=0,o.amountTokenA=0,o.amountTokenB=0}async function x(){if(!m.certificateValid)return ge();if(!n.value||!A.value){console.log("Pool is not selected...");return}t.value.publicKey||f({type:"info",message:"Please connect your wallet first"});const _=Number(q(o.amountTokenA??0,l.value.from.decimals)),B=Number(q(m.tokenBalance(l.value.from.mint)??0,l.value.from.decimals));if(_>B){f({type:"negative",message:`Insufficient balance ${l.value.from.symbol}.`});return}const y=Number(q(o.amountTokenB??0,l.value.to.decimals)),w=Number(q(m.tokenBalance(l.value.to.mint)??0,l.value.to.decimals));if(y>w){f({type:"negative",message:`Insufficient balance ${l.value.to.symbol}.`});return}try{o.swapping=!0;let v=o.amountTokenA,g=o.amountTokenB,h=l.value.from,b=l.value.to;n.value.data.tokenBMint.toBase58()===l.value.from.mint&&(v=o.amountTokenB,g=o.amountTokenA,h=l.value.to,b=l.value.from);const Q=await j(n.value.data.tokenAMint,t.value.publicKey),D=await j(n.value.data.tokenBMint,t.value.publicKey),F=await j(n.value.data.poolMint,t.value.publicKey);console.log("slippage = ",o.slippage);const $=s.value.swapAuthority(n.value.pubkey);console.log("destination = ",F.toBase58()),console.log("userTokenA = ",Q.toBase58()),console.log("userTokenB = ",D.toBase58()),console.log("swapAuthority = ",$.toBase58()),console.log("tokenSwap = ",n.value.pubkey.toBase58()),console.log("poolMint = ",n.value.data.poolMint.toBase58()),console.log("swapTokenA Mint = ",n.value.data.tokenAMint.toBase58()),console.log("swapTokenA = ",n.value.data.tokenA.toBase58()),console.log("swapTokenB Mint = ",n.value.data.tokenBMint.toBase58()),console.log("swapTokenB = ",n.value.data.tokenB.toBase58()),console.log("TokenA = ",h.symbol),console.log("maximumTokenA = ",v),console.log("maximumTokenA = ",q(v,h.decimals)),console.log("TokenB = ",b.symbol),console.log("maximumTokenB = ",g),console.log("maximumTokenB = ",q(g,b.decimals)),console.log("poolTokenAmount = ",o.poolAmount);const p=await s.value.depositAllTokenTypes({proofRequest:m.certificate?.pubkey,tokenSwap:n.value.pubkey,poolMint:n.value.data.poolMint,destination:F,userTokenA:Q,userTokenB:D,swapTokenA:n.value.data.tokenA,swapTokenB:n.value.data.tokenB,poolTokenAmount:o.poolAmount,maximumTokenA:Math.floor(q(v,h.decimals)*(1+o.slippage)),maximumTokenB:Math.floor(q(g,b.decimals)*(1+o.slippage)),tokenAMint:n.value.data.tokenAMint,tokenBMint:n.value.data.tokenBMint},{commitment:"confirmed"});f({message:"Transaction confirmed",type:"positive",actions:[{label:"Explore",color:"white",target:"_blank",href:`https://explorer.solana.com/tx/${p}?cluster=${E.cluster}`,onClick:()=>!1}]}),T()}catch(v){console.log(v),console.error(v.logs),`${v}`.includes("User rejected the request")||f({type:"negative",message:`${v}`})}finally{o.swapping=!1}}function V(){o.slippageDialog=!1}return{state:o,calcRate:r,closeSlippage:V,depositBothTokens:x}}),bo={class:"swap-form"},So={class:"swap-field"},xo={class:"swap-field__info"},Mo={class:"row items-end justify-end"},$o={class:"col-8 col-xs-10 row justify-end swap-field__balance"},qo={key:0,class:"insufficient-error"},Co={class:"swap-field q-pt-xs"},Vo={class:"swap-field__info q-mt-sm"},Po={class:"row items-end justify-end"},No={class:"col-8 col-xs-10 row justify-end swap-field__balance"},Uo={key:0,class:"insufficient-error"},Lo={class:"swap-info q-mt-md q-pt-xs"},Io={class:"text-weight-medium"},Eo=a("dt",null,"LP tokens received",-1),Qo={class:"text-weight-medium"},Ko={class:"text-weight-medium"},Do=a("dt",null,"Slippage Tolerance",-1),Fo={href:"#"},jo={class:"swap-submit q-mt-md"},Wo={key:0,class:"text-weight-medium fs-13 text-center q-mt-md text-negative"},Ro={key:1,class:"row q-mt-md text-center relative-position full-width"},Ho={class:"absolute-right swap-rate__refresh"},Oo={class:"swap-info q-mt-lg q-pt-sm"},Xo=a("dt",null,"Your LP tokens",-1),Go=z({__name:"DepositBothCard",setup(E){const m=O(),{state:t,loadingPoolTokens:A,loadPoolTokenAccounts:f}=m,d=k(()=>m.tokenSwap),n=k(()=>d.value&&m.userPoolsTokens[d.value.data.poolMint.toBase58()]||0),l=ho(),{state:s,depositBothTokens:o,calcRate:r,closeSlippage:T}=l,{certificateExpired:x}=we(),{handleSearchToken:V,handleFilterToken:M,tokens:_}=re();M(Z);const B=ne(),y=k(()=>t.poolBalance[t.from.mint]?S(t.poolBalance[t.from.mint],t.from.decimals):0),w=k(()=>t.poolBalance[t.to.mint]?S(t.poolBalance[t.to.mint],t.to.decimals):0),v=$=>be.format($),g=k(()=>B.tokenBalance(t.from.mint)),h=k(()=>B.tokenBalance(t.to.mint));function b($,p){t[p?"to":"from"]=$}function Q($=!1){const p=$?"to":"from",R=$?"amountTokenB":"amountTokenA",X=$?h.value:g.value;t[p]?.mint===Z||t[p]?.mint===Ne?s[R]=X-Ue-3*Le-Ie:s[R]=X,r($)}const D=k(()=>Number(s.amountTokenA)>g.value?"Insufficient funds":!1),F=k(()=>Number(s.amountTokenB)>h.value?"Insufficient funds":!1);return W([()=>s.amountTokenA,g,()=>s.amountTokenB,h],$=>{s.active=!D.value&&!F.value}),($,p)=>{const R=We,X=de,Se=ce;return C(),Y(J,{class:"swap-card__body"},{default:c(()=>[a("div",bo,[a("div",So,[a("div",xo,[a("div",Mo,[a("div",$o,[e(D)?(C(),L("div",qo,u(e(D)),1)):oe("",!0),U(" Balance: "+u(e(N)(e(g)))+" "+u(e(t).from.symbol),1)])])]),i(te,{modelValue:e(s).amountTokenA,"onUpdate:modelValue":[p[1]||(p[1]=P=>e(s).amountTokenA=P),p[2]||(p[2]=P=>{const H=String(P);H[H.length-1]!=="."&&e(r)()})],maxlength:14,outlined:"",placeholder:"0.0",class:"swap-input",onKeypress:e(ae)},{append:c(()=>[i(K,{dense:"",unelevated:"",ripple:!1,class:"swap-input__max",onClick:p[0]||(p[0]=P=>Q())},{default:c(()=>[U(" MAX ")]),_:1}),i(R,{options:e(_),token:e(t).from,"swap-token":String(e(t).to.symbol),onHandleSearchToken:e(V),onSetToken:b},null,8,["options","token","swap-token","onHandleSearchToken"])]),_:1},8,["modelValue","onKeypress"])]),a("div",Co,[a("div",Vo,[a("div",Po,[a("div",No,[e(F)?(C(),L("div",Uo,u(e(F)),1)):oe("",!0),U(" Balance: "+u(e(N)(e(h)))+" "+u(e(t).to.symbol),1)])])]),i(te,{modelValue:e(s).amountTokenB,"onUpdate:modelValue":[p[4]||(p[4]=P=>e(s).amountTokenB=P),p[5]||(p[5]=P=>{const H=String(P);H[H.length-1]!=="."&&e(r)(!0)})],maxlength:14,outlined:"",placeholder:"0.0",class:"swap-input",onKeypress:e(ae)},{append:c(()=>[i(K,{dense:"",unelevated:"",ripple:!1,class:"swap-input__max",onClick:p[3]||(p[3]=P=>Q(!0))},{default:c(()=>[U(" MAX ")]),_:1}),i(R,{"swap-token":String(e(t).from.symbol),options:e(_),direction:!0,token:e(t).to,"destination-unavailable":!e(d),onHandleSearchToken:e(V),onSetToken:b},null,8,["swap-token","options","token","destination-unavailable","onHandleSearchToken"])]),_:1},8,["modelValue","onKeypress"])])]),a("div",Lo,[a("dl",Io,[Eo,a("dd",null,u(e(S)(e(s).poolAmount,e(I))),1)]),a("dl",Qo,[a("dt",null,"Max "+u(e(t).from.symbol.toUpperCase())+" to be withdrawn",1),a("dd",null,u(e(N)(e(s).maxAmountTokenA,e(t).from.decimals))+" "+u(e(t).from.symbol.toUpperCase()),1)]),a("dl",Ko,[a("dt",null,"Max "+u(e(t).to.symbol.toUpperCase())+" to be withdrawn",1),a("dd",null,u(e(N)(e(s).maxAmountTokenB,e(t).to.decimals))+" "+u(e(t).to.symbol.toUpperCase()),1)]),a("dl",null,[Do,a("dd",null,[a("a",Fo,[U(u(v(e(s).slippage))+" ",1),i(Ae,{modelValue:e(s).slippageDialog,"onUpdate:modelValue":p[7]||(p[7]=P=>e(s).slippageDialog=P),"transition-duration":"100","transition-show":"fade","transition-hide":"fade"},{default:c(()=>[i(le,null,{default:c(()=>[i(J,null,{default:c(()=>[i(Be,{modelValue:e(s).slippage,"onUpdate:modelValue":[p[6]||(p[6]=P=>e(s).slippage=P),e(T)],spread:"","no-caps":"",unelevated:"",ripple:!1,"toggle-color":"secondary",color:"white","text-color":"dark",options:[{label:"0.1%",value:.001},{label:"0.5%",value:.005},{label:"1%",value:.01},{label:"5%",value:.05}]},null,8,["modelValue","onUpdate:modelValue"])]),_:1})]),_:1})]),_:1},8,["modelValue"])])])])]),i(X,{class:"q-mt-md"}),i(Se,{class:"q-mt-md q-mx-auto"}),a("div",jo,[i(K,{loading:e(s).swapping,disable:!e(s).active||!e(d)||!e(s).amountTokenA||e(x),rounded:"",ripple:!1,onClick:e(o)},{default:c(()=>[U(" Add Liquidity ")]),_:1},8,["loading","disable","onClick"])]),e(d)?(C(),L("div",Ro,[a("div",Ho,[i(K,{loading:e(A),class:"swap-card__reload",unelevated:"",color:$.$q.dark.isActive?"white":"primary",round:"",onClick:e(f)},{default:c(()=>[i(Te,{name:e(ye),color:$.$q.dark.isActive?"primary":"white"},null,8,["name","color"])]),_:1},8,["loading","color","onClick"])])])):(C(),L("div",Wo," Pool not found ")),a("div",Oo,[a("dl",null,[Xo,a("dd",null,u(e(S)(e(n),e(I))),1)]),a("dl",null,[a("dt",null,"Pool "+u(e(t).from.symbol)+" balance",1),a("dd",null,u(e(N)(e(y)))+" "+u(e(t).from.symbol),1)]),a("dl",null,[a("dt",null,"Pool "+u(e(t).to.symbol)+" balance",1),a("dd",null,u(e(N)(e(w)))+" "+u(e(t).to.symbol),1)])]),i(he,{showing:e(t)?.loading,class:"swap-loading",color:"grey"},null,8,["showing"])]),_:1})}}}),Jo=z({__name:"LiquidityCard",setup(E){const m=Ee("withdraw-tab","deposit");return(t,A)=>{const f=Go,d=yo;return C(),Y(le,{class:"liquidity-tabs swap-card swap-widget"},{default:c(()=>[i(Ke,{modelValue:e(m),"onUpdate:modelValue":A[0]||(A[0]=n=>ee(m)?m.value=n:null),align:"justify","indicator-color":"transparent",class:Qe(t.$q.dark.isActive?"bg-blue-grey-9":"bg-grey-3"),"active-color":"white","active-bg-color":"primary"},{default:c(()=>[i(ie,{ripple:!1,label:"Deposit",name:"deposit"}),i(ie,{ripple:!1,label:"Withdraw",name:"withdraw"})]),_:1},8,["modelValue","class"]),i(De,{modelValue:e(m),"onUpdate:modelValue":A[1]||(A[1]=n=>ee(m)?m.value=n:null),animated:"",class:"bg-transparent"},{default:c(()=>[i(ue,{name:"deposit"},{default:c(()=>[i(f)]),_:1}),i(ue,{name:"withdraw"},{default:c(()=>[i(d)]),_:1})]),_:1},8,["modelValue"])]),_:1})}}}),zo={},Yo={class:"main-block row justify-center"},Zo={class:"row justify-center col-12"};function et(E,m){const t=Re,A=Jo,f=xe,d=Me;return C(),L(je,null,[i(t,{class:"q-mt-lg"}),a("div",Yo,[a("div",Zo,[i(A)])]),i(f,{class:"q-mt-lg"}),i(d,{class:"q-mt-lg"})],64)}const dt=Fe(zo,[["render",et]]);export{dt as default};
