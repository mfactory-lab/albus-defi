import{R as W,v as z,t as C,o as y,V as q,W as m,a0 as t,i as F,$ as l,a2 as f,aa as Z,as as ee,aL as oe,a1 as P,X as J,Y as S,aE as te,j as s,aM as ae,u as X,y as G,aN as ne,C as U,aO as se,aP as le,aQ as re,w as ie,x as ce,z as ue,ar as Y,m as Q,aR as de,aS as H,aT as $,P as x,U as pe,Z as R,aU as me,aV as we,aW as ke,a4 as T,a5 as b,aX as L,au as M,aF as ye,_ as _e}from"./index-2f041995.js";import{_ as fe}from"./SelectToken.vue_vue_type_script_setup_true_lang-3f0069b3.js";import{u as ve,t as j}from"./swap-9ec795db.js";import"./associatedTokenAccount-f90a9496.js";const Se={key:0,class:"policy-card__policy q-pa-md"},Te={class:"policy-card__policy__info"},Fe={class:"policy-card__policy__subtitle"},ge={class:"policy-card__policy__subtitle"},he=l("div",{class:"policy-card__policy__subtitle"}," Rules: ",-1),be={class:"q-ml-xs"},Be={key:0},Ae=W({__name:"SelectPolicyItem",props:{policyData:Object,policy:Object},setup(i){const o=z(),d=C(()=>o.serviceData),w=C(()=>o.serviceLoading);return(h,v)=>(y(),q(J,{class:""},{default:m(()=>[t(w)?P("",!0):(y(),F("div",Se,[l("div",Te,[l("div",Fe," Address: "+f(i.policy?.toBase58()),1),l("div",ge," Name: "+f(t(d)?.name)+" "+f(i.policyData?.name),1),he,l("div",be,[(y(!0),F(Z,null,ee(i.policyData?.rules,(e,g)=>(y(),F("div",{key:g},[e.key!=="maxAge"&&e.key!=="expectedDateTo"||e.label!=="0"?(y(),F("span",Be,f(t(oe)(e.key,e.label,e.value)),1)):P("",!0)]))),128))])])]))]),_:1}))}}),Ne={key:0},De={key:1},Ve=W({__name:"CreatePoolTokenData",props:{balance:[String,Number],mint:String},setup(i){return(o,d)=>(y(),F("div",null,[i.mint?(y(),F("div",Ne,[l("div",null," balance: "+f(i.balance),1),l("div",null,[S(" mint: "+f(t(te)(i.mint))+" ",1),s(ae,{anchor:"top middle",self:"bottom middle",offset:[10,10]},{default:m(()=>[S(f(i.mint),1)]),_:1})])])):(y(),F("div",De," Select token "))]))}});function Ce(){const i=X(),{notify:o}=G(),d=ne(i,"cluster"),w=U(!1);async function h(v,{onSuccess:e,onError:g,idx:c,commitment:B=se,sendTimeout:A=le,confirmTimeout:N=re}={}){c=c??"";let p=o({progress:!0,type:"ongoing",message:c?`Sending transaction "${c}" ...`:"Sending transaction...",timeout:A});const r={label:"Close",color:"white"};w.value=!0;let u="";try{const k=await v;u=String(typeof k=="object"?await k.signature:await v)}catch(k){w.value=!1,p(),String(k?.message).startsWith("User rejected")||o({message:c?`Transaction "${c}" error`:"Transaction error",caption:k?.message,type:"negative",timeout:0,actions:[r]});return}const _={label:"Explore",color:"white",target:"_blank",href:`https://solscan.io/tx/${u}?cluster=${d.value}`,onClick:()=>!1};try{p(),p=o({progress:!0,type:"ongoing",message:c?`Confirming transaction "${c}" ...`:"Confirming transaction...",actions:[_],timeout:N});const k=await i.connection.getLatestBlockhash(),V=await i.connection.confirmTransaction({blockhash:k.blockhash,lastValidBlockHeight:k.lastValidBlockHeight,signature:u},B);if(p(),V.value.err)throw new Error(JSON.stringify(V.value.err));p=o({message:c?`Transaction "${c}" confirmed`:"Transaction confirmed",type:"positive",actions:[_]}),e&&e(u)}catch(k){p(),o({message:c?`Transaction "${c}" error`:"Transaction error",caption:k.message,type:"negative",timeout:0,actions:[_,r]}),g&&g(k),console.error(k)}finally{w.value=!1}}return{monitorTransaction:h,sending:w}}function Pe(){const i=ve(),o=ie(),{publicKey:d}=ce(),w=X(),{monitorTransaction:h}=Ce(),{notify:v}=G(),e=ue({tokenA:void 0,tokenB:void 0,policy:void 0,hostFeeNumerator:0,hostFeeDenominator:1e3,tradeFeeNumerator:0,tradeFeeDenominator:1e3,ownerTradeFeeNumerator:0,ownerTradeFeeDenominator:1e3,ownerWithdrawFeeNumerator:0,ownerWithdrawFeeDenominator:1e3,creating:!1,tokenSwap:void 0,poolMint:void 0,poolFeeAccount:void 0,swapTokenA:void 0,swapTokenB:void 0});async function g(){!d.value||!o.value||(e.tokenSwap=Y.generate(),console.log("[create swap] token swap pk = ",e.tokenSwap.publicKey.toBase58()),console.log("[create swap] token swap sk = ",e.tokenSwap.secretKey.toString()))}async function c(){if(!d.value||!o.value||!e.tokenSwap)return;const p=i.swapClient.swapAuthority(e.tokenSwap.publicKey),r=new Q,u=await de(w.connection,r,d.value,p,9);console.log("[create swap] poolMint = ",u.publicKey.toBase58()),r.instructions.length>0&&await h(H(w.connection,o.value,r.instructions,[u]),{onSuccess:()=>{e.poolMint=u.publicKey,v({type:"positive",message:"Pool mint created successfully."})}})}async function B(){if(!d.value||!o.value||!e.tokenSwap||!e.poolMint)return;if(!e.tokenA||!e.tokenB)return v({type:"negative",message:"Select tokens"});const p=i.swapClient.swapAuthority(e.tokenSwap.publicKey),r=new Q,u=await $(w.connection,r,e.poolMint,d.value),D=await $(w.connection,r,new x(e.tokenA.mint),p,d.value,!0),_=await $(w.connection,r,new x(e.tokenB.mint),p,d.value,!0);console.log("[create swap] poolFeeAccount = ",u.toBase58()),console.log("[create swap] swapTokenA = ",D.toBase58()),console.log("[create swap] swapTokenB = ",_.toBase58()),r.instructions.length>0&&await h(H(w.connection,o.value,r.instructions),{commitment:"finalized",onSuccess:()=>{e.poolFeeAccount=u,e.swapTokenA=D,e.swapTokenB=_,v({type:"positive",message:"Pool accounts created successfully."})}})}async function A(){if(!d.value||!o.value||!e.tokenSwap||!e.poolMint||!e.poolFeeAccount||!e.swapTokenA||!e.swapTokenB)return;if(!e.tokenA||!e.tokenB)return v({type:"negative",message:"Select tokens"});if(!e.policy)return v({type:"negative",message:"Select policy"});console.log("createTokenSwap: ",{tokenSwap:e.tokenSwap.publicKey.toBase58(),poolMint:e.poolMint.toBase58(),poolFee:e.poolFeeAccount.toBase58(),destination:e.poolFeeAccount.toBase58(),tokenA:e.swapTokenA.toBase58(),tokenB:e.swapTokenB.toBase58(),policy:e.policy.pubkey.toBase58(),curveType:j.ConstantProduct,curveParameters:[],fees:{tradeFeeNumerator:e.tradeFeeNumerator,tradeFeeDenominator:e.tradeFeeDenominator,ownerTradeFeeNumerator:e.ownerTradeFeeNumerator,ownerTradeFeeDenominator:e.ownerTradeFeeDenominator,ownerWithdrawFeeNumerator:e.ownerWithdrawFeeNumerator,ownerWithdrawFeeDenominator:e.ownerWithdrawFeeDenominator,hostFeeNumerator:e.hostFeeNumerator,hostFeeDenominator:e.hostFeeDenominator}});const p=await i.swapClient.createTokenSwap({tokenSwap:e.tokenSwap,poolMint:e.poolMint,poolFee:e.poolFeeAccount,destination:e.poolFeeAccount,tokenA:e.swapTokenA,tokenB:e.swapTokenB,policy:e.policy.pubkey,curveType:j.ConstantProduct,curveParameters:[],fees:{tradeFeeNumerator:e.tradeFeeNumerator,tradeFeeDenominator:e.tradeFeeDenominator,ownerTradeFeeNumerator:e.ownerTradeFeeNumerator,ownerTradeFeeDenominator:e.ownerTradeFeeDenominator,ownerWithdrawFeeNumerator:e.ownerWithdrawFeeNumerator,ownerWithdrawFeeDenominator:e.ownerWithdrawFeeDenominator,hostFeeNumerator:e.hostFeeNumerator,hostFeeDenominator:e.hostFeeDenominator}});v({type:"positive",message:`Swap Pool created successfully. ${e.tokenSwap?.publicKey.toBase58()}`}),console.log("[create swap] tokenSwap result = ",p)}function N(){e.hostFeeNumerator=0,e.hostFeeDenominator=1e3,e.tradeFeeNumerator=0,e.tradeFeeDenominator=1e3,e.ownerTradeFeeNumerator=0,e.ownerTradeFeeDenominator=1e3,e.ownerWithdrawFeeNumerator=0,e.ownerWithdrawFeeDenominator=1e3,e.policy=void 0,e.tokenA=void 0,e.tokenB=void 0}return{state:e,reset:N,generateSwapKeypair:g,createPoolMint:c,createPoolAccounts:B,createTokenSwap:A}}const Me={class:"row"},qe={class:"row q-mt-md"},Ue={class:"q-mt-md"},$e=l("div",null,"Policy:",-1),xe={class:"row q-mt-md"},We={class:"row q-mt-md"},Ke={class:"row q-mt-md"},Oe={class:"row q-mt-md"},Ee={class:"q-mt-lg row"},Ie={class:"q-mt-mt"},Qe=l("div",{class:"text-subtitle2"}," Token Swap ",-1),He={style:{"word-break":"break-all"}},Re={key:0},Le={class:"q-mt-sm row"},je={class:"q-mt-xl row"},ze={key:0},Je={class:"q-mt-sm row"},Xe={class:"q-mt-xl row"},Ge=l("div",{class:"text-warning"}," Top up pool tokenA and tokenB accounts before create pool ",-1),Ye={class:"q-mt-xl row"},Ze=W({__name:"CreateSwapCard",setup(i){const{state:o,createTokenSwap:d,createPoolAccounts:w,generateSwapKeypair:h,createPoolMint:v}=Pe(),{handleSearchToken:e,tokens:g}=pe(),c=z(),B=C(()=>c.servicePolicy),A=C(()=>o.tokenA?c.tokenBalance(o.tokenA.mint):0),N=C(()=>o.tokenB?c.tokenBalance(o.tokenB.mint):0);function p(V,n){o[V]=n}const r=U(!1),u=U("");function D(){u.value&&(o.tokenSwap=Y.fromSecretKey(Uint8Array.from(JSON.parse(`[${u.value}]`))))}const _=U("");function k(){_.value&&(o.poolMint=new x(_.value))}return(V,n)=>{const K=fe,O=Ve,E=Ae,I=ye;return y(),q(J,{class:"swap-cardswap-widget full-width"},{default:m(()=>[s(R,{class:"swap-card__header"},{default:m(()=>[S(" Create Pool ")]),_:1}),s(R,{class:"swap-card__body"},{default:m(()=>[l("div",Me,[s(K,{options:t(g),token:t(o).tokenA,"swap-token":String(t(o).tokenA?.symbol),onHandleSearchToken:t(e),onSetToken:n[0]||(n[0]=a=>p("tokenA",a))},null,8,["options","token","swap-token","onHandleSearchToken"]),s(O,{class:"q-ml-lg q-mt-xs",balance:t(A),mint:t(o).tokenA?.mint},null,8,["balance","mint"])]),l("div",qe,[s(K,{options:t(g),token:t(o).tokenB,"swap-token":String(t(o).tokenB?.symbol),onHandleSearchToken:t(e),onSetToken:n[1]||(n[1]=a=>p("tokenB",a))},null,8,["options","token","swap-token","onHandleSearchToken"]),s(O,{class:"q-ml-lg q-mt-xs",balance:t(N),mint:t(o).tokenB?.mint},null,8,["balance","mint"])]),l("div",Ue,[$e,s(me,{modelValue:t(o).policy,"onUpdate:modelValue":n[2]||(n[2]=a=>t(o).policy=a),"option-disable":"inactive","popup-content-class":"transition-duration",outlined:"",options:t(B),dense:"","options-dense":!1,"option-value":"mint","option-label":"name"},{selected:m(()=>[t(o).policy?(y(),q(E,{key:t(o).policy.pubkey,policy:t(o).policy.pubkey,"policy-data":t(o).policy.data},null,8,["policy","policy-data"])):P("",!0)]),option:m(a=>[s(we,ke(a.itemProps,{class:"token-select__token"}),{default:m(()=>[(y(),q(E,{key:a.opt.pubkey,policy:a.opt.pubkey,"policy-data":a.opt.data},null,8,["policy","policy-data"]))]),_:2},1040)]),_:1},8,["modelValue","options"])]),l("div",xe,[s(T,{modelValue:t(o).hostFeeNumerator,"onUpdate:modelValue":n[3]||(n[3]=a=>t(o).hostFeeNumerator=a),class:"q-mr-md",label:"Host fee Numerator"},null,8,["modelValue"]),s(T,{modelValue:t(o).hostFeeDenominator,"onUpdate:modelValue":n[4]||(n[4]=a=>t(o).hostFeeDenominator=a),label:"Host fee Denominator"},null,8,["modelValue"])]),l("div",We,[s(T,{modelValue:t(o).tradeFeeNumerator,"onUpdate:modelValue":n[5]||(n[5]=a=>t(o).tradeFeeNumerator=a),class:"q-mr-md",label:"Trade fee Numerator"},null,8,["modelValue"]),s(T,{modelValue:t(o).tradeFeeDenominator,"onUpdate:modelValue":n[6]||(n[6]=a=>t(o).tradeFeeDenominator=a),label:"Trade fee Denominator"},null,8,["modelValue"])]),l("div",Ke,[s(T,{modelValue:t(o).ownerTradeFeeNumerator,"onUpdate:modelValue":n[7]||(n[7]=a=>t(o).ownerTradeFeeNumerator=a),class:"q-mr-md",label:"Owner trade fee Numerator"},null,8,["modelValue"]),s(T,{modelValue:t(o).ownerTradeFeeDenominator,"onUpdate:modelValue":n[8]||(n[8]=a=>t(o).ownerTradeFeeDenominator=a),label:"Owner trade fee Denominator"},null,8,["modelValue"])]),l("div",Oe,[s(T,{modelValue:t(o).ownerWithdrawFeeNumerator,"onUpdate:modelValue":n[9]||(n[9]=a=>t(o).ownerWithdrawFeeNumerator=a),class:"q-mr-md",label:"Owner withdraw fee Numerator"},null,8,["modelValue"]),s(T,{modelValue:t(o).ownerWithdrawFeeDenominator,"onUpdate:modelValue":n[10]||(n[10]=a=>t(o).ownerWithdrawFeeDenominator=a),label:"Owner withdraw fee Denominator"},null,8,["modelValue"])]),l("div",Ee,[s(b,{class:"q-ml-auto",onClick:t(h)},{default:m(()=>[S(" Generate Swap Keypair ")]),_:1},8,["onClick"])]),l("div",Ie,[Qe,l("div",null,"Public key: "+f(t(o).tokenSwap?.publicKey.toBase58()),1),l("div",He," Secret key: "+f(t(o).tokenSwap?.secretKey.toString()),1),t(o).tokenSwap?(y(),F("div",Re,[s(I,{text:t(o).tokenSwap.secretKey.toString()},null,8,["text"]),S(" Copy Token Swap secret key ")])):P("",!0)]),s(L,{modelValue:t(r),"onUpdate:modelValue":n[12]||(n[12]=a=>M(r)?r.value=a:null),label:"Set token swap from secret key"},{default:m(()=>[s(T,{modelValue:t(u),"onUpdate:modelValue":n[11]||(n[11]=a=>M(u)?u.value=a:null),class:"q-mr-md",label:"Token Swap Secret"},null,8,["modelValue"]),l("div",Le,[s(b,{class:"q-ml-auto",disable:!t(u),onClick:D},{default:m(()=>[S(" Set Swap Keypair ")]),_:1},8,["disable"])])]),_:1},8,["modelValue"]),l("div",je,[s(b,{class:"q-ml-auto",disable:!!t(o).poolMint,onClick:t(v)},{default:m(()=>[S(" Create Pool Mint ")]),_:1},8,["disable","onClick"])]),l("div",null,"Pool mint: "+f(t(o).poolMint?.toBase58()),1),t(o).poolMint?(y(),F("div",ze,[s(I,{text:t(o).poolMint?.toBase58()},null,8,["text"]),S(" Copy Pool Mint public key ")])):P("",!0),s(L,{modelValue:t(r),"onUpdate:modelValue":n[14]||(n[14]=a=>M(r)?r.value=a:null),label:"Set pool mint manually"},{default:m(()=>[s(T,{modelValue:t(_),"onUpdate:modelValue":n[13]||(n[13]=a=>M(_)?_.value=a:null),class:"q-mr-md",label:"Pool Mint"},null,8,["modelValue"]),l("div",Je,[s(b,{class:"q-ml-auto",disable:!t(_),onClick:k},{default:m(()=>[S(" Set Pool Mint ")]),_:1},8,["disable"])])]),_:1},8,["modelValue"]),l("div",Xe,[s(b,{class:"q-ml-auto",onClick:t(w)},{default:m(()=>[S(" Create Pool token accounts ")]),_:1},8,["onClick"])]),l("div",null,"Pool fee account: "+f(t(o).poolFeeAccount?.toBase58()),1),l("div",null,"Pool token A account: "+f(t(o).swapTokenA?.toBase58()),1),l("div",null,"Pool token B account: "+f(t(o).swapTokenB?.toBase58()),1),Ge,l("div",Ye,[s(b,{class:"q-ml-auto",onClick:t(d)},{default:m(()=>[S(" Create Pool ")]),_:1},8,["onClick"])])]),_:1})]),_:1})}}}),eo={},oo={class:"main-block row justify-center"};function to(i,o){const d=Ze;return y(),F("div",oo,[s(d,{class:"q-mt-md"})])}const ro=_e(eo,[["render",to]]);export{ro as default};
