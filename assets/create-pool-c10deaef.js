import{$ as K,B as J,A as C,o as _,a2 as q,a3 as m,a8 as t,i as F,a7 as l,aa as f,ai as Z,ax as ee,aQ as oe,a9 as M,a4 as z,a5 as S,aJ as te,j as s,aR as ae,y as G,G as X,aS as ne,L as $,aT as se,aU as le,aV as re,C as ie,F as ce,I as ue,aw as Y,w as Q,aW as de,aX as H,aY as U,P as x,a0 as pe,a6 as L,aZ as me,a_ as we,a$ as ke,ac as T,ad as B,b0 as R,az as P,aK as ye,_ as _e}from"./index-3bbd2330.js";import{_ as fe}from"./SelectToken.vue_vue_type_script_setup_true_lang-0f76cd8b.js";import{u as ve,s as j}from"./swap-1686ad96.js";const Se={key:0,class:"policy-card__policy q-pa-md"},Te={class:"policy-card__policy__info"},Fe={class:"policy-card__policy__subtitle"},ge={class:"policy-card__policy__subtitle"},be=l("div",{class:"policy-card__policy__subtitle"}," Rules: ",-1),he={class:"q-ml-xs"},Be={key:0},Ae=K({__name:"SelectPolicyItem",props:{policyData:Object,policy:Object},setup(c){const o=J(),d=C(()=>o.serviceData),w=C(()=>o.serviceLoading);return(b,v)=>(_(),q(z,{class:""},{default:m(()=>[t(w)?M("",!0):(_(),F("div",Se,[l("div",Te,[l("div",Fe," Address: "+f(c.policy?.toBase58()),1),l("div",ge," Name: "+f(t(d)?.name)+" "+f(c.policyData?.name),1),be,l("div",he,[(_(!0),F(Z,null,ee(c.policyData?.rules,(e,g)=>(_(),F("div",{key:g},[e.key!=="maxAge"&&e.key!=="expectedDateTo"||e.label!=="0"?(_(),F("span",Be,f(t(oe)(e.key,e.label,e.value)),1)):M("",!0)]))),128))])])]))]),_:1}))}}),De={key:0},Ne={key:1},Ve=K({__name:"CreatePoolTokenData",props:{balance:[String,Number],mint:String},setup(c){return(o,d)=>(_(),F("div",null,[c.mint?(_(),F("div",De,[l("div",null," balance: "+f(c.balance),1),l("div",null,[S(" mint: "+f(t(te)(c.mint))+" ",1),s(ae,{anchor:"top middle",self:"bottom middle",offset:[10,10]},{default:m(()=>[S(f(c.mint),1)]),_:1})])])):(_(),F("div",Ne," Select token "))]))}});function Ce(){const c=G(),{notify:o}=X(),d=ne(c,"cluster"),w=$(!1);async function b(v,{onSuccess:e,onError:g,idx:u,commitment:A=se,sendTimeout:D=le,confirmTimeout:N=re}={}){u=u??"";let p=o({progress:!0,type:"ongoing",message:u?`Sending transaction "${u}" ...`:"Sending transaction...",timeout:D});const i={label:"Close",color:"white"};w.value=!0;let r="";try{const y=await v;r=String(typeof y=="object"?await y.signature:await v)}catch(y){w.value=!1,p(),String(y?.message).startsWith("User rejected")||o({message:u?`Transaction "${u}" error`:"Transaction error",caption:y?.message,type:"negative",timeout:0,actions:[i]});return}const k={label:"Explore",color:"white",target:"_blank",href:`https://solscan.io/tx/${r}?cluster=${d.value}`,onClick:()=>!1};try{p(),p=o({progress:!0,type:"ongoing",message:u?`Confirming transaction "${u}" ...`:"Confirming transaction...",actions:[k],timeout:N});const y=await c.connection.getLatestBlockhash(),V=await c.connection.confirmTransaction({blockhash:y.blockhash,lastValidBlockHeight:y.lastValidBlockHeight,signature:r},A);if(p(),V.value.err)throw new Error(JSON.stringify(V.value.err));p=o({message:u?`Transaction "${u}" confirmed`:"Transaction confirmed",type:"positive",actions:[k]}),e&&e(r)}catch(y){p(),o({message:u?`Transaction "${u}" error`:"Transaction error",caption:y.message,type:"negative",timeout:0,actions:[k,i]}),g&&g(y),console.error(y)}finally{w.value=!1}}return{monitorTransaction:b,sending:w}}function Me(){const c=ve(),o=ie(),{publicKey:d}=ce(),w=G(),{monitorTransaction:b}=Ce(),{notify:v}=X(),e=ue({tokenA:void 0,tokenB:void 0,policy:void 0,hostFeeNumerator:0,hostFeeDenominator:1e3,tradeFeeNumerator:0,tradeFeeDenominator:1e3,ownerTradeFeeNumerator:0,ownerTradeFeeDenominator:1e3,ownerWithdrawFeeNumerator:0,ownerWithdrawFeeDenominator:1e3,creating:!1,tokenSwap:void 0,poolMint:void 0,poolFeeAccount:void 0,swapTokenA:void 0,swapTokenB:void 0});async function g(){!d.value||!o.value||(e.tokenSwap=Y.generate(),console.log("[create swap] token swap pk = ",e.tokenSwap.publicKey.toBase58()),console.log("[create swap] token swap sk = ",e.tokenSwap.secretKey.toString()))}async function u(){if(!d.value||!o.value||!e.tokenSwap)return;const p=c.swapClient.swapAuthority(e.tokenSwap.publicKey),i=new Q,r=await de(w.connection,i,d.value,p,9);console.log("[create swap] poolMint = ",r.publicKey.toBase58()),i.instructions.length>0?await b(H(w.connection,o.value,i.instructions,[r]),{onSuccess:()=>{e.poolMint=r.publicKey,v({type:"positive",message:"Pool mint created successfully."})}}):e.poolMint=r.publicKey}async function A(){if(!d.value||!o.value||!e.tokenSwap||!e.poolMint)return;if(!e.tokenA||!e.tokenB)return v({type:"negative",message:"Select tokens"});const p=c.swapClient.swapAuthority(e.tokenSwap.publicKey),i=new Q,r=await U(w.connection,i,e.poolMint,d.value),h=await U(w.connection,i,new x(e.tokenA.mint),p,d.value,!0),k=await U(w.connection,i,new x(e.tokenB.mint),p,d.value,!0);console.log("[create swap] poolFeeAccount = ",r.toBase58()),console.log("[create swap] swapTokenA = ",h.toBase58()),console.log("[create swap] swapTokenB = ",k.toBase58()),i.instructions.length>0?await b(H(w.connection,o.value,i.instructions),{commitment:"finalized",onSuccess:()=>{e.poolFeeAccount=r,e.swapTokenA=h,e.swapTokenB=k,v({type:"positive",message:"Pool accounts created successfully."})}}):(e.poolFeeAccount=r,e.swapTokenA=h,e.swapTokenB=k)}async function D(){if(!d.value||!o.value||!e.tokenSwap||!e.poolMint||!e.poolFeeAccount||!e.swapTokenA||!e.swapTokenB)return;if(!e.tokenA||!e.tokenB)return v({type:"negative",message:"Select tokens"});if(!e.policy)return v({type:"negative",message:"Select policy"});console.log("createTokenSwap: ",{tokenSwap:e.tokenSwap.publicKey.toBase58(),poolMint:e.poolMint.toBase58(),poolFee:e.poolFeeAccount.toBase58(),destination:e.poolFeeAccount.toBase58(),tokenA:e.swapTokenA.toBase58(),tokenB:e.swapTokenB.toBase58(),policy:e.policy.pubkey.toBase58(),curveType:j.ConstantProduct,curveParameters:[],fees:{tradeFeeNumerator:e.tradeFeeNumerator,tradeFeeDenominator:e.tradeFeeDenominator,ownerTradeFeeNumerator:e.ownerTradeFeeNumerator,ownerTradeFeeDenominator:e.ownerTradeFeeDenominator,ownerWithdrawFeeNumerator:e.ownerWithdrawFeeNumerator,ownerWithdrawFeeDenominator:e.ownerWithdrawFeeDenominator,hostFeeNumerator:e.hostFeeNumerator,hostFeeDenominator:e.hostFeeDenominator}});const p=await c.swapClient.createTokenSwap({tokenSwap:e.tokenSwap,poolMint:e.poolMint,poolFee:e.poolFeeAccount,destination:e.poolFeeAccount,tokenA:e.swapTokenA,tokenB:e.swapTokenB,policy:e.policy.pubkey,curveType:j.ConstantProduct,curveParameters:[],fees:{tradeFeeNumerator:e.tradeFeeNumerator,tradeFeeDenominator:e.tradeFeeDenominator,ownerTradeFeeNumerator:e.ownerTradeFeeNumerator,ownerTradeFeeDenominator:e.ownerTradeFeeDenominator,ownerWithdrawFeeNumerator:e.ownerWithdrawFeeNumerator,ownerWithdrawFeeDenominator:e.ownerWithdrawFeeDenominator,hostFeeNumerator:e.hostFeeNumerator,hostFeeDenominator:e.hostFeeDenominator}});v({type:"positive",message:`Swap Pool created successfully. ${e.tokenSwap?.publicKey.toBase58()}`}),console.log("[create swap] tokenSwap result = ",p)}function N(){e.hostFeeNumerator=0,e.hostFeeDenominator=1e3,e.tradeFeeNumerator=0,e.tradeFeeDenominator=1e3,e.ownerTradeFeeNumerator=0,e.ownerTradeFeeDenominator=1e3,e.ownerWithdrawFeeNumerator=0,e.ownerWithdrawFeeDenominator=1e3,e.policy=void 0,e.tokenA=void 0,e.tokenB=void 0}return{state:e,reset:N,generateSwapKeypair:g,createPoolMint:u,createPoolAccounts:A,createTokenSwap:D}}const Pe={class:"row"},qe={class:"row q-mt-md"},$e={class:"q-mt-md"},Ue=l("div",null,"Policy:",-1),xe={class:"row q-mt-md"},Ke={class:"row q-mt-md"},We={class:"row q-mt-md"},Oe={class:"row q-mt-md"},Ie={class:"q-mt-lg row"},Ee={class:"q-mt-mt"},Qe=l("div",{class:"text-subtitle2"}," Token Swap ",-1),He={style:{"word-break":"break-all"}},Le={key:0},Re={class:"q-mt-sm row"},je={class:"q-mt-xl row"},Je={key:0},ze={class:"q-mt-sm row"},Ge={class:"q-mt-xl row"},Xe=l("div",{class:"text-warning"}," Top up pool tokenA and tokenB accounts before create pool ",-1),Ye={class:"q-mt-xl row"},Ze=K({__name:"CreateSwapCard",setup(c){const{state:o,createTokenSwap:d,createPoolAccounts:w,generateSwapKeypair:b,createPoolMint:v}=Me(),{handleSearchToken:e,tokens:g}=pe(),u=J(),A=C(()=>u.servicePolicy),D=C(()=>o.tokenA?u.tokenBalance(o.tokenA.mint):0),N=C(()=>o.tokenB?u.tokenBalance(o.tokenB.mint):0);function p(V,n){o[V]=n}const i=$(!1),r=$("");function h(){r.value&&(o.tokenSwap=Y.fromSecretKey(Uint8Array.from(JSON.parse(`[${r.value}]`))))}const k=$("");function y(){k.value&&(o.poolMint=new x(k.value))}return(V,n)=>{const W=fe,O=Ve,I=Ae,E=ye;return _(),q(z,{class:"swap-cardswap-widget full-width"},{default:m(()=>[s(L,{class:"swap-card__header"},{default:m(()=>[S(" Create Pool ")]),_:1}),s(L,{class:"swap-card__body"},{default:m(()=>[l("div",Pe,[s(W,{options:t(g),token:t(o).tokenA,"swap-token":String(t(o).tokenA?.symbol),onHandleSearchToken:t(e),onSetToken:n[0]||(n[0]=a=>p("tokenA",a))},null,8,["options","token","swap-token","onHandleSearchToken"]),s(O,{class:"q-ml-lg q-mt-xs",balance:t(D),mint:t(o).tokenA?.mint},null,8,["balance","mint"])]),l("div",qe,[s(W,{options:t(g),token:t(o).tokenB,"swap-token":String(t(o).tokenB?.symbol),onHandleSearchToken:t(e),onSetToken:n[1]||(n[1]=a=>p("tokenB",a))},null,8,["options","token","swap-token","onHandleSearchToken"]),s(O,{class:"q-ml-lg q-mt-xs",balance:t(N),mint:t(o).tokenB?.mint},null,8,["balance","mint"])]),l("div",$e,[Ue,s(me,{modelValue:t(o).policy,"onUpdate:modelValue":n[2]||(n[2]=a=>t(o).policy=a),"option-disable":"inactive","popup-content-class":"transition-duration",outlined:"",options:t(A),dense:"","options-dense":!1,"option-value":"mint","option-label":"name"},{selected:m(()=>[t(o).policy?(_(),q(I,{key:t(o).policy.pubkey,policy:t(o).policy.pubkey,"policy-data":t(o).policy.data},null,8,["policy","policy-data"])):M("",!0)]),option:m(a=>[s(we,ke(a.itemProps,{class:"token-select__token"}),{default:m(()=>[(_(),q(I,{key:a.opt.pubkey,policy:a.opt.pubkey,"policy-data":a.opt.data},null,8,["policy","policy-data"]))]),_:2},1040)]),_:1},8,["modelValue","options"])]),l("div",xe,[s(T,{modelValue:t(o).hostFeeNumerator,"onUpdate:modelValue":n[3]||(n[3]=a=>t(o).hostFeeNumerator=a),class:"q-mr-md",label:"Host fee Numerator"},null,8,["modelValue"]),s(T,{modelValue:t(o).hostFeeDenominator,"onUpdate:modelValue":n[4]||(n[4]=a=>t(o).hostFeeDenominator=a),label:"Host fee Denominator"},null,8,["modelValue"])]),l("div",Ke,[s(T,{modelValue:t(o).tradeFeeNumerator,"onUpdate:modelValue":n[5]||(n[5]=a=>t(o).tradeFeeNumerator=a),class:"q-mr-md",label:"Trade fee Numerator"},null,8,["modelValue"]),s(T,{modelValue:t(o).tradeFeeDenominator,"onUpdate:modelValue":n[6]||(n[6]=a=>t(o).tradeFeeDenominator=a),label:"Trade fee Denominator"},null,8,["modelValue"])]),l("div",We,[s(T,{modelValue:t(o).ownerTradeFeeNumerator,"onUpdate:modelValue":n[7]||(n[7]=a=>t(o).ownerTradeFeeNumerator=a),class:"q-mr-md",label:"Owner trade fee Numerator"},null,8,["modelValue"]),s(T,{modelValue:t(o).ownerTradeFeeDenominator,"onUpdate:modelValue":n[8]||(n[8]=a=>t(o).ownerTradeFeeDenominator=a),label:"Owner trade fee Denominator"},null,8,["modelValue"])]),l("div",Oe,[s(T,{modelValue:t(o).ownerWithdrawFeeNumerator,"onUpdate:modelValue":n[9]||(n[9]=a=>t(o).ownerWithdrawFeeNumerator=a),class:"q-mr-md",label:"Owner withdraw fee Numerator"},null,8,["modelValue"]),s(T,{modelValue:t(o).ownerWithdrawFeeDenominator,"onUpdate:modelValue":n[10]||(n[10]=a=>t(o).ownerWithdrawFeeDenominator=a),label:"Owner withdraw fee Denominator"},null,8,["modelValue"])]),l("div",Ie,[s(B,{class:"q-ml-auto",onClick:t(b)},{default:m(()=>[S(" Generate Swap Keypair ")]),_:1},8,["onClick"])]),l("div",Ee,[Qe,l("div",null,"Public key: "+f(t(o).tokenSwap?.publicKey.toBase58()),1),l("div",He," Secret key: "+f(t(o).tokenSwap?.secretKey.toString()),1),t(o).tokenSwap?(_(),F("div",Le,[s(E,{text:t(o).tokenSwap.secretKey.toString()},null,8,["text"]),S(" Copy Token Swap secret key ")])):M("",!0)]),s(R,{modelValue:t(i),"onUpdate:modelValue":n[12]||(n[12]=a=>P(i)?i.value=a:null),label:"Set token swap from secret key"},{default:m(()=>[s(T,{modelValue:t(r),"onUpdate:modelValue":n[11]||(n[11]=a=>P(r)?r.value=a:null),class:"q-mr-md",label:"Token Swap Secret"},null,8,["modelValue"]),l("div",Re,[s(B,{class:"q-ml-auto",disable:!t(r),onClick:h},{default:m(()=>[S(" Set Swap Keypair ")]),_:1},8,["disable"])])]),_:1},8,["modelValue"]),l("div",je,[s(B,{class:"q-ml-auto",disable:!!t(o).poolMint,onClick:t(v)},{default:m(()=>[S(" Create Pool Mint ")]),_:1},8,["disable","onClick"])]),l("div",null,"Pool mint: "+f(t(o).poolMint?.toBase58()),1),t(o).poolMint?(_(),F("div",Je,[s(E,{text:t(o).poolMint?.toBase58()},null,8,["text"]),S(" Copy Pool Mint public key ")])):M("",!0),s(R,{modelValue:t(i),"onUpdate:modelValue":n[14]||(n[14]=a=>P(i)?i.value=a:null),label:"Set pool mint manually"},{default:m(()=>[s(T,{modelValue:t(k),"onUpdate:modelValue":n[13]||(n[13]=a=>P(k)?k.value=a:null),class:"q-mr-md",label:"Pool Mint"},null,8,["modelValue"]),l("div",ze,[s(B,{class:"q-ml-auto",disable:!t(k),onClick:y},{default:m(()=>[S(" Set Pool Mint ")]),_:1},8,["disable"])])]),_:1},8,["modelValue"]),l("div",Ge,[s(B,{class:"q-ml-auto",onClick:t(w)},{default:m(()=>[S(" Create Pool token accounts ")]),_:1},8,["onClick"])]),l("div",null,"Pool fee account: "+f(t(o).poolFeeAccount?.toBase58()),1),l("div",null,"Pool token A account: "+f(t(o).swapTokenA?.toBase58()),1),l("div",null,"Pool token B account: "+f(t(o).swapTokenB?.toBase58()),1),Xe,l("div",Ye,[s(B,{class:"q-ml-auto",onClick:t(d)},{default:m(()=>[S(" Create Pool ")]),_:1},8,["onClick"])])]),_:1})]),_:1})}}}),eo={},oo={class:"main-block row justify-center"};function to(c,o){const d=Ze;return _(),F("div",oo,[s(d,{class:"q-mt-md"})])}const lo=_e(eo,[["render",to]]);export{lo as default};
