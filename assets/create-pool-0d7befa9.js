import{ao as de,ap as x,a as G,ar as pe,as as me,am as we,b9 as ve,P as U,V as W,w as E,v as V,o as f,Y as N,Z as m,a3 as t,i as P,a2 as l,a5 as h,ad as ge,aM as be,ba as Se,a4 as D,$ as J,a0 as T,b6 as Te,j as s,bb as he,u as X,z as Y,bc as Ae,G as C,bd as Fe,be as Pe,bf as Be,x as ye,y as ke,B as H,aw as fe,ah as j,bg as Ve,aU as Me,bh as L,bi as z,bj as Q,W as Ne,a1 as K,aS as oe,aP as ae,aQ as ne,a7 as S,a8 as M,bk as se,aK as O,aL as De,b8 as qe,H as Ce,I as Ue,bl as le,J as $e,af as Ie,ag as Le,ai as Oe,bm as xe,aT as Ke,X as We,a6 as Ee,a9 as Re,_ as Qe}from"./index-c3d36580.js";import{_ as He,o as je}from"./SelectToken.vue_vue_type_script_setup_true_lang-b4c9b972.js";import{u as ze,k as ie}from"./swap-6fd8fa15.js";import{a as Ge}from"./internal-1651c888.js";import"./associatedTokenAccount-13e1bd2b.js";const re=de([x("instruction")]);function Je(i,o=we){const r=[{pubkey:i,isSigner:!1,isWritable:!0}],c=G.Buffer.alloc(re.span);return re.encode({instruction:pe.SyncNative},c),new me({keys:r,programId:o,data:c})}var ce;(function(i){i[i.MintTokens=0]="MintTokens",i[i.FreezeAccount=1]="FreezeAccount",i[i.AccountOwner=2]="AccountOwner",i[i.CloseAccount=3]="CloseAccount"})(ce||(ce={}));const ue=de([x("instruction"),x("authorityType"),x("newAuthorityOption"),ve("newAuthority")]);function Xe(i,o,r,c,_=[],u=we){const e=Ge([{pubkey:i,isSigner:!1,isWritable:!0}],o,_),p=G.Buffer.alloc(ue.span);return ue.encode({instruction:pe.SetAuthority,authorityType:r,newAuthorityOption:c?1:0,newAuthority:c||new U(0)},p),new me({keys:e,programId:u,data:p})}const Ye={key:0,class:"policy-card__policy q-pa-md"},Ze={class:"policy-card__policy__info"},et={class:"policy-card__policy__subtitle"},tt={class:"policy-card__policy__subtitle"},ot=l("div",{class:"policy-card__policy__subtitle"}," Rules: ",-1),at={class:"q-ml-xs"},nt={key:0},st=W({__name:"SelectPolicyItem",props:{policyData:Object,policy:Object},setup(i){const o=E(),r=V(()=>o.serviceData),c=V(()=>o.serviceLoading);return(_,u)=>(f(),N(J,{class:""},{default:m(()=>[t(c)?D("",!0):(f(),P("div",Ye,[l("div",Ze,[l("div",et," Address: "+h(i.policy?.toBase58()),1),l("div",tt," Name: "+h(t(r)?.name)+" "+h(i.policyData?.name),1),ot,l("div",at,[(f(!0),P(ge,null,be(i.policyData?.rules,(e,p)=>(f(),P("div",{key:p},[e.key!=="maxAge"&&e.key!=="expectedDateTo"||e.label!=="0"?(f(),P("span",nt,h(t(Se)(e.key,e.label,e.value)),1)):D("",!0)]))),128))])])]))]),_:1}))}}),lt={key:0},it={key:1},rt=W({__name:"CreatePoolTokenData",props:{balance:[String,Number],mint:String},setup(i){return(o,r)=>(f(),P("div",null,[i.mint?(f(),P("div",lt,[l("div",null," balance: "+h(i.balance),1),l("div",null,[T(" mint: "+h(t(Te)(i.mint))+" ",1),s(he,{anchor:"top middle",self:"bottom middle",offset:[10,10]},{default:m(()=>[T(h(i.mint),1)]),_:1})])])):(f(),P("div",it," Select token "))]))}});function _e(){const i=X(),{notify:o}=Y(),r=Ae(i,"cluster"),c=C(!1);async function _(u,{onSuccess:e,onError:p,idx:d,commitment:b=Fe,sendTimeout:A=Pe,confirmTimeout:q=Be}={}){d=d??"";let B=o({progress:!0,type:"ongoing",message:d?`Sending transaction "${d}" ...`:"Sending transaction...",timeout:A});const v={label:"Close",color:"white"};c.value=!0;let w="";try{const k=await u;w=String(typeof k=="object"?await k.signature:await u)}catch(k){c.value=!1,B(),String(k?.message).startsWith("User rejected")||o({message:d?`Transaction "${d}" error`:"Transaction error",caption:k?.message,type:"negative",timeout:0,actions:[v]});return}const g={label:"Explore",color:"white",target:"_blank",href:`https://solscan.io/tx/${w}?cluster=${r.value}`,onClick:()=>!1};try{B(),B=o({progress:!0,type:"ongoing",message:d?`Confirming transaction "${d}" ...`:"Confirming transaction...",actions:[g],timeout:q});const k=await i.connection.getLatestBlockhash(),F=await i.connection.confirmTransaction({blockhash:k.blockhash,lastValidBlockHeight:k.lastValidBlockHeight,signature:w},b);if(B(),F.value.err)throw new Error(JSON.stringify(F.value.err));B=o({message:d?`Transaction "${d}" confirmed`:"Transaction confirmed",type:"positive",actions:[g]}),e&&e(w)}catch(k){B(),o({message:d?`Transaction "${d}" error`:"Transaction error",caption:k.message,type:"negative",timeout:0,actions:[g,v]}),p&&p(k),console.error(k)}finally{c.value=!1}}return{monitorTransaction:_,sending:c}}function ct(){const i=ze(),o=ye(),{publicKey:r}=ke(),c=X(),{monitorTransaction:_}=_e(),{notify:u}=Y(),e=H({tokenA:void 0,tokenB:void 0,swapPolicy:void 0,addLiquidityPolicy:void 0,hostFeeNumerator:0,hostFeeDenominator:1e3,tradeFeeNumerator:0,tradeFeeDenominator:1e3,ownerTradeFeeNumerator:0,ownerTradeFeeDenominator:1e3,ownerWithdrawFeeNumerator:0,ownerWithdrawFeeDenominator:1e3,creating:!1,tokenSwap:void 0,poolMint:void 0,poolFeeAccount:void 0,swapTokenA:void 0,swapTokenB:void 0}),p=H({name:"",symbol:"",metadataUrl:"",isMutable:!0});async function d(){!r.value||!o.value||(e.tokenSwap=fe.generate(),console.log("[create swap] token swap pk = ",e.tokenSwap.publicKey.toBase58()),console.log("[create swap] token swap sk = ",e.tokenSwap.secretKey.toString()))}async function b(){if(!r.value||!o.value||!e.tokenSwap)return;const v=i.swapClient.swapAuthority(e.tokenSwap.publicKey),w=new j;e.creating=!0;try{const y=await Ve(c.connection,w,r.value,r.value,Me),g=U.findProgramAddressSync([G.Buffer.from("metadata"),L.PROGRAM_ID.toBuffer(),y.publicKey.toBuffer()],L.PROGRAM_ID)[0],k={name:p.name,symbol:p.symbol,uri:p.metadataUrl,sellerFeeBasisPoints:0,creators:null,collection:null,uses:null},F=L.createCreateMetadataAccountV3Instruction({metadata:g,mint:y.publicKey,mintAuthority:r.value,payer:r.value,updateAuthority:r.value},{createMetadataAccountArgsV3:{data:k,isMutable:p.isMutable,collectionDetails:null}});w.add(F);const R=Xe(y.publicKey,r.value,0,v);w.add(R);const $=L.createUpdateMetadataAccountV2Instruction({metadata:g,updateAuthority:r.value},{updateMetadataAccountArgsV2:{data:k,updateAuthority:v,primarySaleHappened:!0,isMutable:!0}});w.add($),console.log("[create swap] poolMint = ",y.publicKey.toBase58()),w.instructions.length>0&&await _(z(c.connection,o.value,w.instructions,[y]),{onSuccess:()=>{e.poolMint=y.publicKey,u({type:"positive",message:"Pool mint created successfully."})}})}catch(y){console.error(y),u({type:"negative",message:`${y}`})}finally{e.creating=!1}}async function A(){if(!r.value||!o.value)return u({type:"negative",message:"Connect wallet"});if(!e.tokenSwap)return u({type:"negative",message:"Define tokenSwap"});if(!e.poolMint)return u({type:"negative",message:"Define pool mint"});if(!e.tokenA||!e.tokenB)return u({type:"negative",message:"Select tokens"});const v=i.swapClient.swapAuthority(e.tokenSwap.publicKey),w=new j;e.creating=!0;try{const y=await Q(c.connection,w,e.poolMint,r.value),g=await Q(c.connection,w,new U(e.tokenA.mint),v,r.value,!0),k=await Q(c.connection,w,new U(e.tokenB.mint),v,r.value,!0);console.log("[create swap] poolFeeAccount = ",y.toBase58()),console.log("[create swap] swapTokenA = ",g.toBase58()),console.log("[create swap] swapTokenB = ",k.toBase58()),w.instructions.length>0?await _(z(c.connection,o.value,w.instructions),{commitment:"finalized",onSuccess:()=>{e.poolFeeAccount=y,e.swapTokenA=g,e.swapTokenB=k,u({type:"positive",message:"Pool accounts created successfully."})}}):(e.poolFeeAccount=y,e.swapTokenA=g,e.swapTokenB=k)}catch(y){console.error(y),u({type:"negative",message:`${y}`})}finally{e.creating=!1}}async function q(){if(!(!r.value||!o.value||!e.tokenSwap||!e.poolMint||!e.poolFeeAccount||!e.swapTokenA||!e.swapTokenB)){if(!e.tokenA||!e.tokenB)return u({type:"negative",message:"Select tokens"});if(!e.swapPolicy)return u({type:"negative",message:"Select swap policy"});if(!e.addLiquidityPolicy)return u({type:"negative",message:"Select liquidity policy"});console.log("createTokenSwap: ",{tokenSwap:e.tokenSwap.publicKey.toBase58(),poolMint:e.poolMint.toBase58(),poolFee:e.poolFeeAccount.toBase58(),destination:e.poolFeeAccount.toBase58(),tokenA:e.swapTokenA.toBase58(),tokenB:e.swapTokenB.toBase58(),swapPolicy:e.swapPolicy.pubkey.toBase58(),addLiquidityPolicy:e.addLiquidityPolicy.pubkey.toBase58(),curveType:ie.ConstantProduct,curveParameters:[],fees:{tradeFeeNumerator:e.tradeFeeNumerator,tradeFeeDenominator:e.tradeFeeDenominator,ownerTradeFeeNumerator:e.ownerTradeFeeNumerator,ownerTradeFeeDenominator:e.ownerTradeFeeDenominator,ownerWithdrawFeeNumerator:e.ownerWithdrawFeeNumerator,ownerWithdrawFeeDenominator:e.ownerWithdrawFeeDenominator,hostFeeNumerator:e.hostFeeNumerator,hostFeeDenominator:e.hostFeeDenominator}}),e.creating=!0;try{const v=await i.swapClient.createTokenSwap({tokenSwap:e.tokenSwap,poolMint:e.poolMint,poolFee:e.poolFeeAccount,destination:e.poolFeeAccount,tokenA:e.swapTokenA,tokenB:e.swapTokenB,swapPolicy:e.swapPolicy.pubkey,addLiquidityPolicy:e.addLiquidityPolicy.pubkey,curveType:ie.ConstantProduct,curveParameters:[],fees:{tradeFeeNumerator:e.tradeFeeNumerator,tradeFeeDenominator:e.tradeFeeDenominator,ownerTradeFeeNumerator:e.ownerTradeFeeNumerator,ownerTradeFeeDenominator:e.ownerTradeFeeDenominator,ownerWithdrawFeeNumerator:e.ownerWithdrawFeeNumerator,ownerWithdrawFeeDenominator:e.ownerWithdrawFeeDenominator,hostFeeNumerator:e.hostFeeNumerator,hostFeeDenominator:e.hostFeeDenominator}});u({type:"positive",message:`Swap Pool created successfully. ${e.tokenSwap?.publicKey.toBase58()}`}),i.init(),console.log("[create swap] tokenSwap result = ",v)}catch(v){console.error(v),console.error(v.logs),u({type:"negative",message:`${v}`})}finally{e.creating=!1}}}function B(){e.hostFeeNumerator=0,e.hostFeeDenominator=1e3,e.tradeFeeNumerator=0,e.tradeFeeDenominator=1e3,e.ownerTradeFeeNumerator=0,e.ownerTradeFeeDenominator=1e3,e.ownerWithdrawFeeNumerator=0,e.ownerWithdrawFeeDenominator=1e3,e.swapPolicy=void 0,e.addLiquidityPolicy=void 0,e.tokenA=void 0,e.tokenB=void 0,p.name="",p.symbol="",p.metadataUrl=""}return{state:e,metadataState:p,reset:B,generateSwapKeypair:d,createPoolMint:b,createPoolAccounts:A,createTokenSwap:q}}const ut={class:"row"},dt={class:"row q-mt-md"},pt={class:"q-mt-md"},mt=l("div",null,"Swap policy:",-1),wt={class:"q-mt-md"},yt=l("div",null,"Liqudity policy:",-1),kt={class:"row q-mt-md"},ft={class:"row q-mt-md"},_t={class:"row q-mt-md"},vt={class:"row q-mt-md"},gt={class:"q-mt-lg row"},bt={class:"q-mt-mt"},St=l("div",{class:"text-subtitle2"}," Token Swap ",-1),Tt={style:{"word-break":"break-all"}},ht={key:0},At={class:"q-mt-sm row"},Ft={class:"q-mt-xl column"},Pt=l("div",null,"LP token metadata",-1),Bt={class:"q-mt-xs row"},Vt={key:0},Mt={class:"q-mt-sm row"},Nt={class:"q-mt-xl row"},Dt=l("div",{class:"text-warning"}," Top up pool tokenA and tokenB accounts before create pool ",-1),qt={class:"q-mt-xl row"},Ct=W({__name:"CreateSwapCard",setup(i){const{state:o,createTokenSwap:r,createPoolAccounts:c,generateSwapKeypair:_,createPoolMint:u,metadataState:e}=ct(),{handleSearchToken:p,tokens:d}=Ne(),b=E(),A=V(()=>b.servicePolicy),q=V(()=>o.tokenA?b.tokenBalance(o.tokenA.mint):0),B=V(()=>o.tokenB?b.tokenBalance(o.tokenB.mint):0);function v($,n){o[$]=n}const w=C(!1),y=C(!1),g=C("");function k(){g.value&&(o.tokenSwap=fe.fromSecretKey(Uint8Array.from(JSON.parse(`[${g.value}]`))))}const F=C("");function R(){F.value&&(o.poolMint=new U(F.value))}return($,n)=>{const Z=He,ee=rt,I=st,te=qe;return f(),N(J,{class:"swap-cardswap-widget full-width"},{default:m(()=>[s(K,{class:"swap-card__header"},{default:m(()=>[T(" Create Pool ")]),_:1}),s(K,{class:"swap-card__body"},{default:m(()=>[l("div",ut,[s(Z,{options:t(d),token:t(o).tokenA,"swap-token":String(t(o).tokenA?.symbol),onHandleSearchToken:t(p),onSetToken:n[0]||(n[0]=a=>v("tokenA",a))},null,8,["options","token","swap-token","onHandleSearchToken"]),s(ee,{class:"q-ml-lg q-mt-xs",balance:t(q),mint:t(o).tokenA?.mint},null,8,["balance","mint"])]),l("div",dt,[s(Z,{options:t(d),token:t(o).tokenB,"swap-token":String(t(o).tokenB?.symbol),onHandleSearchToken:t(p),onSetToken:n[1]||(n[1]=a=>v("tokenB",a))},null,8,["options","token","swap-token","onHandleSearchToken"]),s(ee,{class:"q-ml-lg q-mt-xs",balance:t(B),mint:t(o).tokenB?.mint},null,8,["balance","mint"])]),l("div",pt,[mt,s(oe,{modelValue:t(o).swapPolicy,"onUpdate:modelValue":n[2]||(n[2]=a=>t(o).swapPolicy=a),"option-disable":"inactive","popup-content-class":"transition-duration",outlined:"",options:t(A),dense:"","options-dense":!1,"option-value":"mint","option-label":"name"},{selected:m(()=>[t(o).swapPolicy?(f(),N(I,{key:t(o).swapPolicy.pubkey?.toBase58(),policy:t(o).swapPolicy.pubkey,"policy-data":t(o).swapPolicy.data},null,8,["policy","policy-data"])):D("",!0)]),option:m(a=>[s(ae,ne(a.itemProps,{class:"token-select__token"}),{default:m(()=>[(f(),N(I,{key:a.opt.pubkey,policy:a.opt.pubkey,"policy-data":a.opt.data},null,8,["policy","policy-data"]))]),_:2},1040)]),_:1},8,["modelValue","options"])]),l("div",wt,[yt,s(oe,{modelValue:t(o).addLiquidityPolicy,"onUpdate:modelValue":n[3]||(n[3]=a=>t(o).addLiquidityPolicy=a),"option-disable":"inactive","popup-content-class":"transition-duration",outlined:"",options:t(A),dense:"","options-dense":!1,"option-value":"mint","option-label":"name"},{selected:m(()=>[t(o).addLiquidityPolicy?(f(),N(I,{key:t(o).addLiquidityPolicy.pubkey?.toBase58(),policy:t(o).addLiquidityPolicy.pubkey,"policy-data":t(o).addLiquidityPolicy.data},null,8,["policy","policy-data"])):D("",!0)]),option:m(a=>[s(ae,ne(a.itemProps,{class:"token-select__token"}),{default:m(()=>[(f(),N(I,{key:a.opt.pubkey,policy:a.opt.pubkey,"policy-data":a.opt.data},null,8,["policy","policy-data"]))]),_:2},1040)]),_:1},8,["modelValue","options"])]),l("div",kt,[s(S,{modelValue:t(o).hostFeeNumerator,"onUpdate:modelValue":n[4]||(n[4]=a=>t(o).hostFeeNumerator=a),class:"q-mr-md",label:"Host fee Numerator"},null,8,["modelValue"]),s(S,{modelValue:t(o).hostFeeDenominator,"onUpdate:modelValue":n[5]||(n[5]=a=>t(o).hostFeeDenominator=a),label:"Host fee Denominator"},null,8,["modelValue"])]),l("div",ft,[s(S,{modelValue:t(o).tradeFeeNumerator,"onUpdate:modelValue":n[6]||(n[6]=a=>t(o).tradeFeeNumerator=a),class:"q-mr-md",label:"Trade fee Numerator"},null,8,["modelValue"]),s(S,{modelValue:t(o).tradeFeeDenominator,"onUpdate:modelValue":n[7]||(n[7]=a=>t(o).tradeFeeDenominator=a),label:"Trade fee Denominator"},null,8,["modelValue"])]),l("div",_t,[s(S,{modelValue:t(o).ownerTradeFeeNumerator,"onUpdate:modelValue":n[8]||(n[8]=a=>t(o).ownerTradeFeeNumerator=a),class:"q-mr-md",label:"Owner trade fee Numerator"},null,8,["modelValue"]),s(S,{modelValue:t(o).ownerTradeFeeDenominator,"onUpdate:modelValue":n[9]||(n[9]=a=>t(o).ownerTradeFeeDenominator=a),label:"Owner trade fee Denominator"},null,8,["modelValue"])]),l("div",vt,[s(S,{modelValue:t(o).ownerWithdrawFeeNumerator,"onUpdate:modelValue":n[10]||(n[10]=a=>t(o).ownerWithdrawFeeNumerator=a),class:"q-mr-md",label:"Owner withdraw fee Numerator"},null,8,["modelValue"]),s(S,{modelValue:t(o).ownerWithdrawFeeDenominator,"onUpdate:modelValue":n[11]||(n[11]=a=>t(o).ownerWithdrawFeeDenominator=a),label:"Owner withdraw fee Denominator"},null,8,["modelValue"])]),l("div",gt,[s(M,{class:"q-ml-auto",onClick:t(_)},{default:m(()=>[T(" Generate Swap Keypair ")]),_:1},8,["onClick"])]),l("div",bt,[St,l("div",null,"Public key: "+h(t(o).tokenSwap?.publicKey.toBase58()),1),l("div",Tt," Secret key: "+h(t(o).tokenSwap?.secretKey.toString()),1),t(o).tokenSwap?(f(),P("div",ht,[s(te,{text:t(o).tokenSwap.secretKey.toString()},null,8,["text"]),T(" Copy Token Swap secret key ")])):D("",!0)]),s(se,{modelValue:t(w),"onUpdate:modelValue":n[13]||(n[13]=a=>O(w)?w.value=a:null),label:"Set token swap from secret key"},{default:m(()=>[s(S,{modelValue:t(g),"onUpdate:modelValue":n[12]||(n[12]=a=>O(g)?g.value=a:null),class:"q-mr-md",label:"Token Swap Secret"},null,8,["modelValue"]),l("div",At,[s(M,{class:"q-ml-auto",disable:!t(g),onClick:k},{default:m(()=>[T(" Set Swap Keypair ")]),_:1},8,["disable"])])]),_:1},8,["modelValue"]),l("div",Ft,[Pt,s(S,{modelValue:t(e).name,"onUpdate:modelValue":n[14]||(n[14]=a=>t(e).name=a),class:"q-mr-md",label:"name"},null,8,["modelValue"]),s(S,{modelValue:t(e).symbol,"onUpdate:modelValue":n[15]||(n[15]=a=>t(e).symbol=a),class:"q-mr-md",label:"symbol"},null,8,["modelValue"]),s(S,{modelValue:t(e).metadataUrl,"onUpdate:modelValue":n[16]||(n[16]=a=>t(e).metadataUrl=a),class:"q-mr-md",label:"url"},null,8,["modelValue"]),s(De,{modelValue:t(e).isMutable,"onUpdate:modelValue":n[17]||(n[17]=a=>t(e).isMutable=a),class:"q-mr-md q-mt-sm",size:"lg",label:"is Mutable"},null,8,["modelValue"])]),l("div",Bt,[s(M,{class:"q-ml-auto",disable:!!t(o).poolMint,loading:t(o).creating,onClick:t(u)},{default:m(()=>[T(" Create Pool Mint ")]),_:1},8,["disable","loading","onClick"])]),l("div",null,"Pool mint: "+h(t(o).poolMint?.toBase58()),1),t(o).poolMint?(f(),P("div",Vt,[s(te,{text:t(o).poolMint?.toBase58()},null,8,["text"]),T(" Copy Pool Mint public key ")])):D("",!0),s(se,{modelValue:t(y),"onUpdate:modelValue":n[19]||(n[19]=a=>O(y)?y.value=a:null),label:"Set pool mint manually"},{default:m(()=>[s(S,{modelValue:t(F),"onUpdate:modelValue":n[18]||(n[18]=a=>O(F)?F.value=a:null),class:"q-mr-md",label:"Pool Mint"},null,8,["modelValue"]),l("div",Mt,[s(M,{class:"q-ml-auto",disable:!t(F),onClick:R},{default:m(()=>[T(" Set Pool Mint ")]),_:1},8,["disable"])])]),_:1},8,["modelValue"]),l("div",Nt,[s(M,{class:"q-ml-auto",loading:t(o).creating,onClick:t(c)},{default:m(()=>[T(" Create Pool token accounts ")]),_:1},8,["loading","onClick"])]),l("div",null,"Pool fee account: "+h(t(o).poolFeeAccount?.toBase58()),1),l("div",null,"Pool token A account: "+h(t(o).swapTokenA?.toBase58()),1),l("div",null,"Pool token B account: "+h(t(o).swapTokenB?.toBase58()),1),Dt,l("div",qt,[s(M,{class:"q-ml-auto",loading:t(o).creating,onClick:t(r)},{default:m(()=>[T(" Create Pool ")]),_:1},8,["loading","onClick"])])]),_:1})]),_:1})}}});function Ut(){const i=ye(),{publicKey:o}=ke(),r=X(),{monitorTransaction:c}=_e(),{notify:_}=Y(),u=E(),e=H({amount:0,processing:!1});async function p(){if(!e.amount)return _({type:"negative",message:"Enter SOL amount"});if(!o.value)return _({type:"negative",message:"Connect a wallet"});if(!u.tokenBalance(Ce))return _({type:"negative",message:"Insufficient funds"});try{e.processing=!0;const d=new j,b=await Ue(le,o.value);try{await $e(r.connection,b)}catch(A){if(A instanceof Ie||A instanceof Le)d.add(Oe(o.value,b,o.value,le));else throw A}d.add(xe.transfer({fromPubkey:o.value,toPubkey:b,lamports:Ke(e.amount)}),Je(b)),await c(z(r.connection,i.value,d.instructions),{onSuccess:()=>{e.processing=!1,e.amount=0,u.getUserTokens(),_({type:"positive",message:"SOL wrapped successfully."})}})}catch(d){_({type:"negative",message:`${d}`})}finally{e.processing=!1}}return{state:e,wrapSol:p}}const $t={class:"swap-form"},It={class:"swap-field"},Lt={class:"swap-field__info"},Ot={class:"row"},xt=l("div",{class:"col-2 swap-field__label"}," AMOUNT ",-1),Kt={class:"col row justify-end swap-field__balance q-pr-sm"},Wt={key:0,class:"insufficient-error"},Et={class:"row justify-between",style:{gap:"10px"}},Rt={class:"swap-submit q-mt-md"},Qt=W({__name:"WrapSolCard",setup(i){const{state:o,tokenBalance:r}=E(),{state:c,wrapSol:_}=Ut(),u=V(()=>r(We)),e=V(()=>u.value===0),p=V(()=>Number(c.amount)>u.value);return(d,b)=>(f(),N(J,{class:"swap-card transfer-card"},{default:m(()=>[s(K,{class:"swap-card__header"},{default:m(()=>[T(" Wrap SOL ")]),_:1}),s(K,{class:"swap-card__body"},{default:m(()=>[l("div",$t,[l("div",It,[l("div",Lt,[l("div",Ot,[xt,l("div",Kt,[t(p)?(f(),P("div",Wt," Insufficient funds ")):D("",!0),T(" Balance: "+h(t(Ee)(t(u))),1)])])]),l("div",Et,[s(S,{modelValue:t(c).amount,"onUpdate:modelValue":b[0]||(b[0]=A=>t(c).amount=A),disable:t(e),maxlength:14,outlined:"",placeholder:"0.0",class:"swap-input col",onKeypress:t(je)},null,8,["modelValue","disable","onKeypress"])])])]),l("div",Rt,[s(M,{loading:t(c)?.processing,rounded:"",ripple:!1,onClick:t(_)},{default:m(()=>[T(" Wrap ")]),_:1},8,["loading","onClick"])])]),_:1}),s(Re,{showing:t(o)?.loading,class:"swap-loading",color:"grey"},null,8,["showing"])]),_:1}))}}),Ht={},jt={class:"main-block row justify-center"};function zt(i,o){const r=Qt,c=Ct;return f(),P("div",jt,[s(r,{class:"q-mt-md"}),s(c,{class:"q-mt-lg"})])}const eo=Qe(Ht,[["render",zt]]);export{eo as default};
