import{al as oe,am as te,a as ae,ao as ne,n as se,aj as z,m as x,ag as le,R as W,v as J,t as C,o as f,V as q,X as w,a1 as t,i as F,a0 as l,a3 as v,ab as re,at as ie,aM as ce,a2 as M,Y as X,Z as T,aF as ue,j as s,aN as de,u as Y,y as Z,aO as pe,C as U,aP as me,aQ as we,aR as ke,w as ye,x as _e,z as fe,as as ee,aS as ve,aT as Q,aU as $,P as K,U as Te,$ as H,aV as Se,aW as Fe,aX as be,a5 as S,a6 as B,aY as j,av as P,aG as ge,_ as he}from"./index-dec11783.js";import{_ as Be}from"./SelectToken.vue_vue_type_script_setup_true_lang-90c54aa6.js";import{u as Ae,t as L}from"./swap-ee39787e.js";import"./associatedTokenAccount-7d683dc6.js";const G=oe([te("instruction")]);function Ne(r,o=z){const i=[{pubkey:r,isSigner:!1,isWritable:!0}],c=ae.Buffer.alloc(G.span);return G.encode({instruction:ne.SyncNative},c),new se({keys:i,programId:o,data:c})}async function De(r,o,i,c,b=z){const k=new x().add(Ne(i,b));return await le(r,k,[o],c)}const Ve={key:0,class:"policy-card__policy q-pa-md"},Ce={class:"policy-card__policy__info"},Me={class:"policy-card__policy__subtitle"},Pe={class:"policy-card__policy__subtitle"},qe=l("div",{class:"policy-card__policy__subtitle"}," Rules: ",-1),Ue={class:"q-ml-xs"},$e={key:0},xe=W({__name:"SelectPolicyItem",props:{policyData:Object,policy:Object},setup(r){const o=J(),i=C(()=>o.serviceData),c=C(()=>o.serviceLoading);return(b,k)=>(f(),q(X,{class:""},{default:w(()=>[t(c)?M("",!0):(f(),F("div",Ve,[l("div",Ce,[l("div",Me," Address: "+v(r.policy?.toBase58()),1),l("div",Pe," Name: "+v(t(i)?.name)+" "+v(r.policyData?.name),1),qe,l("div",Ue,[(f(!0),F(re,null,ie(r.policyData?.rules,(e,g)=>(f(),F("div",{key:g},[e.key!=="maxAge"&&e.key!=="expectedDateTo"||e.label!=="0"?(f(),F("span",$e,v(t(ce)(e.key,e.label,e.value)),1)):M("",!0)]))),128))])])]))]),_:1}))}}),Ke={key:0},We={key:1},Oe=W({__name:"CreatePoolTokenData",props:{balance:[String,Number],mint:String},setup(r){return(o,i)=>(f(),F("div",null,[r.mint?(f(),F("div",Ke,[l("div",null," balance: "+v(r.balance),1),l("div",null,[T(" mint: "+v(t(ue)(r.mint))+" ",1),s(de,{anchor:"top middle",self:"bottom middle",offset:[10,10]},{default:w(()=>[T(v(r.mint),1)]),_:1})])])):(f(),F("div",We," Select token "))]))}});function Ie(){const r=Y(),{notify:o}=Z(),i=pe(r,"cluster"),c=U(!1);async function b(k,{onSuccess:e,onError:g,idx:p,commitment:A=me,sendTimeout:N=we,confirmTimeout:D=ke}={}){p=p??"";let m=o({progress:!0,type:"ongoing",message:p?`Sending transaction "${p}" ...`:"Sending transaction...",timeout:N});const d={label:"Close",color:"white"};c.value=!0;let u="";try{const _=await k;u=String(typeof _=="object"?await _.signature:await k)}catch(_){c.value=!1,m(),String(_?.message).startsWith("User rejected")||o({message:p?`Transaction "${p}" error`:"Transaction error",caption:_?.message,type:"negative",timeout:0,actions:[d]});return}const y={label:"Explore",color:"white",target:"_blank",href:`https://solscan.io/tx/${u}?cluster=${i.value}`,onClick:()=>!1};try{m(),m=o({progress:!0,type:"ongoing",message:p?`Confirming transaction "${p}" ...`:"Confirming transaction...",actions:[y],timeout:D});const _=await r.connection.getLatestBlockhash(),V=await r.connection.confirmTransaction({blockhash:_.blockhash,lastValidBlockHeight:_.lastValidBlockHeight,signature:u},A);if(m(),V.value.err)throw new Error(JSON.stringify(V.value.err));m=o({message:p?`Transaction "${p}" confirmed`:"Transaction confirmed",type:"positive",actions:[y]}),e&&e(u)}catch(_){m(),o({message:p?`Transaction "${p}" error`:"Transaction error",caption:_.message,type:"negative",timeout:0,actions:[y,d]}),g&&g(_),console.error(_)}finally{c.value=!1}}return{monitorTransaction:b,sending:c}}function Ee(){const r=Ae(),o=ye(),{publicKey:i}=_e(),c=Y(),{monitorTransaction:b}=Ie(),{notify:k}=Z(),e=fe({tokenA:void 0,tokenB:void 0,policy:void 0,hostFeeNumerator:0,hostFeeDenominator:1e3,tradeFeeNumerator:0,tradeFeeDenominator:1e3,ownerTradeFeeNumerator:0,ownerTradeFeeDenominator:1e3,ownerWithdrawFeeNumerator:0,ownerWithdrawFeeDenominator:1e3,creating:!1,tokenSwap:void 0,poolMint:void 0,poolFeeAccount:void 0,swapTokenA:void 0,swapTokenB:void 0});async function g(){!i.value||!o.value||(De(),e.tokenSwap=ee.generate(),console.log("[create swap] token swap pk = ",e.tokenSwap.publicKey.toBase58()),console.log("[create swap] token swap sk = ",e.tokenSwap.secretKey.toString()))}async function p(){if(!i.value||!o.value||!e.tokenSwap)return;const m=r.swapClient.swapAuthority(e.tokenSwap.publicKey),d=new x,u=await ve(c.connection,d,i.value,m,9);console.log("[create swap] poolMint = ",u.publicKey.toBase58()),d.instructions.length>0?await b(Q(c.connection,o.value,d.instructions,[u]),{onSuccess:()=>{e.poolMint=u.publicKey,k({type:"positive",message:"Pool mint created successfully."})}}):e.poolMint=u.publicKey}async function A(){if(!i.value||!o.value||!e.tokenSwap||!e.poolMint)return;if(!e.tokenA||!e.tokenB)return k({type:"negative",message:"Select tokens"});const m=r.swapClient.swapAuthority(e.tokenSwap.publicKey),d=new x,u=await $(c.connection,d,e.poolMint,i.value),h=await $(c.connection,d,new K(e.tokenA.mint),m,i.value,!0),y=await $(c.connection,d,new K(e.tokenB.mint),m,i.value,!0);console.log("[create swap] poolFeeAccount = ",u.toBase58()),console.log("[create swap] swapTokenA = ",h.toBase58()),console.log("[create swap] swapTokenB = ",y.toBase58()),d.instructions.length>0?await b(Q(c.connection,o.value,d.instructions),{commitment:"finalized",onSuccess:()=>{e.poolFeeAccount=u,e.swapTokenA=h,e.swapTokenB=y,k({type:"positive",message:"Pool accounts created successfully."})}}):(e.poolFeeAccount=u,e.swapTokenA=h,e.swapTokenB=y)}async function N(){if(!i.value||!o.value||!e.tokenSwap||!e.poolMint||!e.poolFeeAccount||!e.swapTokenA||!e.swapTokenB)return;if(!e.tokenA||!e.tokenB)return k({type:"negative",message:"Select tokens"});if(!e.policy)return k({type:"negative",message:"Select policy"});console.log("createTokenSwap: ",{tokenSwap:e.tokenSwap.publicKey.toBase58(),poolMint:e.poolMint.toBase58(),poolFee:e.poolFeeAccount.toBase58(),destination:e.poolFeeAccount.toBase58(),tokenA:e.swapTokenA.toBase58(),tokenB:e.swapTokenB.toBase58(),policy:e.policy.pubkey.toBase58(),curveType:L.ConstantProduct,curveParameters:[],fees:{tradeFeeNumerator:e.tradeFeeNumerator,tradeFeeDenominator:e.tradeFeeDenominator,ownerTradeFeeNumerator:e.ownerTradeFeeNumerator,ownerTradeFeeDenominator:e.ownerTradeFeeDenominator,ownerWithdrawFeeNumerator:e.ownerWithdrawFeeNumerator,ownerWithdrawFeeDenominator:e.ownerWithdrawFeeDenominator,hostFeeNumerator:e.hostFeeNumerator,hostFeeDenominator:e.hostFeeDenominator}});const m=await r.swapClient.createTokenSwap({tokenSwap:e.tokenSwap,poolMint:e.poolMint,poolFee:e.poolFeeAccount,destination:e.poolFeeAccount,tokenA:e.swapTokenA,tokenB:e.swapTokenB,policy:e.policy.pubkey,curveType:L.ConstantProduct,curveParameters:[],fees:{tradeFeeNumerator:e.tradeFeeNumerator,tradeFeeDenominator:e.tradeFeeDenominator,ownerTradeFeeNumerator:e.ownerTradeFeeNumerator,ownerTradeFeeDenominator:e.ownerTradeFeeDenominator,ownerWithdrawFeeNumerator:e.ownerWithdrawFeeNumerator,ownerWithdrawFeeDenominator:e.ownerWithdrawFeeDenominator,hostFeeNumerator:e.hostFeeNumerator,hostFeeDenominator:e.hostFeeDenominator}});k({type:"positive",message:`Swap Pool created successfully. ${e.tokenSwap?.publicKey.toBase58()}`}),console.log("[create swap] tokenSwap result = ",m)}function D(){e.hostFeeNumerator=0,e.hostFeeDenominator=1e3,e.tradeFeeNumerator=0,e.tradeFeeDenominator=1e3,e.ownerTradeFeeNumerator=0,e.ownerTradeFeeDenominator=1e3,e.ownerWithdrawFeeNumerator=0,e.ownerWithdrawFeeDenominator=1e3,e.policy=void 0,e.tokenA=void 0,e.tokenB=void 0}return{state:e,reset:D,generateSwapKeypair:g,createPoolMint:p,createPoolAccounts:A,createTokenSwap:N}}const Re={class:"row"},Qe={class:"row q-mt-md"},He={class:"q-mt-md"},je=l("div",null,"Policy:",-1),Le={class:"row q-mt-md"},Ge={class:"row q-mt-md"},ze={class:"row q-mt-md"},Je={class:"row q-mt-md"},Xe={class:"q-mt-lg row"},Ye={class:"q-mt-mt"},Ze=l("div",{class:"text-subtitle2"}," Token Swap ",-1),eo={style:{"word-break":"break-all"}},oo={key:0},to={class:"q-mt-sm row"},ao={class:"q-mt-xl row"},no={key:0},so={class:"q-mt-sm row"},lo={class:"q-mt-xl row"},ro=l("div",{class:"text-warning"}," Top up pool tokenA and tokenB accounts before create pool ",-1),io={class:"q-mt-xl row"},co=W({__name:"CreateSwapCard",setup(r){const{state:o,createTokenSwap:i,createPoolAccounts:c,generateSwapKeypair:b,createPoolMint:k}=Ee(),{handleSearchToken:e,tokens:g}=Te(),p=J(),A=C(()=>p.servicePolicy),N=C(()=>o.tokenA?p.tokenBalance(o.tokenA.mint):0),D=C(()=>o.tokenB?p.tokenBalance(o.tokenB.mint):0);function m(V,n){o[V]=n}const d=U(!1),u=U("");function h(){u.value&&(o.tokenSwap=ee.fromSecretKey(Uint8Array.from(JSON.parse(`[${u.value}]`))))}const y=U("");function _(){y.value&&(o.poolMint=new K(y.value))}return(V,n)=>{const O=Be,I=Oe,E=xe,R=ge;return f(),q(X,{class:"swap-cardswap-widget full-width"},{default:w(()=>[s(H,{class:"swap-card__header"},{default:w(()=>[T(" Create Pool ")]),_:1}),s(H,{class:"swap-card__body"},{default:w(()=>[l("div",Re,[s(O,{options:t(g),token:t(o).tokenA,"swap-token":String(t(o).tokenA?.symbol),onHandleSearchToken:t(e),onSetToken:n[0]||(n[0]=a=>m("tokenA",a))},null,8,["options","token","swap-token","onHandleSearchToken"]),s(I,{class:"q-ml-lg q-mt-xs",balance:t(N),mint:t(o).tokenA?.mint},null,8,["balance","mint"])]),l("div",Qe,[s(O,{options:t(g),token:t(o).tokenB,"swap-token":String(t(o).tokenB?.symbol),onHandleSearchToken:t(e),onSetToken:n[1]||(n[1]=a=>m("tokenB",a))},null,8,["options","token","swap-token","onHandleSearchToken"]),s(I,{class:"q-ml-lg q-mt-xs",balance:t(D),mint:t(o).tokenB?.mint},null,8,["balance","mint"])]),l("div",He,[je,s(Se,{modelValue:t(o).policy,"onUpdate:modelValue":n[2]||(n[2]=a=>t(o).policy=a),"option-disable":"inactive","popup-content-class":"transition-duration",outlined:"",options:t(A),dense:"","options-dense":!1,"option-value":"mint","option-label":"name"},{selected:w(()=>[t(o).policy?(f(),q(E,{key:t(o).policy.pubkey,policy:t(o).policy.pubkey,"policy-data":t(o).policy.data},null,8,["policy","policy-data"])):M("",!0)]),option:w(a=>[s(Fe,be(a.itemProps,{class:"token-select__token"}),{default:w(()=>[(f(),q(E,{key:a.opt.pubkey,policy:a.opt.pubkey,"policy-data":a.opt.data},null,8,["policy","policy-data"]))]),_:2},1040)]),_:1},8,["modelValue","options"])]),l("div",Le,[s(S,{modelValue:t(o).hostFeeNumerator,"onUpdate:modelValue":n[3]||(n[3]=a=>t(o).hostFeeNumerator=a),class:"q-mr-md",label:"Host fee Numerator"},null,8,["modelValue"]),s(S,{modelValue:t(o).hostFeeDenominator,"onUpdate:modelValue":n[4]||(n[4]=a=>t(o).hostFeeDenominator=a),label:"Host fee Denominator"},null,8,["modelValue"])]),l("div",Ge,[s(S,{modelValue:t(o).tradeFeeNumerator,"onUpdate:modelValue":n[5]||(n[5]=a=>t(o).tradeFeeNumerator=a),class:"q-mr-md",label:"Trade fee Numerator"},null,8,["modelValue"]),s(S,{modelValue:t(o).tradeFeeDenominator,"onUpdate:modelValue":n[6]||(n[6]=a=>t(o).tradeFeeDenominator=a),label:"Trade fee Denominator"},null,8,["modelValue"])]),l("div",ze,[s(S,{modelValue:t(o).ownerTradeFeeNumerator,"onUpdate:modelValue":n[7]||(n[7]=a=>t(o).ownerTradeFeeNumerator=a),class:"q-mr-md",label:"Owner trade fee Numerator"},null,8,["modelValue"]),s(S,{modelValue:t(o).ownerTradeFeeDenominator,"onUpdate:modelValue":n[8]||(n[8]=a=>t(o).ownerTradeFeeDenominator=a),label:"Owner trade fee Denominator"},null,8,["modelValue"])]),l("div",Je,[s(S,{modelValue:t(o).ownerWithdrawFeeNumerator,"onUpdate:modelValue":n[9]||(n[9]=a=>t(o).ownerWithdrawFeeNumerator=a),class:"q-mr-md",label:"Owner withdraw fee Numerator"},null,8,["modelValue"]),s(S,{modelValue:t(o).ownerWithdrawFeeDenominator,"onUpdate:modelValue":n[10]||(n[10]=a=>t(o).ownerWithdrawFeeDenominator=a),label:"Owner withdraw fee Denominator"},null,8,["modelValue"])]),l("div",Xe,[s(B,{class:"q-ml-auto",onClick:t(b)},{default:w(()=>[T(" Generate Swap Keypair ")]),_:1},8,["onClick"])]),l("div",Ye,[Ze,l("div",null,"Public key: "+v(t(o).tokenSwap?.publicKey.toBase58()),1),l("div",eo," Secret key: "+v(t(o).tokenSwap?.secretKey.toString()),1),t(o).tokenSwap?(f(),F("div",oo,[s(R,{text:t(o).tokenSwap.secretKey.toString()},null,8,["text"]),T(" Copy Token Swap secret key ")])):M("",!0)]),s(j,{modelValue:t(d),"onUpdate:modelValue":n[12]||(n[12]=a=>P(d)?d.value=a:null),label:"Set token swap from secret key"},{default:w(()=>[s(S,{modelValue:t(u),"onUpdate:modelValue":n[11]||(n[11]=a=>P(u)?u.value=a:null),class:"q-mr-md",label:"Token Swap Secret"},null,8,["modelValue"]),l("div",to,[s(B,{class:"q-ml-auto",disable:!t(u),onClick:h},{default:w(()=>[T(" Set Swap Keypair ")]),_:1},8,["disable"])])]),_:1},8,["modelValue"]),l("div",ao,[s(B,{class:"q-ml-auto",disable:!!t(o).poolMint,onClick:t(k)},{default:w(()=>[T(" Create Pool Mint ")]),_:1},8,["disable","onClick"])]),l("div",null,"Pool mint: "+v(t(o).poolMint?.toBase58()),1),t(o).poolMint?(f(),F("div",no,[s(R,{text:t(o).poolMint?.toBase58()},null,8,["text"]),T(" Copy Pool Mint public key ")])):M("",!0),s(j,{modelValue:t(d),"onUpdate:modelValue":n[14]||(n[14]=a=>P(d)?d.value=a:null),label:"Set pool mint manually"},{default:w(()=>[s(S,{modelValue:t(y),"onUpdate:modelValue":n[13]||(n[13]=a=>P(y)?y.value=a:null),class:"q-mr-md",label:"Pool Mint"},null,8,["modelValue"]),l("div",so,[s(B,{class:"q-ml-auto",disable:!t(y),onClick:_},{default:w(()=>[T(" Set Pool Mint ")]),_:1},8,["disable"])])]),_:1},8,["modelValue"]),l("div",lo,[s(B,{class:"q-ml-auto",onClick:t(c)},{default:w(()=>[T(" Create Pool token accounts ")]),_:1},8,["onClick"])]),l("div",null,"Pool fee account: "+v(t(o).poolFeeAccount?.toBase58()),1),l("div",null,"Pool token A account: "+v(t(o).swapTokenA?.toBase58()),1),l("div",null,"Pool token B account: "+v(t(o).swapTokenB?.toBase58()),1),ro,l("div",io,[s(B,{class:"q-ml-auto",onClick:t(i)},{default:w(()=>[T(" Create Pool ")]),_:1},8,["onClick"])])]),_:1})]),_:1})}}}),uo={},po={class:"main-block row justify-center"};function mo(r,o){const i=co;return f(),F("div",po,[s(i,{class:"q-mt-md"})])}const fo=he(uo,[["render",mo]]);export{fo as default};
