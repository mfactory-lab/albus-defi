import{_ as qe,o as ae,i as ie,k as tt,af as ot,ag as nt,B as b,ah as rt,ai as Ye,aj as at,a9 as ne,ak as it,al as st,m as s,am as K,P as y,n as P,an as ct,S as ut,V as w,v as $,w as q,x as lt,y as ze,C as Ge,M as Re,K as Pe,H as re,I as Y,ao as J,ap as Ve,aq as pt,ar as dt,as as mt,at as ft,au as ht,av as kt,A as gt,G as wt,aw as yt,ax as St,ay as X,az as Tt,U as vt,aA as Ue,aB as bt,X as At,Y as Ct,W as ee,F as Bt,j as v,a0 as I,a1 as Le,a5 as c,aC as Et,ae as Qe,a3 as Ke,a2 as te,a4 as m,a7 as B,a6 as Ft,a8 as L,aD as _t,aa as Mt,aE as It}from"./index-78714d6d.js";import{Q as $e,o as Dt,_ as Nt}from"./SelectToken.vue_vue_type_script_setup_true_lang-ac303e4b.js";const Wt={},xt={class:"swap-content"},Kt=tt('<div class="row"><div class="swap-content__title"> Compliant DeFi with KYC </div><div class="swap-content__details"><p> Compliant DeFi with KYC (Know Your Customer) and AML (Anti-Money Laundering) refers to a type of decentralized finance (DeFi) that incorporates customer identification and anti-money laundering measures to ensure compliance with regulatory requirements. </p><p> KYC refers to the process of verifying the identity of a customer to assess their risk profile and prevent illegal activities such as money laundering and financing of terrorism. In Compliant DeFi with KYC, users are required to provide personal information and undergo identity verification procedures before they can participate in DeFi activities. </p><p> AML refers to the set of policies, procedures, and regulations aimed at detecting and preventing money laundering. In Compliant DeFi with AML, transactions are monitored and analyzed to identify any suspicious or illegal activities. </p><p> By incorporating KYC and AML measures, Compliant DeFi aims to enhance the transparency and security of DeFi transactions while ensuring regulatory compliance. This helps to mitigate the risk of illegal activities in the DeFi ecosystem and enhance the trust and confidence of users, regulators, and other stakeholders. In conclusion, Compliant DeFi with KYC and AML is a new and evolving segment of the DeFi ecosystem that seeks to balance the benefits of decentralized finance with the need for regulatory compliance and security. </p></div></div><div class="row"><div class="swap-content__title"> What zKKYC? What are the benefits? </div><div class="swap-content__details"><p> zKKYC (Zero-Knowledge KYC) is a privacy-preserving technology that enables users to prove their identity without revealing their personal information. It is based on zero-knowledge proofs, a cryptographic technique that allows users to prove the validity of information without revealing the actual data. zKKYC provides a number of benefits over traditional KYC (Know Your Customer) methods that rely on sharing personal information with the platform or a third party: </p><ul class="swap-details"><li> Privacy: zKKYC allows users to prove their identity without revealing their personal information, providing greater privacy and control over their data. </li><li> Security: zKKYC eliminates the risk of personal information being stolen or misused, as the information is not stored or transmitted. </li><li> Convenience: zKKYC enables users to complete the KYC process quickly and easily, without having to provide personal information or wait for manual verification. </li><li> Compliance: zKKYC enables DeFi platforms to comply with regulatory requirements while still preserving user privacy and security. In conclusion, zKKYC is a cutting-edge technology that provides a solution to the challenges posed by traditional KYC methods and offers numerous benefits to both users and platforms in the DeFi ecosystem. </li></ul></div></div>',2),Ot=[Kt];function zt(t,e){return ae(),ie("div",xt,Ot)}const Pt=qe(Wt,[["render",zt]]),Yt=ot({name:"QBtnToggle",props:{...nt,modelValue:{required:!0},options:{type:Array,required:!0,validator:t=>t.every(e=>("label"in e||"icon"in e||"slot"in e)&&"value"in e)},color:String,textColor:String,toggleColor:{type:String,default:"primary"},toggleTextColor:String,outline:Boolean,flat:Boolean,unelevated:Boolean,rounded:Boolean,push:Boolean,glossy:Boolean,size:String,padding:String,noCaps:Boolean,noWrap:Boolean,dense:Boolean,readonly:Boolean,disable:Boolean,stack:Boolean,stretch:Boolean,spread:Boolean,clearable:Boolean,ripple:{type:[Boolean,Object],default:!0}},emits:["update:modelValue","clear","click"],setup(t,{slots:e,emit:o}){const r=b(()=>t.options.find(d=>d.value===t.modelValue)!==void 0),n=b(()=>({type:"hidden",name:t.name,value:t.modelValue})),f=st(n),T=b(()=>rt(t)),A=b(()=>({rounded:t.rounded,dense:t.dense,...T.value})),i=b(()=>t.options.map((d,g)=>{const{attrs:C,value:N,slot:W,...p}=d;return{slot:W,props:{key:g,"aria-pressed":N===t.modelValue?"true":"false",...C,...p,...A.value,disable:t.disable===!0||p.disable===!0,color:N===t.modelValue?l(p,"toggleColor"):l(p,"color"),textColor:N===t.modelValue?l(p,"toggleTextColor"):l(p,"textColor"),noCaps:l(p,"noCaps")===!0,noWrap:l(p,"noWrap")===!0,size:l(p,"size"),padding:l(p,"padding"),ripple:l(p,"ripple"),stack:l(p,"stack")===!0,stretch:l(p,"stretch")===!0,onClick(u){F(N,d,u)}}}}));function F(d,g,C){t.readonly!==!0&&(t.modelValue===d?t.clearable===!0&&(o("update:modelValue",null,null),o("clear")):o("update:modelValue",d,g),o("click",C))}function l(d,g){return d[g]===void 0?t[g]:d[g]}function S(){const d=i.value.map(g=>Ye(ne,g.props,g.slot!==void 0?e[g.slot]:void 0));return t.name!==void 0&&t.disable!==!0&&r.value===!0&&f(d,"push"),it(e.default,d)}return()=>Ye(at,{class:"q-btn-toggle",...T.value,rounded:t.rounded,stretch:t.stretch,glossy:t.glossy,spread:t.spread},S)}}),Rt=`<svg width="67" height="67" viewBox="0 0 67 67" fill="none" xmlns="http://www.w3.org/2000/svg">
<circle cx="33.5" cy="33.5" r="33.5" fill="#23353D"/>
<path d="M20.1164 28.7648C20.9418 26.6177 22.5532 24.83 24.2297 23.3017C25.8591 21.8172 27.7401 20.6021 29.8029 19.8138C30.9966 19.3579 32.2408 19.0323 33.5041 18.8402C33.667 18.8155 33.8365 18.7998 34.0095 18.7875C33.7197 19.0592 33.4401 19.34 33.1684 19.6229C32.6799 20.1305 32.2285 20.6684 31.8163 21.24C31.4244 21.7835 31.0191 22.3719 31.1123 23.0176C31.092 23.6959 31.8231 24.2596 32.4104 23.743C32.4182 23.7396 32.425 23.7363 32.434 23.7329C32.5575 23.6925 32.6642 23.624 32.7551 23.5274C32.8742 23.4084 32.9662 23.2467 33.0617 23.1086C33.2481 22.8379 33.4165 22.5561 33.6029 22.2854C33.9567 21.7723 34.3486 21.2871 34.7607 20.82C35.5221 19.9565 36.3755 19.1783 37.0324 18.2372C37.12 18.1788 37.2031 18.1137 37.2828 18.0396C37.558 17.7836 37.5355 17.3232 37.2828 17.0649C36.7652 16.5348 36.0409 16.4035 35.2941 16.4181C35.2368 16.4113 35.1807 16.4046 35.1245 16.3978C34.4126 16.3125 33.6939 16.2788 32.9775 16.2496C32.252 16.2204 31.5311 16.1721 30.8079 16.1093C30.4823 16.0812 30.1578 16.0408 29.8321 16.0093C29.4773 15.9756 29.1494 16.0441 28.7968 16.0452C27.9501 16.0475 27.6019 17.2356 28.3599 17.6589C28.4868 17.7297 28.6059 17.8015 28.726 17.87C26.8091 18.6673 25.045 19.7802 23.4594 21.1322C21.5235 22.7795 19.6931 24.7851 18.6263 27.1152C17.5673 29.4285 17.0586 32.1089 17.0036 34.6445C16.9733 36.0381 17.1372 37.4418 17.3686 38.814C17.628 40.3536 18.0232 41.9392 18.8048 43.3047C18.9643 43.5832 19.3842 43.4518 19.3932 43.1452C19.4314 41.81 19.1911 40.4794 19.0406 39.1565C18.9104 38.0078 18.8194 36.8601 18.8385 35.7035C18.8767 33.3453 19.2675 30.9748 20.1164 28.7648Z" fill="white"/>
<path d="M41.8667 21.8756C43.3344 21.9598 44.637 20.7953 44.9615 19.4197C45.1356 18.6786 44.9896 17.8947 44.491 17.3018C43.879 16.5719 42.9178 16.3979 42.0059 16.4888C41.2041 16.5697 40.3945 16.81 39.9554 17.5399C39.7398 17.8992 39.6747 18.4147 39.7679 18.874C39.5175 20.2125 40.4102 21.7925 41.8667 21.8756ZM42.0845 18.5214C42.3091 18.4877 42.7942 18.4023 42.9896 18.5775C43.0491 18.6303 43.0896 18.7729 43.103 18.8369C43.0907 18.8156 43.075 19.0222 43.0626 19.0705C42.9458 19.5129 42.5247 20.0508 42.0014 20.0384C41.5601 20.0283 41.3692 19.5668 41.2558 19.1255C41.3187 19.0222 41.3793 18.9211 41.4501 18.8335C41.6185 18.6247 41.7398 18.573 42.0845 18.5214Z" fill="white"/>
<path d="M24.7688 44.8016C24.3477 44.5444 23.7952 44.3266 23.2921 44.3254C22.7857 44.3243 22.0557 44.5545 21.7829 45.0205C21.7582 45.0632 21.738 45.107 21.7211 45.1508C20.752 45.3945 20.277 46.4501 20.2579 47.3922C20.2388 48.3995 20.7093 49.3742 21.5515 49.9357C23.4437 51.1967 26.1882 49.6516 26.2814 47.4405C26.3285 46.3613 25.6694 45.3529 24.7688 44.8016ZM24.0411 47.6538C23.7312 48.2086 22.9058 48.4612 22.5599 48.048C22.1299 47.5337 22.213 46.8902 22.4263 46.2693C22.7284 46.3378 23.0641 46.349 23.3438 46.4388C23.949 46.6331 24.3117 47.1676 24.0411 47.6538Z" fill="white"/>
<path d="M49.4881 28.0079C49.3275 27.2151 49.1478 26.4212 48.9154 25.6453C48.6717 24.8334 48.382 24.1203 48.0114 23.3634C47.7397 22.8087 46.7694 23.0603 46.8245 23.6846C46.8829 24.3449 46.9413 24.967 47.0648 25.6228C47.1973 26.3269 47.3332 27.031 47.4522 27.7362C47.6577 28.9501 47.8003 30.182 47.8508 31.4127C47.9519 33.8809 47.6386 36.4008 46.6235 38.6714C44.8874 42.5545 41.4231 45.5831 37.5838 47.3023C35.7017 48.1445 33.6669 48.6083 31.6131 48.6521C31.9174 48.3893 32.2116 48.1165 32.498 47.8402C33.3188 47.0486 34.3486 46.0042 34.4305 44.8015C34.4485 44.5332 34.1386 44.2962 33.8837 44.3849C32.8214 44.7589 32.0308 45.8268 31.2627 46.605C30.4205 47.4584 29.4829 48.2119 28.6373 49.0586C28.5351 49.1608 28.4756 49.272 28.4486 49.3831C28.1791 49.5774 28.0343 49.9278 28.2701 50.2501C29.265 51.6144 30.7698 52.4218 32.4227 52.7295C33.2447 52.8822 34.0993 52.9586 34.9314 52.8463C35.6018 52.7553 36.7382 52.3825 36.901 51.6133C36.9347 51.4527 36.9089 51.2674 36.7797 51.1529C36.3272 50.7509 35.5355 50.7981 34.9639 50.8127C34.2879 50.8295 33.6321 50.8958 32.9572 50.7913C32.8663 50.7767 32.7753 50.761 32.6844 50.743C36.8089 50.4252 40.7516 48.5555 43.8801 45.8638C47.7734 42.5152 50.054 37.7382 49.999 32.5794C49.9822 31.0433 49.7935 29.5104 49.4881 28.0079Z" fill="white"/>
</svg>
`;var Vt=Object.defineProperty,Ut=(t,e,o)=>e in t?Vt(t,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[e]=o,a=(t,e,o)=>(Ut(t,typeof e!="symbol"?e+"":e,o),o);const He=new s.BeetArgsStruct([["tradeFeeNumerator",s.u64],["tradeFeeDenominator",s.u64],["ownerTradeFeeNumerator",s.u64],["ownerTradeFeeDenominator",s.u64],["ownerWithdrawFeeNumerator",s.u64],["ownerWithdrawFeeDenominator",s.u64],["hostFeeNumerator",s.u64],["hostFeeDenominator",s.u64]],"FeesInfo"),je=new s.BeetArgsStruct([["curveType",s.u8],["curveParameters",s.uniformFixedSizeArray(s.u8,32)]],"CurveInfo"),Oe=[135,144,215,161,140,125,41,96];class D{constructor(e,o,r,n,f,T,A,i,F,l,S,d){this.isInitialized=e,this.bumpSeed=o,this.tokenProgramId=r,this.tokenA=n,this.tokenB=f,this.poolMint=T,this.tokenAMint=A,this.tokenBMint=i,this.poolFeeAccount=F,this.fees=l,this.curve=S,this.policy=d}static fromArgs(e){return new D(e.isInitialized,e.bumpSeed,e.tokenProgramId,e.tokenA,e.tokenB,e.poolMint,e.tokenAMint,e.tokenBMint,e.poolFeeAccount,e.fees,e.curve,e.policy)}static fromAccountInfo(e,o=0){return D.deserialize(e.data,o)}static async fromAccountAddress(e,o,r){const n=await e.getAccountInfo(o,r);if(n==null)throw new Error(`Unable to find TokenSwap account at ${o}`);return D.fromAccountInfo(n,0)[0]}static gpaBuilder(e=new y("J8YCNcS2xDvowMcSzWrDYNguk5y9NWfGStNT4YsiKuea")){return K.GpaBuilder.fromStruct(e,oe)}static deserialize(e,o=0){return oe.deserialize(e,o)}serialize(){return oe.serialize({accountDiscriminator:Oe,...this})}static byteSize(e){const o=D.fromArgs(e);return oe.toFixedFromValue({accountDiscriminator:Oe,...o}).byteSize}static async getMinimumBalanceForRentExemption(e,o,r){return o.getMinimumBalanceForRentExemption(D.byteSize(e),r)}pretty(){return{isInitialized:this.isInitialized,bumpSeed:this.bumpSeed,tokenProgramId:this.tokenProgramId.toBase58(),tokenA:this.tokenA.toBase58(),tokenB:this.tokenB.toBase58(),poolMint:this.poolMint.toBase58(),tokenAMint:this.tokenAMint.toBase58(),tokenBMint:this.tokenBMint.toBase58(),poolFeeAccount:this.poolFeeAccount.toBase58(),fees:this.fees,curve:this.curve,policy:this.policy}}}const oe=new s.FixableBeetStruct([["accountDiscriminator",s.uniformFixedSizeArray(s.u8,8)],["isInitialized",s.bool],["bumpSeed",s.u8],["tokenProgramId",K.publicKey],["tokenA",K.publicKey],["tokenB",K.publicKey],["poolMint",K.publicKey],["tokenAMint",K.publicKey],["tokenBMint",K.publicKey],["poolFeeAccount",K.publicKey],["fees",He],["curve",je],["policy",s.coption(K.publicKey)]],D.fromArgs,"TokenSwap"),h=new Map,k=new Map;class se extends Error{constructor(){super("Swap account already in use"),a(this,"code",6e3),a(this,"name","AlreadyInUse"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,se)}}h.set(6e3,()=>new se);k.set("AlreadyInUse",()=>new se);class ce extends Error{constructor(){super("Invalid program address generated from bump seed and key"),a(this,"code",6001),a(this,"name","InvalidProgramAddress"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,ce)}}h.set(6001,()=>new ce);k.set("InvalidProgramAddress",()=>new ce);class ue extends Error{constructor(){super("Input account owner is not the program address"),a(this,"code",6002),a(this,"name","InvalidOwner"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,ue)}}h.set(6002,()=>new ue);k.set("InvalidOwner",()=>new ue);class le extends Error{constructor(){super("Output pool account owner cannot be the program address"),a(this,"code",6003),a(this,"name","InvalidOutputOwner"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,le)}}h.set(6003,()=>new le);k.set("InvalidOutputOwner",()=>new le);class pe extends Error{constructor(){super("Deserialized account is not an SPL Token mint"),a(this,"code",6004),a(this,"name","ExpectedMint"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,pe)}}h.set(6004,()=>new pe);k.set("ExpectedMint",()=>new pe);class de extends Error{constructor(){super("Deserialized account is not an SPL Token account"),a(this,"code",6005),a(this,"name","ExpectedAccount"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,de)}}h.set(6005,()=>new de);k.set("ExpectedAccount",()=>new de);class me extends Error{constructor(){super("Input token account empty"),a(this,"code",6006),a(this,"name","EmptySupply"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,me)}}h.set(6006,()=>new me);k.set("EmptySupply",()=>new me);class fe extends Error{constructor(){super("Pool token mint has a non-zero supply"),a(this,"code",6007),a(this,"name","InvalidSupply"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,fe)}}h.set(6007,()=>new fe);k.set("InvalidSupply",()=>new fe);class he extends Error{constructor(){super("Token account has a delegate"),a(this,"code",6008),a(this,"name","InvalidDelegate"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,he)}}h.set(6008,()=>new he);k.set("InvalidDelegate",()=>new he);class ke extends Error{constructor(){super("InvalidInput"),a(this,"code",6009),a(this,"name","InvalidInput"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,ke)}}h.set(6009,()=>new ke);k.set("InvalidInput",()=>new ke);class ge extends Error{constructor(){super("Address of the provided swap token account is incorrect"),a(this,"code",6010),a(this,"name","IncorrectSwapAccount"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,ge)}}h.set(6010,()=>new ge);k.set("IncorrectSwapAccount",()=>new ge);class we extends Error{constructor(){super("Address of the provided pool token mint is incorrect"),a(this,"code",6011),a(this,"name","IncorrectPoolMint"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,we)}}h.set(6011,()=>new we);k.set("IncorrectPoolMint",()=>new we);class ye extends Error{constructor(){super("InvalidOutput"),a(this,"code",6012),a(this,"name","InvalidOutput"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,ye)}}h.set(6012,()=>new ye);k.set("InvalidOutput",()=>new ye);class Se extends Error{constructor(){super("General calculation failure due to overflow or underflow"),a(this,"code",6013),a(this,"name","CalculationFailure"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,Se)}}h.set(6013,()=>new Se);k.set("CalculationFailure",()=>new Se);class Te extends Error{constructor(){super("Invalid instruction"),a(this,"code",6014),a(this,"name","InvalidInstruction"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,Te)}}h.set(6014,()=>new Te);k.set("InvalidInstruction",()=>new Te);class ve extends Error{constructor(){super("Swap input token accounts have the same mint"),a(this,"code",6015),a(this,"name","RepeatedMint"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,ve)}}h.set(6015,()=>new ve);k.set("RepeatedMint",()=>new ve);class be extends Error{constructor(){super("Swap instruction exceeds desired slippage limit"),a(this,"code",6016),a(this,"name","ExceededSlippage"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,be)}}h.set(6016,()=>new be);k.set("ExceededSlippage",()=>new be);class Ae extends Error{constructor(){super("Token account has a close authority"),a(this,"code",6017),a(this,"name","InvalidCloseAuthority"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,Ae)}}h.set(6017,()=>new Ae);k.set("InvalidCloseAuthority",()=>new Ae);class Ce extends Error{constructor(){super("Pool token mint has a freeze authority"),a(this,"code",6018),a(this,"name","InvalidFreezeAuthority"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,Ce)}}h.set(6018,()=>new Ce);k.set("InvalidFreezeAuthority",()=>new Ce);class Be extends Error{constructor(){super("Pool fee token account incorrect"),a(this,"code",6019),a(this,"name","IncorrectFeeAccount"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,Be)}}h.set(6019,()=>new Be);k.set("IncorrectFeeAccount",()=>new Be);class Ee extends Error{constructor(){super("Given pool token amount results in zero trading tokens"),a(this,"code",6020),a(this,"name","ZeroTradingTokens"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,Ee)}}h.set(6020,()=>new Ee);k.set("ZeroTradingTokens",()=>new Ee);class Fe extends Error{constructor(){super("Fee calculation failed due to overflow, underflow, or unexpected 0"),a(this,"code",6021),a(this,"name","FeeCalculationFailure"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,Fe)}}h.set(6021,()=>new Fe);k.set("FeeCalculationFailure",()=>new Fe);class _e extends Error{constructor(){super("Conversion to u64/u128 failed with an overflow or underflow"),a(this,"code",6022),a(this,"name","ConversionFailure"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,_e)}}h.set(6022,()=>new _e);k.set("ConversionFailure",()=>new _e);class Me extends Error{constructor(){super("The provided fee does not match the program owner's constraints"),a(this,"code",6023),a(this,"name","InvalidFee"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,Me)}}h.set(6023,()=>new Me);k.set("InvalidFee",()=>new Me);class Ie extends Error{constructor(){super("The provided token program does not match the token program expected by the swap"),a(this,"code",6024),a(this,"name","IncorrectTokenProgramId"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,Ie)}}h.set(6024,()=>new Ie);k.set("IncorrectTokenProgramId",()=>new Ie);class De extends Error{constructor(){super("The provided curve type is not supported by the program owner"),a(this,"code",6025),a(this,"name","UnsupportedCurveType"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,De)}}h.set(6025,()=>new De);k.set("UnsupportedCurveType",()=>new De);class Ne extends Error{constructor(){super("The provided curve parameters are invalid"),a(this,"code",6026),a(this,"name","InvalidCurve"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,Ne)}}h.set(6026,()=>new Ne);k.set("InvalidCurve",()=>new Ne);class We extends Error{constructor(){super("The operation cannot be performed on the given curve"),a(this,"code",6027),a(this,"name","UnsupportedCurveOperation"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,We)}}h.set(6027,()=>new We);k.set("UnsupportedCurveOperation",()=>new We);const Lt=new s.BeetArgsStruct([["instructionDiscriminator",s.uniformFixedSizeArray(s.u8,8)],["poolTokenAmount",s.u64],["maximumTokenAAmount",s.u64],["maximumTokenBAmount",s.u64]],"DepositAllTokenTypesInstructionArgs"),$t=[32,95,69,60,75,79,205,238];function qt(t,e,o=new y("J8YCNcS2xDvowMcSzWrDYNguk5y9NWfGStNT4YsiKuea")){const[r]=Lt.serialize({instructionDiscriminator:$t,...e}),n=[{pubkey:t.tokenSwap,isWritable:!1,isSigner:!1},{pubkey:t.authority,isWritable:!1,isSigner:!1},{pubkey:t.userTransferAuthority,isWritable:!1,isSigner:!0},{pubkey:t.userTokenA,isWritable:!0,isSigner:!1},{pubkey:t.userTokenB,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenA,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenB,isWritable:!0,isSigner:!1},{pubkey:t.poolMint,isWritable:!0,isSigner:!1},{pubkey:t.destination,isWritable:!0,isSigner:!1},{pubkey:t.tokenProgram??$,isWritable:!1,isSigner:!1}];if(t.anchorRemainingAccounts!=null)for(const f of t.anchorRemainingAccounts)n.push(f);return new q({programId:o,keys:n,data:r})}const Gt=new s.BeetArgsStruct([["instructionDiscriminator",s.uniformFixedSizeArray(s.u8,8)],["sourceTokenAmount",s.u64],["minimumPoolTokenAmount",s.u64]],"DepositSingleTokenTypeInstructionArgs"),Qt=[175,0,152,41,199,0,148,43];function Ht(t,e,o=new y("J8YCNcS2xDvowMcSzWrDYNguk5y9NWfGStNT4YsiKuea")){const[r]=Gt.serialize({instructionDiscriminator:Qt,...e}),n=[{pubkey:t.tokenSwap,isWritable:!1,isSigner:!1},{pubkey:t.authority,isWritable:!1,isSigner:!1},{pubkey:t.userTransferAuthority,isWritable:!1,isSigner:!0},{pubkey:t.source,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenA,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenB,isWritable:!0,isSigner:!1},{pubkey:t.poolMint,isWritable:!0,isSigner:!1},{pubkey:t.destination,isWritable:!0,isSigner:!1},{pubkey:t.tokenProgram??$,isWritable:!1,isSigner:!1}];if(t.anchorRemainingAccounts!=null)for(const f of t.anchorRemainingAccounts)n.push(f);return new q({programId:o,keys:n,data:r})}const jt=new s.FixableBeetArgsStruct([["instructionDiscriminator",s.uniformFixedSizeArray(s.u8,8)],["feesInput",He],["curveInput",je],["policy",s.coption(K.publicKey)]],"InitializeInstructionArgs"),Jt=[175,175,109,31,13,152,155,237];function Zt(t,e,o=new y("J8YCNcS2xDvowMcSzWrDYNguk5y9NWfGStNT4YsiKuea")){const[r]=jt.serialize({instructionDiscriminator:Jt,...e}),n=[{pubkey:t.authority,isWritable:!1,isSigner:!1},{pubkey:t.tokenSwap,isWritable:!0,isSigner:!0},{pubkey:t.poolMint,isWritable:!0,isSigner:!1},{pubkey:t.tokenA,isWritable:!0,isSigner:!1},{pubkey:t.tokenB,isWritable:!0,isSigner:!1},{pubkey:t.poolFee,isWritable:!0,isSigner:!1},{pubkey:t.destination,isWritable:!0,isSigner:!1},{pubkey:t.tokenProgram??$,isWritable:!1,isSigner:!1}];if(t.anchorRemainingAccounts!=null)for(const f of t.anchorRemainingAccounts)n.push(f);return new q({programId:o,keys:n,data:r})}const Xt=new s.BeetArgsStruct([["instructionDiscriminator",s.uniformFixedSizeArray(s.u8,8)],["amountIn",s.u64],["minimumAmountOut",s.u64]],"SwapInstructionArgs"),eo=[248,198,158,145,225,117,135,200];function to(t,e,o=new y("J8YCNcS2xDvowMcSzWrDYNguk5y9NWfGStNT4YsiKuea")){const[r]=Xt.serialize({instructionDiscriminator:eo,...e}),n=[{pubkey:t.proofRequest??o,isWritable:!1,isSigner:!1},{pubkey:t.tokenSwap,isWritable:!1,isSigner:!1},{pubkey:t.authority,isWritable:!1,isSigner:!1},{pubkey:t.userTransferAuthority,isWritable:!1,isSigner:!0},{pubkey:t.userSource,isWritable:!0,isSigner:!1},{pubkey:t.userDestination,isWritable:!0,isSigner:!1},{pubkey:t.poolSource,isWritable:!0,isSigner:!1},{pubkey:t.poolDestination,isWritable:!0,isSigner:!1},{pubkey:t.poolMint,isWritable:!0,isSigner:!1},{pubkey:t.poolFee,isWritable:!0,isSigner:!1},{pubkey:t.hostFeeAccount??o,isWritable:!1,isSigner:!1},{pubkey:t.tokenProgram??$,isWritable:!1,isSigner:!1}];if(t.anchorRemainingAccounts!=null)for(const f of t.anchorRemainingAccounts)n.push(f);return new q({programId:o,keys:n,data:r})}const oo=new s.BeetArgsStruct([["instructionDiscriminator",s.uniformFixedSizeArray(s.u8,8)],["poolTokenAmount",s.u64],["minimumTokenAAmount",s.u64],["minimumTokenBAmount",s.u64]],"WithdrawAllTokenTypesInstructionArgs"),no=[189,254,156,174,210,9,164,216];function ro(t,e,o=new y("J8YCNcS2xDvowMcSzWrDYNguk5y9NWfGStNT4YsiKuea")){const[r]=oo.serialize({instructionDiscriminator:no,...e}),n=[{pubkey:t.tokenSwap,isWritable:!1,isSigner:!1},{pubkey:t.authority,isWritable:!1,isSigner:!1},{pubkey:t.userTransferAuthority,isWritable:!1,isSigner:!0},{pubkey:t.poolMint,isWritable:!0,isSigner:!1},{pubkey:t.source,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenA,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenB,isWritable:!0,isSigner:!1},{pubkey:t.destTokenA,isWritable:!0,isSigner:!1},{pubkey:t.destTokenB,isWritable:!0,isSigner:!1},{pubkey:t.poolFee,isWritable:!0,isSigner:!1},{pubkey:t.tokenProgram??$,isWritable:!1,isSigner:!1}];if(t.anchorRemainingAccounts!=null)for(const f of t.anchorRemainingAccounts)n.push(f);return new q({programId:o,keys:n,data:r})}const ao=new s.BeetArgsStruct([["instructionDiscriminator",s.uniformFixedSizeArray(s.u8,8)],["destinationTokenAmount",s.u64],["maximumPoolTokenAmount",s.u64]],"WithdrawSingleTokenTypeInstructionArgs"),io=[111,171,21,77,237,181,241,56];function so(t,e,o=new y("J8YCNcS2xDvowMcSzWrDYNguk5y9NWfGStNT4YsiKuea")){const[r]=ao.serialize({instructionDiscriminator:io,...e}),n=[{pubkey:t.tokenSwap,isWritable:!1,isSigner:!1},{pubkey:t.authority,isWritable:!1,isSigner:!1},{pubkey:t.userTransferAuthority,isWritable:!1,isSigner:!0},{pubkey:t.poolMint,isWritable:!0,isSigner:!1},{pubkey:t.source,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenA,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenB,isWritable:!0,isSigner:!1},{pubkey:t.destination,isWritable:!0,isSigner:!1},{pubkey:t.poolFee,isWritable:!0,isSigner:!1},{pubkey:t.tokenProgram??$,isWritable:!1,isSigner:!1}];if(t.anchorRemainingAccounts!=null)for(const f of t.anchorRemainingAccounts)n.push(f);return new q({programId:o,keys:n,data:r})}var Je=(t=>(t[t.ConstantProduct=0]="ConstantProduct",t[t.ConstantPrice=1]="ConstantPrice",t[t.Offset=2]="Offset",t))(Je||{});s.fixedScalarEnum(Je);var Ze=(t=>(t[t.Floor=0]="Floor",t[t.Ceiling=1]="Ceiling",t))(Ze||{});s.fixedScalarEnum(Ze);var Xe=(t=>(t[t.AtoB=0]="AtoB",t[t.BtoA=1]="BtoA",t))(Xe||{});s.fixedScalarEnum(Xe);const co="J8YCNcS2xDvowMcSzWrDYNguk5y9NWfGStNT4YsiKuea",uo=new y(co);class lo{constructor(e){a(this,"programId",uo),this.provider=e}get connection(){return this.provider.connection}swapAuthority(e){return y.findProgramAddressSync([e.toBuffer()],this.programId)[0]}async createTokenSwap(e,o){const r=new P,n=e.tokenSwap??ct.generate(),f=Array.from({length:32}),T=Array.from(e.curveParameters??[]);for(let S=0;S<T.length;S++)f[S]=T[S];const A={curveType:e.curveType,curveParameters:f},i=D.byteSize({bumpSeed:0,curve:A,fees:{tradeFeeNumerator:0,tradeFeeDenominator:0,ownerTradeFeeNumerator:0,ownerTradeFeeDenominator:0,ownerWithdrawFeeNumerator:0,ownerWithdrawFeeDenominator:0,hostFeeNumerator:0,hostFeeDenominator:0},isInitialized:!1,policy:y.default,poolFeeAccount:y.default,poolMint:y.default,tokenA:y.default,tokenAMint:y.default,tokenB:y.default,tokenBMint:y.default,tokenProgramId:y.default}),F=await this.connection.getMinimumBalanceForRentExemption(i);r.add(ut.createAccount({fromPubkey:this.provider.publicKey,newAccountPubkey:n.publicKey,programId:this.programId,lamports:F,space:i})),r.add(Zt({authority:this.swapAuthority(n.publicKey),tokenSwap:n.publicKey,destination:e.destination,poolMint:e.poolMint,poolFee:e.poolFee,tokenA:e.tokenA,tokenB:e.tokenB},{feesInput:{tradeFeeNumerator:new w(e.fees.tradeFeeNumerator.toString()),tradeFeeDenominator:new w(e.fees.tradeFeeDenominator.toString()),ownerTradeFeeNumerator:new w(e.fees.ownerTradeFeeNumerator.toString()),ownerTradeFeeDenominator:new w(e.fees.ownerTradeFeeDenominator.toString()),ownerWithdrawFeeNumerator:new w(e.fees.ownerWithdrawFeeNumerator.toString()),ownerWithdrawFeeDenominator:new w(e.fees.ownerWithdrawFeeDenominator.toString()),hostFeeNumerator:new w(e.fees.hostFeeNumerator.toString()),hostFeeDenominator:new w(e.fees.hostFeeDenominator.toString())},curveInput:A,policy:e.policy??null}));const l=await this.provider.sendAndConfirm(r,[n],o);return{tokenSwap:n.publicKey,signature:l}}async swap(e,o){const r=to({authority:this.swapAuthority(e.tokenSwap),userTransferAuthority:this.provider.publicKey,userSource:e.userSource,userDestination:e.userDestination,tokenSwap:e.tokenSwap,poolFee:e.poolFee,poolMint:e.poolMint,poolSource:e.poolSource,poolDestination:e.poolDestination,proofRequest:e.proofRequest,hostFeeAccount:e.hostFeeAccount},{amountIn:new w(e.amountIn.toString()),minimumAmountOut:new w(e.minimumAmountOut.toString())}),n=new P().add(r);return this.provider.sendAndConfirm(n,[],o)}async depositAllTokenTypes(e,o){const r=qt({authority:this.swapAuthority(e.tokenSwap),userTransferAuthority:this.provider.publicKey,tokenSwap:e.tokenSwap,poolMint:e.poolMint,destination:e.destination,userTokenA:e.userTokenA,userTokenB:e.userTokenB,swapTokenA:e.swapTokenA,swapTokenB:e.swapTokenB},{poolTokenAmount:new w(e.poolTokenAmount.toString()),maximumTokenAAmount:new w(e.maximumTokenA.toString()),maximumTokenBAmount:new w(e.maximumTokenB.toString())}),n=new P().add(r);return this.provider.sendAndConfirm(n,[],o)}async withdrawAllTokenTypes(e,o){const r=ro({authority:this.swapAuthority(e.tokenSwap),userTransferAuthority:this.provider.publicKey,tokenSwap:e.tokenSwap,poolMint:e.poolMint,poolFee:e.poolFee,source:e.source,destTokenA:e.destTokenA,destTokenB:e.destTokenB,swapTokenA:e.swapTokenA,swapTokenB:e.swapTokenB},{poolTokenAmount:new w(e.poolTokenAmount.toString()),minimumTokenAAmount:new w(e.minimumTokenA.toString()),minimumTokenBAmount:new w(e.minimumTokenB.toString())}),n=new P().add(r);return this.provider.sendAndConfirm(n,[],o)}async depositSingleTokenTypeExactAmountIn(e,o){const r=Ht({authority:this.swapAuthority(e.tokenSwap),userTransferAuthority:this.provider.publicKey,tokenSwap:e.tokenSwap,poolMint:e.poolMint,source:e.source,destination:e.destination,swapTokenA:e.swapTokenA,swapTokenB:e.swapTokenB},{sourceTokenAmount:new w(e.sourceTokenAmount.toString()),minimumPoolTokenAmount:new w(e.minimumPoolTokenAmount.toString())}),n=new P().add(r);return this.provider.sendAndConfirm(n,[],o)}async withdrawSingleTokenTypeExactAmountOut(e,o){const r=so({authority:this.swapAuthority(e.tokenSwap),userTransferAuthority:this.provider.publicKey,tokenSwap:e.tokenSwap,poolMint:e.poolMint,poolFee:e.poolFee,source:e.source,destination:e.destination,swapTokenA:e.swapTokenA,swapTokenB:e.swapTokenB},{destinationTokenAmount:new w(e.destinationTokenAmount.toString()),maximumPoolTokenAmount:new w(e.maximumPoolTokenAmount.toString())}),n=new P().add(r);return this.provider.sendAndConfirm(n,[],o)}async load(e,o){return D.fromAccountAddress(this.provider.connection,new y(e),o)}async loadAll(e={}){const o=D.gpaBuilder().addFilter("accountDiscriminator",Oe);return e.noData&&(o.config.dataSlice={offset:0,length:0}),e.tokenProgramId&&o.addFilter("tokenProgramId",new y(e.tokenProgramId)),e.poolMint&&o.addFilter("poolMint",new y(e.poolMint)),e.tokenAMint&&o.addFilter("tokenAMint",new y(e.tokenAMint)),e.tokenBMint&&o.addFilter("tokenBMint",new y(e.tokenBMint)),(await o.run(this.provider.connection)).map(({pubkey:r,account:n})=>({pubkey:r,data:e.noData?null:D.fromAccountInfo(n)[0]}))}}var j=(t=>(t.TOKEN_A="TOKEN_A",t.TOKEN_B="TOKEN_B",t))(j||{});const et=lt("swap",()=>{const t=ze(),e=Ge(),o=b(()=>new lo(new Re(t.connection,e.value??{publicKey:y.default},Re.defaultOptions()))),r=Pe(),n=re({loading:!1,slippageDialog:!1,status:void 0,poolBalance:{TOKEN_A:void 0,TOKEN_B:void 0},userBalance:{TOKEN_A:void 0,TOKEN_B:void 0},poolTokenSupply:0});Y(e,async l=>{l?f().then():F()},{immediate:!0}),Y(r,async l=>{l&&await A()});async function f(){n.loading=!0;try{r.value=await o.value.load(J),console.log("Token SWAP: ",r.value),await T()}catch(l){console.log(l),r.value=void 0}finally{n.loading=!1}}async function T(){if(!r.value)return;const l=await Ve(t.connection,o.value.swapAuthority(J));for(const d of l){const g=i(d.mint);g&&(n.poolBalance[g]=d.amount)}const S=await pt(t.connection,r.value.poolMint);n.poolTokenSupply=Number(S.supply)}async function A(){if(!r.value)return;const l=e.value?.publicKey;if(!l){console.log("Wallet is not connected...");return}const S=await Ve(t.connection,l,[r.value.tokenAMint,r.value.tokenBMint]),d={TOKEN_A:0,TOKEN_B:0};for(const g of S){const C=i(g.mint);C&&(d[C]=+g.amount)}n.userBalance=d,console.log("[Pool Balance]",n.poolBalance),console.log("[User Balance]",n.userBalance)}function i(l){if(r.value)switch(String(l)){case String(r.value.tokenAMint):return"TOKEN_A";case String(r.value.tokenBMint):return"TOKEN_B"}}function F(){n.loading=!1,n.slippageDialog=!1,n.status=void 0,n.poolBalance={TOKEN_A:void 0,TOKEN_B:void 0},n.userBalance={TOKEN_A:void 0,TOKEN_B:void 0},n.poolTokenSupply=0}return{state:n,tokenSwap:r,loadUserTokenAccounts:A,loadPoolTokenAccounts:T,swapClient:o}});function po(){const t=ze(),{notify:e}=dt(),o=mt(t,"cluster"),r=Pe(!1);async function n(f,{onSuccess:T,onError:A,idx:i,commitment:F=ft,sendTimeout:l=ht,confirmTimeout:S=kt}={}){i=i??"";let d=e({progress:!0,type:"ongoing",message:i?`Sending transaction "${i}" ...`:"Sending transaction...",timeout:l});const g={label:"Close",color:"white"};r.value=!0;let C="";try{const p=await f;C=String(typeof p=="object"?await p.signature:await f)}catch(p){r.value=!1,d(),String(p?.message).startsWith("User rejected")||e({message:i?`Transaction "${i}" error`:"Transaction error",caption:p?.message,type:"negative",timeout:0,actions:[g]});return}const W={label:"Explore",color:"white",target:"_blank",href:`https://solscan.io/tx/${C}?cluster=${o.value}`,onClick:()=>!1};try{d(),d=e({progress:!0,type:"ongoing",message:i?`Confirming transaction "${i}" ...`:"Confirming transaction...",actions:[W],timeout:S});const p=await t.connection.getLatestBlockhash(),u=await t.connection.confirmTransaction({blockhash:p.blockhash,lastValidBlockHeight:p.lastValidBlockHeight,signature:C},F);if(d(),u.value.err)throw new Error(JSON.stringify(u.value.err));d=e({message:i?`Transaction "${i}" confirmed`:"Transaction confirmed",type:"positive",actions:[W]}),T&&T(C)}catch(p){d(),e({message:i?`Transaction "${i}" error`:"Transaction error",caption:p.message,type:"negative",timeout:0,actions:[W,g]}),A&&A(p),console.error(p)}finally{r.value=!1}}return{monitorTransaction:n,sending:r}}function mo(){const t=gt(),e=et(),o=Ge(),r=ze(),{monitorTransaction:n}=po(),{notify:f}=wt(),T=re({image:yt,value:j.TOKEN_A,label:j.TOKEN_A}),A=re({image:St,value:j.TOKEN_B,label:j.TOKEN_B}),i=re({from:T,to:A,swapping:!1,active:!1,slippage:.01,rate:0,fees:{host:0,trade:0},direction:0});Y([()=>i.from.amount,()=>e.state.poolBalance],async()=>{const u=X(i.from.amount??0);if(u===0||Number.isNaN(u))return i.to.amount=0;const _=Number(e.state.poolBalance[i.from.label]??0),x=Number(e.state.poolBalance[i.to.label]??0),z=x-_*x/(_+u);i.to.amount=Tt(z??0),i.rate=u?z/u:x/_},{immediate:!0});const l=b(()=>{const u=Number(X(i.to.amount??0));return Math.floor(u-u*i.slippage)});async function S(){const u=e.tokenSwap;if(!t.certificateValid)return vt();if(!u){console.log("TokenSwap is not initialized...");return}o.value.publicKey||f({type:"info",message:"Please connect your wallet first"});const x=Number(X(i.from.amount??0)),z=Number(e.state.userBalance[i.from.label]??0),R=Number(X(i.to.amount??0));if(x>z){f({type:"negative",message:"Insufficient balance."});return}try{i.swapping=!0;const{userSourceMint:G,userDestinationMint:xe,poolSourceAddress:Z,poolDestinationAddress:Q}=d(),V=new P,U=await Ue(r.connection,V,G,o.value.publicKey),M=await Ue(r.connection,V,xe,o.value.publicKey);V.instructions.length>0&&await n(bt(r.connection,o.value,V.instructions),{commitment:"finalized",onSuccess:p});const E=x;console.log("toAmount = ",R),console.log("slippage = ",i.slippage),console.log("slippage 2 = ",R*i.slippage);const H=e.swapClient.swapAuthority(J);console.log("proofRequest = ",t.certificate?.pubkey.toBase58()),console.log("swapAuthority = ",H),console.log("tokenSwap = ",J.toBase58()),console.log("userSource = ",U.toBase58()),console.log("userDestination = ",M.toBase58()),console.log("poolSource = ",Z.toBase58()),console.log("poolDestination = ",Q.toBase58()),console.log("poolMint = ",u.poolMint.toBase58()),console.log("poolFee = ",u.poolFeeAccount.toBase58()),console.log("amountIn = ",E),console.log("minimumAmountOut = ",l.value),await e.swapClient.swap({proofRequest:t.certificate?.pubkey,authority:H,tokenSwap:J,userSource:U,userDestination:M,poolSource:Z,poolDestination:Q,poolMint:u.poolMint,poolFee:u.poolFeeAccount,amountIn:E,minimumAmountOut:l.value}),p()}catch(G){console.log(G)}finally{i.swapping=!1}}function d(){const u=e.tokenSwap,_=i.direction;return{userSourceMint:_===0?u.tokenAMint:u.tokenBMint,userDestinationMint:_===0?u.tokenBMint:u.tokenAMint,poolSourceAddress:_===0?u.tokenA:u.tokenB,poolDestinationAddress:_===0?u.tokenB:u.tokenA}}function g(){const{from:u,to:_}=i;i.rate=0,i.to={...u,amount:void 0},i.from={..._,amount:void 0},i.direction=i.direction===0?1:0}function C(){e.state.slippageDialog=!0}function N(){e.state.slippageDialog=!1}function W(u){i.from.amount=u}function p(){e.loadUserTokenAccounts(),i.from.amount=void 0,i.to.amount=void 0}return Y(()=>o.value?.publicKey,u=>{u||p()}),Y(()=>i.to,u=>{u.amount&&(u.amount=void 0)}),Y(()=>e.tokenSwap,u=>{u&&(i.fees.host=new w(u.fees.hostFeeNumerator).mul(new w(u.fees.hostFeeDenominator)).toNumber(),i.fees.trade=new w(u.fees.tradeFeeNumerator).mul(new w(u.fees.tradeFeeDenominator)).toNumber())}),{state:i,tokenSwap:e.tokenSwap,swapState:e.state,minimumReceived:l,setMax:W,closeSlippage:N,openSlippage:C,changeDirection:g,swapSubmit:S}}const fo={class:"swap-form"},ho={class:"swap-field"},ko={class:"swap-field__info"},go={class:"row items-end"},wo=m("div",{class:"col swap-field__label"}," FROM: ",-1),yo={class:"col-8 col-xs-10 row justify-end swap-field__balance"},So={key:0,class:"insufficient-error"},To={class:"swap-change"},vo=["innerHTML"],bo={class:"swap-field"},Ao={class:"swap-field__info"},Co={class:"row"},Bo=m("div",{class:"col swap-field__label"}," TO: ",-1),Eo={class:"col swap-field__balance"},Fo={class:"swap-info"},_o=m("dt",null,"Minimum Received::",-1),Mo=m("dt",null,"Slippage Tolerance:",-1),Io=m("dt",null,"Swap fee:",-1),Do={class:"swap-submit"},No={class:"swap-rate"},Wo=m("div",{class:"q-mt-lg"}," DEBUG: ",-1),xo=At({__name:"SwapCard",setup(t){const{state:e,swapState:o,minimumReceived:r,changeDirection:n,openSlippage:f,closeSlippage:T,setMax:A,swapSubmit:i}=mo(),{handleSearchToken:F,tokens:l}=Ct(),S=et(),d=b(()=>S.state.poolBalance.TOKEN_A/ee),g=b(()=>S.state.poolBalance.TOKEN_B/ee),{connected:C}=Bt(),N=b(()=>[...l.value].splice(-2));function W(M){return o.userBalance[M]/ee}const p=M=>It.format(M),u=Pe(0),_=b(()=>`transform: rotate(${u.value*180}deg)`),x=b(()=>e.from.label),z=b(()=>e.to.label),R=b(()=>W(x.value)),G=b(()=>W(z.value)),xe=b(()=>e.fees.host+e.fees.trade);function Z(){n(),u.value++}function Q(M,E){e[E?"to":"from"]=M}function V(){A(R.value)}const U=b(()=>Number(e.from.amount)>R.value?"Insufficient funds":!1);return Y(()=>e.from.amount,M=>{e.active=Number(M)>=1&&!U.value,console.log(S.state)}),(M,E)=>{const H=Nt;return ae(),ie(Qe,null,[v(Le,{class:"swap-card swap-widget"},{default:I(()=>[v(Ke,{class:"swap-card__header"},{default:I(()=>[te(" Swap ")]),_:1}),v(Ke,{class:"swap-card__body"},{default:I(()=>[m("div",fo,[m("div",ho,[m("div",ko,[m("div",go,[wo,m("div",yo,[c(U)?(ae(),ie("div",So,B(c(U)),1)):Ft("",!0),te(" Balance: "+B(c(L)(c(R)))+" "+B(c(x)),1)])])]),v($e,{modelValue:c(e).from.amount,"onUpdate:modelValue":E[0]||(E[0]=O=>c(e).from.amount=O),maxlength:14,outlined:"",placeholder:"0.0",class:"swap-input",disable:!c(C),onKeypress:c(Dt)},{append:I(()=>[v(ne,{dense:"",unelevated:"",ripple:!1,class:"swap-input__max",onClick:V},{default:I(()=>[te(" MAX ")]),_:1}),v(H,{options:c(N),disable:"",token:c(e).from,"swap-token":String(c(e).to.value),onHandleSearchToken:c(F),onSetToken:Q},null,8,["options","token","swap-token","onHandleSearchToken"])]),_:1},8,["modelValue","disable","onKeypress"])]),m("div",To,[v(ne,{ripple:!1,dense:"",unelevated:"",style:_t(c(_)),onClick:Z},{default:I(()=>[m("i",{innerHTML:c(Rt)},null,8,vo)]),_:1},8,["style"])]),m("div",bo,[m("div",Ao,[m("div",Co,[Bo,m("div",Eo," Balance: "+B(c(L)(c(G)))+" "+B(c(z)),1)])]),v($e,{modelValue:c(e).to.amount,"onUpdate:modelValue":E[1]||(E[1]=O=>c(e).to.amount=O),disable:!c(C),readonly:"",maxlength:14,outlined:"",placeholder:"0.0",class:"swap-input"},{append:I(()=>[v(H,{"swap-token":String(c(e).from.value),disable:"",options:c(N),direction:!0,token:c(e).to,onHandleSearchToken:c(F),onSetToken:Q},null,8,["swap-token","options","token","onHandleSearchToken"])]),_:1},8,["modelValue","disable"])])]),m("div",Fo,[m("dl",null,[_o,m("dd",null,B(c(L)(c(r)/c(ee)))+" "+B(c(x).toUpperCase()),1)]),m("dl",null,[Mo,m("dd",null,[m("a",{href:"#",onClick:E[2]||(E[2]=(...O)=>c(f)&&c(f)(...O))},B(p(c(e).slippage)),1)])]),m("dl",null,[Io,m("dd",null,B(p(c(xe)))+" SOL",1)])]),m("div",Do,[v(ne,{loading:c(e).swapping,rounded:"",ripple:!1,onClick:c(i)},{default:I(()=>[te(" Swap "+B(c(e).from.label)+" / "+B(c(e).to.label),1)]),_:1},8,["loading","onClick"])]),m("div",No," 1 "+B(c(e).from.label)+" ≈ "+B(c(L)(c(e).rate))+" "+B(c(e).to.label),1),Wo,m("div",null," Pool Token_A balance: "+B(c(L)(c(d))),1),m("div",null," Pool Token_B balance: "+B(c(L)(c(g))),1)]),_:1}),v(Mt,{showing:c(o)?.loading,class:"swap-loading",color:"grey"},null,8,["showing"])]),_:1}),v(Et,{modelValue:c(o).slippageDialog,"onUpdate:modelValue":E[4]||(E[4]=O=>c(o).slippageDialog=O),"transition-duration":"100","transition-show":"fade","transition-hide":"fade"},{default:I(()=>[v(Le,null,{default:I(()=>[v(Ke,null,{default:I(()=>[v(Yt,{modelValue:c(e).slippage,"onUpdate:modelValue":[E[3]||(E[3]=O=>c(e).slippage=O),c(T)],spread:"","no-caps":"",unelevated:"",ripple:!1,"toggle-color":"secondary",color:"white","text-color":"dark",options:[{label:"0.1%",value:.001},{label:"0.5%",value:.005},{label:"1%",value:.01},{label:"5%",value:.05}]},null,8,["modelValue","onUpdate:modelValue"])]),_:1})]),_:1})]),_:1},8,["modelValue"])],64)}}}),Ko={},Oo={class:"main-block row justify-center"};function zo(t,e){const o=xo,r=Pt;return ae(),ie(Qe,null,[m("div",Oo,[v(o)]),v(r)],64)}const Ro=qe(Ko,[["render",zo]]);export{Ro as default};
