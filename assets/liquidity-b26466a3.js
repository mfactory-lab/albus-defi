import{_ as _o,a as go,b as vo}from"./AppDescriptionTop-9d9e4b31.js";import{s as no,u as to,w as J,x as ao,y as lo,z as so,v as f,B as io,C as z,aH as B,Q as uo,I as F,ax as b,aI as I,V as co,o as P,i as E,a3 as o,Y as wo,Z as p,$ as O,a4 as X,j as s,ay as po,ad as oo,a0 as $,a1 as W,a2 as t,a5 as u,a6 as S,a7 as Z,a8 as R,a9 as mo,aC as ro,aD as fo,W as To,H as eo,aA as Ao,aB as Bo,X as yo,ab as bo,ac as ho,N as So,_ as xo}from"./index-5e8e851b.js";import{o as G}from"./common-21d1f462.js";import{u as Y}from"./swap-16a8084a.js";import{_ as Mo}from"./PolicyCard.vue_vue_type_script_setup_true_lang-029d826a.js";import{_ as Co}from"./SelectPool.vue_vue_type_script_setup_true_lang-8bf221f8.js";import{_ as $o}from"./SelectToken.vue_vue_type_script_setup_true_lang-e8386d72.js";import"./associatedTokenAccount-16b7b5e5.js";import"./PoolsListItem.vue_vue_type_script_setup_true_lang-029a98d2.js";const No=no("liquidity-withdraw",()=>{const j=to(),w=J(),a=ao(),{publicKey:y}=lo(),{notify:r}=so(),i=Y(),l=f(()=>i.tokenSwap),n=f(()=>i.state),N=f(()=>i.swapClient),e=io({slippageDialog:!1,swapping:!1,active:!1,slippage:.01,poolAmount:0,minAmountTokenA:0,minAmountTokenB:0}),q=async()=>{const m=B(e.poolAmount,I)/n.value.poolTokenSupply;(e.poolAmount===0||Number.isNaN(e.poolAmount))&&(e.minAmountTokenA=0,e.minAmountTokenB=0),e.minAmountTokenA=Math.floor(m*n.value.poolBalance[n.value.from.mint]*(1-e.slippage)),e.minAmountTokenB=Math.floor(m*n.value.poolBalance[n.value.to.mint]*(1-e.slippage))};z([()=>n.value.poolBalance,()=>e.poolAmount,()=>e.slippage],()=>q(),{immediate:!0});function K(){i.loadPoolTokenAccounts(),e.poolAmount=0}async function V(){if(!w.certificateValid)return uo();if(!l.value||!y.value){console.log("Pool is not selected...");return}if(a.value.publicKey||r({type:"info",message:"Please connect your wallet first"}),e.poolAmount>i.userPoolsTokens[l.value.data.poolMint.toBase58()]){r({type:"negative",message:"Insufficient LP tokens balance"});return}try{e.swapping=!0;let _=e.minAmountTokenA,h=e.minAmountTokenB,x=n.value.from,T=n.value.to;l.value.data.tokenBMint.toBase58()===n.value.from.mint&&(_=e.minAmountTokenB,h=e.minAmountTokenA,x=n.value.to,T=n.value.from);const d=await F(l.value.data.tokenAMint,a.value.publicKey),A=await F(l.value.data.tokenBMint,a.value.publicKey),M=await F(l.value.data.poolMint,a.value.publicKey);console.log("slippage = ",e.slippage);const C=N.value.swapAuthority(l.value.pubkey);console.log("source = ",M.toBase58()),console.log("destTokenA = ",d.toBase58()),console.log("destTokenB = ",A.toBase58()),console.log("swapAuthority = ",C.toBase58()),console.log("tokenSwap = ",l.value.pubkey.toBase58()),console.log("poolMint = ",l.value.data.poolMint.toBase58()),console.log("swapTokenA Mint = ",l.value.data.tokenAMint.toBase58()),console.log("swapTokenA = ",l.value.data.tokenA.toBase58()),console.log("swapTokenB Mint = ",l.value.data.tokenBMint.toBase58()),console.log("swapTokenB = ",l.value.data.tokenB.toBase58()),console.log("TokenA = ",x.symbol),console.log("minimumTokenA = ",_),console.log("minimumTokenA = ",b(_,x.decimals)),console.log("TokenB = ",T.symbol),console.log("minimumTokenB = ",h),console.log("minimumTokenB = ",b(h,T.decimals)),console.log("poolTokenAmount = ",e.poolAmount),console.log("poolTokenAmount = ",B(e.poolAmount,I));const D=await N.value.withdrawAllTokenTypes({tokenSwap:l.value.pubkey,poolMint:l.value.data.poolMint,poolFee:l.value.data.poolFeeAccount,source:M,destTokenA:d,destTokenB:A,swapTokenA:l.value.data.tokenA,swapTokenB:l.value.data.tokenB,poolTokenAmount:B(e.poolAmount,I),minimumTokenA:_,minimumTokenB:h},{commitment:"confirmed"});r({message:"Transaction confirmed",type:"positive",actions:[{label:"Explore",color:"white",target:"_blank",href:`https://explorer.solana.com/tx/${D}?cluster=${j.cluster}`,onClick:()=>!1}]}),K()}catch(_){console.log(_),`${_}`.includes("User rejected the request")||r({type:"negative",message:`${_}`})}finally{e.swapping=!1}}function U(){e.slippageDialog=!0}function k(){e.slippageDialog=!1}return{state:e,closeSlippage:k,openSlippage:U,depositBothTokens:V}}),qo={class:"swap-form"},Vo={class:"swap-field"},Po={class:"swap-field__info"},Uo={class:"row"},Do=t("div",{class:"col-2 swap-field__label"}," AMOUNT ",-1),Eo={class:"col row justify-end swap-field__balance q-pr-sm"},Io={key:0,class:"insufficient-error"},Ko={class:"row justify-between",style:{gap:"10px"}},Lo={class:"swap-info q-mt-md q-pt-xs"},jo=t("dt",null,"LP tokens total",-1),Qo=t("dt",null,"Slippage Tolerance",-1),Ro={class:"swap-submit q-mt-md"},Fo=co({__name:"WithdrawBothCard",setup(j){const w=Y(),{state:a}=w,y=f(()=>w.tokenSwap),r=No(),{state:i,depositBothTokens:l,openSlippage:n,closeSlippage:N}=r,e=f(()=>y.value&&w.userPoolsTokens[y.value.data.poolMint.toBase58()]||0),q=U=>fo.format(U);function K(){i.poolAmount=b(e.value,I)}const V=f(()=>Number(B(i.poolAmount,I))>e.value?"Insufficient funds":!1);return z([()=>i.poolAmount,e],()=>{i.active=!V.value}),(U,k)=>(P(),E(oo,null,[o(y)?(P(),wo(O,{key:0,class:"swap-card swap-widget"},{default:p(()=>[s(W,{class:"swap-card__header"},{default:p(()=>[$(" Withdraw ")]),_:1}),s(W,{class:"swap-card__body"},{default:p(()=>[t("div",qo,[t("div",Vo,[t("div",Po,[t("div",Uo,[Do,t("div",Eo,[o(V)?(P(),E("div",Io," Insufficient funds ")):X("",!0),$(" Balance: "+u(o(S)(o(b)(o(e),o(I)))),1)])])]),t("div",Ko,[s(Z,{modelValue:o(i).poolAmount,"onUpdate:modelValue":k[0]||(k[0]=m=>o(i).poolAmount=m),maxlength:14,outlined:"",placeholder:"0.0",class:"swap-input col",onKeypress:o(G)},{append:p(()=>[s(R,{dense:"",unelevated:"",ripple:!1,class:"swap-input__max",onClick:K},{default:p(()=>[$(" MAX ")]),_:1})]),_:1},8,["modelValue","onKeypress"])])])]),t("div",Lo,[t("dl",null,[t("dt",null,"Min "+u(o(a).from.symbol.toUpperCase())+" amount",1),t("dd",null,u(o(S)(o(b)(o(i).minAmountTokenA,o(a).from.decimals),o(a).from.decimals))+" "+u(o(a).from.symbol.toUpperCase()),1)]),t("dl",null,[t("dt",null,"Min "+u(o(a).to.symbol.toUpperCase())+" amount",1),t("dd",null,u(o(S)(o(b)(o(i).minAmountTokenB,o(a).to.decimals),o(a).to.decimals))+" "+u(o(a).to.symbol.toUpperCase()),1)]),t("dl",null,[jo,t("dd",null,u(o(b)(o(a).poolTokenSupply,o(I))),1)]),t("dl",null,[Qo,t("dd",null,[t("a",{href:"#",onClick:k[1]||(k[1]=(...m)=>o(n)&&o(n)(...m))},u(q(o(i).slippage)),1)])])]),t("div",Ro,[s(R,{loading:o(i).swapping,disable:!o(i).active||!o(y)||!o(i).poolAmount,rounded:"",ripple:!1,onClick:o(l)},{default:p(()=>[$(" Remove Liquidity ")]),_:1},8,["loading","disable","onClick"])])]),_:1}),s(mo,{showing:o(a)?.loading,class:"swap-loading",color:"grey"},null,8,["showing"])]),_:1})):X("",!0),s(po,{modelValue:o(i).slippageDialog,"onUpdate:modelValue":k[3]||(k[3]=m=>o(i).slippageDialog=m),"transition-duration":"100","transition-show":"fade","transition-hide":"fade"},{default:p(()=>[s(O,null,{default:p(()=>[s(W,null,{default:p(()=>[s(ro,{modelValue:o(i).slippage,"onUpdate:modelValue":[k[2]||(k[2]=m=>o(i).slippage=m),o(N)],spread:"","no-caps":"",unelevated:"",ripple:!1,"toggle-color":"secondary",color:"white","text-color":"dark",options:[{label:"0.1%",value:.001},{label:"0.5%",value:.005},{label:"1%",value:.01},{label:"5%",value:.05}]},null,8,["modelValue","onUpdate:modelValue"])]),_:1})]),_:1})]),_:1},8,["modelValue"])],64))}}),Wo=no("liquidity",()=>{const j=to(),w=J(),a=ao(),{publicKey:y}=lo(),{notify:r}=so(),i=Y(),l=f(()=>i.tokenSwap),n=f(()=>i.state),N=f(()=>i.swapClient),e=io({slippageDialog:!1,swapping:!1,active:!1,slippage:.01,poolAmount:0,amountTokenA:0,amountTokenB:0,maxAmountTokenA:0,maxAmountTokenB:0}),q=async(m=!1)=>{const _=Number((m?e.amountTokenB:e.amountTokenA)??0),h=Number(b(Number(n.value.poolBalance[n.value.from.mint]??0),n.value.from.decimals)),x=Number(b(Number(n.value.poolBalance[n.value.to.mint]??0),n.value.to.decimals)),T=m?h/x:x/h;if(_===0||Number.isNaN(_)){e.poolAmount=0,m?(e.amountTokenA=0,e.maxAmountTokenA=0):(e.amountTokenB=0,e.maxAmountTokenB=0);return}m?e.amountTokenA=Number(S(T*e.amountTokenB,n.value.to.decimals)):e.amountTokenB=Number(S(T*e.amountTokenA,n.value.from.decimals)),e.maxAmountTokenA=e.amountTokenA*(1+e.slippage),e.maxAmountTokenB=e.amountTokenB*(1+e.slippage);const d=e.amountTokenA,A=n.value.from;e.poolAmount=Math.floor(B(d,A.decimals)/n.value.poolBalance[A.mint]*n.value.poolTokenSupply)};z([()=>n.value.poolBalance,()=>e.slippage],()=>q(),{immediate:!0});function K(){i.loadPoolTokenAccounts(),e.maxAmountTokenA=0,e.maxAmountTokenB=0,e.amountTokenA=0,e.amountTokenB=0}async function V(){if(!w.certificateValid)return uo();if(!l.value||!y.value){console.log("Pool is not selected...");return}a.value.publicKey||r({type:"info",message:"Please connect your wallet first"});const _=Number(B(e.amountTokenA??0,n.value.from.decimals)),h=Number(B(w.tokenBalance(n.value.from.mint)??0,n.value.from.decimals));if(_>h){r({type:"negative",message:`Insufficient balance ${n.value.from.symbol}.`});return}const x=Number(B(e.amountTokenA??0,n.value.to.decimals)),T=Number(B(w.tokenBalance(n.value.to.mint)??0,n.value.to.decimals));if(x>T){r({type:"negative",message:`Insufficient balance ${n.value.to.symbol}.`});return}try{e.swapping=!0;let d=e.amountTokenA,A=e.amountTokenB,M=n.value.from,C=n.value.to;l.value.data.tokenBMint.toBase58()===n.value.from.mint&&(d=e.amountTokenB,A=e.amountTokenA,M=n.value.to,C=n.value.from);const D=await F(l.value.data.tokenAMint,a.value.publicKey),g=await F(l.value.data.tokenBMint,a.value.publicKey),c=await F(l.value.data.poolMint,a.value.publicKey);console.log("slippage = ",e.slippage);const L=N.value.swapAuthority(l.value.pubkey);console.log("destination = ",c.toBase58()),console.log("userTokenA = ",D.toBase58()),console.log("userTokenB = ",g.toBase58()),console.log("swapAuthority = ",L.toBase58()),console.log("tokenSwap = ",l.value.pubkey.toBase58()),console.log("poolMint = ",l.value.data.poolMint.toBase58()),console.log("swapTokenA Mint = ",l.value.data.tokenAMint.toBase58()),console.log("swapTokenA = ",l.value.data.tokenA.toBase58()),console.log("swapTokenB Mint = ",l.value.data.tokenBMint.toBase58()),console.log("swapTokenB = ",l.value.data.tokenB.toBase58()),console.log("TokenA = ",M.symbol),console.log("maximumTokenA = ",d),console.log("maximumTokenA = ",B(d,M.decimals)),console.log("TokenB = ",C.symbol),console.log("maximumTokenB = ",A),console.log("maximumTokenB = ",B(A,C.decimals)),console.log("poolTokenAmount = ",e.poolAmount);const Q=await N.value.depositAllTokenTypes({tokenSwap:l.value.pubkey,poolMint:l.value.data.poolMint,destination:c,userTokenA:D,userTokenB:g,swapTokenA:l.value.data.tokenA,swapTokenB:l.value.data.tokenB,poolTokenAmount:e.poolAmount,maximumTokenA:Math.floor(B(d,M.decimals)*(1+e.slippage)),maximumTokenB:Math.floor(B(A,C.decimals)*(1+e.slippage)),tokenAMint:l.value.data.tokenAMint,tokenBMint:l.value.data.tokenBMint},{commitment:"confirmed"});r({message:"Transaction confirmed",type:"positive",actions:[{label:"Explore",color:"white",target:"_blank",href:`https://explorer.solana.com/tx/${Q}?cluster=${j.cluster}`,onClick:()=>!1}]}),K()}catch(d){console.log(d),`${d}`.includes("User rejected the request")||r({type:"negative",message:`${d}`})}finally{e.swapping=!1}}function U(){e.slippageDialog=!0}function k(){e.slippageDialog=!1}return{state:e,calcRate:q,closeSlippage:k,openSlippage:U,depositBothTokens:V}}),Ho={class:"swap-form"},Oo={class:"swap-field"},Xo={class:"swap-field__info"},zo={class:"row items-end justify-end"},Yo={class:"col-8 col-xs-10 row justify-end swap-field__balance"},Zo={key:0,class:"insufficient-error"},Go={class:"swap-field q-pt-xs"},Jo={class:"swap-field__info q-mt-sm"},oe={class:"row items-end justify-end"},ee={class:"col-8 col-xs-10 row justify-end swap-field__balance"},ne={key:0,class:"insufficient-error"},te={class:"swap-info q-mt-md q-pt-xs"},ae=t("dt",null,"LP tokens amount",-1),le=t("dt",null,"Slippage Tolerance",-1),se={class:"swap-submit q-mt-md"},ie={key:0,class:"text-weight-medium fs-13 text-center q-mt-md text-negative"},ue={key:1,class:"row q-mt-md text-center relative-position full-width"},ce={class:"absolute-right swap-rate__refresh"},pe={class:"swap-info q-mt-md"},me=co({__name:"DepositBothCard",setup(j){const w=Y(),{state:a,loadingPoolTokens:y,loadPoolTokenAccounts:r}=w,i=f(()=>w.tokenSwap),l=Wo(),{state:n,depositBothTokens:N,calcRate:e,openSlippage:q,closeSlippage:K}=l,{handleSearchToken:V,handleFilterToken:U,tokens:k}=To();U(eo);const m=J(),_=f(()=>a.poolBalance[a.from.mint]?b(a.poolBalance[a.from.mint],a.from.decimals):0),h=f(()=>a.poolBalance[a.to.mint]?b(a.poolBalance[a.to.mint],a.to.decimals):0),x=g=>fo.format(g),T=f(()=>m.tokenBalance(a.from.mint)),d=f(()=>m.tokenBalance(a.to.mint));function A(g,c){a[c?"to":"from"]=g}function M(g=!1){const c=g?"to":"from",L=g?"amountTokenB":"amountTokenA",Q=g?d.value:T.value;a[c]?.mint===eo||a[c]?.mint===yo?n[L]=Q-bo-3*ho-So:n[L]=Q,e(g)}const C=f(()=>Number(n.amountTokenA)>T.value?"Insufficient funds":!1),D=f(()=>Number(n.amountTokenB)>d.value?"Insufficient funds":!1);return z([()=>n.amountTokenA,T,()=>n.amountTokenB,d],g=>{n.active=!C.value&&!D.value}),(g,c)=>{const L=$o,Q=Co,ko=Mo;return P(),E(oo,null,[s(O,{class:"swap-card swap-widget"},{default:p(()=>[s(W,{class:"swap-card__header"},{default:p(()=>[$(" Deposit ")]),_:1}),s(W,{class:"swap-card__body"},{default:p(()=>[t("div",Ho,[t("div",Oo,[t("div",Xo,[t("div",zo,[t("div",Yo,[o(C)?(P(),E("div",Zo,u(o(C)),1)):X("",!0),$(" Balance: "+u(o(S)(o(T)))+" "+u(o(a).from.symbol),1)])])]),s(Z,{modelValue:o(n).amountTokenA,"onUpdate:modelValue":[c[1]||(c[1]=v=>o(n).amountTokenA=v),c[2]||(c[2]=v=>{const H=String(v);H[H.length-1]!=="."&&o(e)()})],maxlength:14,outlined:"",placeholder:"0.0",class:"swap-input",onKeypress:o(G)},{append:p(()=>[s(R,{dense:"",unelevated:"",ripple:!1,class:"swap-input__max",onClick:c[0]||(c[0]=v=>M())},{default:p(()=>[$(" MAX ")]),_:1}),s(L,{options:o(k),token:o(a).from,"swap-token":String(o(a).to.symbol),onHandleSearchToken:o(V),onSetToken:A},null,8,["options","token","swap-token","onHandleSearchToken"])]),_:1},8,["modelValue","onKeypress"])]),t("div",Go,[t("div",Jo,[t("div",oe,[t("div",ee,[o(D)?(P(),E("div",ne,u(o(D)),1)):X("",!0),$(" Balance: "+u(o(S)(o(d)))+" "+u(o(a).to.symbol),1)])])]),s(Z,{modelValue:o(n).amountTokenB,"onUpdate:modelValue":[c[4]||(c[4]=v=>o(n).amountTokenB=v),c[5]||(c[5]=v=>{const H=String(v);H[H.length-1]!=="."&&o(e)(!0)})],maxlength:14,outlined:"",placeholder:"0.0",class:"swap-input",onKeypress:o(G)},{append:p(()=>[s(R,{dense:"",unelevated:"",ripple:!1,class:"swap-input__max",onClick:c[3]||(c[3]=v=>M(!0))},{default:p(()=>[$(" MAX ")]),_:1}),s(L,{"swap-token":String(o(a).from.symbol),options:o(k),direction:!0,token:o(a).to,"destination-unavailable":!o(i),onHandleSearchToken:o(V),onSetToken:A},null,8,["swap-token","options","token","destination-unavailable","onHandleSearchToken"])]),_:1},8,["modelValue","onKeypress"])])]),t("div",te,[t("dl",null,[t("dt",null,"Max "+u(o(a).from.symbol.toUpperCase())+" amount",1),t("dd",null,u(o(S)(o(n).maxAmountTokenA,o(a).from.decimals))+" "+u(o(a).from.symbol.toUpperCase()),1)]),t("dl",null,[t("dt",null,"Max "+u(o(a).to.symbol.toUpperCase())+" amount",1),t("dd",null,u(o(S)(o(n).maxAmountTokenB,o(a).to.decimals))+" "+u(o(a).to.symbol.toUpperCase()),1)]),t("dl",null,[ae,t("dd",null,u(o(b)(o(n).poolAmount,o(I))),1)]),t("dl",null,[le,t("dd",null,[t("a",{href:"#",onClick:c[6]||(c[6]=(...v)=>o(q)&&o(q)(...v))},u(x(o(n).slippage)),1)])])]),s(Q,{class:"q-mt-md"}),s(ko,{class:"q-mt-md q-mx-auto"}),t("div",se,[s(R,{loading:o(n).swapping,disable:!o(n).active||!o(i)||!o(n).amountTokenA,rounded:"",ripple:!1,onClick:o(N)},{default:p(()=>[$(" Add Liquidity ")]),_:1},8,["loading","disable","onClick"])]),o(i)?(P(),E("div",ue,[t("div",ce,[s(R,{loading:o(y),class:"swap-card__reload",unelevated:"",color:g.$q.dark.isActive?"white":"primary",round:"",onClick:o(r)},{default:p(()=>[s(Ao,{name:o(Bo),color:g.$q.dark.isActive?"primary":"white"},null,8,["name","color"])]),_:1},8,["loading","color","onClick"])])])):(P(),E("div",ie," Pool not found ")),t("div",pe,[t("dl",null,[t("dt",null,"Pool "+u(o(a).from.symbol)+" balance",1),t("dd",null,u(o(S)(o(_))),1)]),t("dl",null,[t("dt",null,"Pool "+u(o(a).to.symbol)+" balance",1),t("dd",null,u(o(S)(o(h))),1)])])]),_:1}),s(mo,{showing:o(a)?.loading,class:"swap-loading",color:"grey"},null,8,["showing"])]),_:1}),s(po,{modelValue:o(n).slippageDialog,"onUpdate:modelValue":c[8]||(c[8]=v=>o(n).slippageDialog=v),"transition-duration":"100","transition-show":"fade","transition-hide":"fade"},{default:p(()=>[s(O,null,{default:p(()=>[s(W,null,{default:p(()=>[s(ro,{modelValue:o(n).slippage,"onUpdate:modelValue":[c[7]||(c[7]=v=>o(n).slippage=v),o(K)],spread:"","no-caps":"",unelevated:"",ripple:!1,"toggle-color":"secondary",color:"white","text-color":"dark",options:[{label:"0.1%",value:.001},{label:"0.5%",value:.005},{label:"1%",value:.01},{label:"5%",value:.05}]},null,8,["modelValue","onUpdate:modelValue"])]),_:1})]),_:1})]),_:1},8,["modelValue"])],64)}}}),de={},re={class:"main-block row justify-center"},fe={class:"row justify-center col-12"},ke={class:"row justify-center col-12 q-mt-lg"};function _e(j,w){const a=_o,y=me,r=Fo,i=go,l=vo;return P(),E(oo,null,[s(a,{class:"q-mt-lg"}),t("div",re,[t("div",fe,[s(y)]),t("div",ke,[s(r)])]),s(i,{class:"q-mt-lg"}),s(l,{class:"q-mt-lg"})],64)}const Se=xo(de,[["render",_e]]);export{Se as default};
