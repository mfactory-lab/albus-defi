import{k as i,b4 as T,P as k,m as B,at as Oe,S as qe,Q as f,n as E,q as Le,u as Je,v as Ue,w as Ge,x as Qe,y as Ve,t as He,J as Ae,F as M,z as Te,A as Ze,b5 as be,V as $e,G as je,B as A,b6 as Xe,b7 as Ye,b8 as _e,ay as ve,a5 as et,b9 as x,O as tt,H as Fe,ba as P}from"./index-7f945347.js";import{g as ot,T as nt,a as rt,c as it,b as I}from"./associatedTokenAccount-6078604a.js";var at=Object.defineProperty,st=(t,e,n)=>e in t?at(t,e,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[e]=n,r=(t,e,n)=>(st(t,typeof e!="symbol"?e+"":e,n),n);const Be=new i.BeetArgsStruct([["tradeFeeNumerator",i.u64],["tradeFeeDenominator",i.u64],["ownerTradeFeeNumerator",i.u64],["ownerTradeFeeDenominator",i.u64],["ownerWithdrawFeeNumerator",i.u64],["ownerWithdrawFeeDenominator",i.u64],["hostFeeNumerator",i.u64],["hostFeeDenominator",i.u64]],"FeesInfo"),Ee=new i.BeetArgsStruct([["curveType",i.u8],["curveParameters",i.uniformFixedSizeArray(i.u8,32)]],"CurveInfo"),pe=[135,144,215,161,140,125,41,96];class S{constructor(e,n,c,s,d,y,h,u,b,v,o,ce){this.isInitialized=e,this.bumpSeed=n,this.tokenProgramId=c,this.tokenA=s,this.tokenB=d,this.poolMint=y,this.tokenAMint=h,this.tokenBMint=u,this.poolFeeAccount=b,this.fees=v,this.curve=o,this.policy=ce}static fromArgs(e){return new S(e.isInitialized,e.bumpSeed,e.tokenProgramId,e.tokenA,e.tokenB,e.poolMint,e.tokenAMint,e.tokenBMint,e.poolFeeAccount,e.fees,e.curve,e.policy)}static fromAccountInfo(e,n=0){return S.deserialize(e.data,n)}static async fromAccountAddress(e,n,c){const s=await e.getAccountInfo(n,c);if(s==null)throw new Error(`Unable to find TokenSwap account at ${n}`);return S.fromAccountInfo(s,0)[0]}static gpaBuilder(e=new k("ASWfaoztykN8Lz1P2uwuvwWR61SvFrvn6acM1sJpxKtq")){return T.GpaBuilder.fromStruct(e,D)}static deserialize(e,n=0){return D.deserialize(e,n)}serialize(){return D.serialize({accountDiscriminator:pe,...this})}static byteSize(e){const n=S.fromArgs(e);return D.toFixedFromValue({accountDiscriminator:pe,...n}).byteSize}static async getMinimumBalanceForRentExemption(e,n,c){return n.getMinimumBalanceForRentExemption(S.byteSize(e),c)}pretty(){return{isInitialized:this.isInitialized,bumpSeed:this.bumpSeed,tokenProgramId:this.tokenProgramId.toBase58(),tokenA:this.tokenA.toBase58(),tokenB:this.tokenB.toBase58(),poolMint:this.poolMint.toBase58(),tokenAMint:this.tokenAMint.toBase58(),tokenBMint:this.tokenBMint.toBase58(),poolFeeAccount:this.poolFeeAccount.toBase58(),fees:this.fees,curve:this.curve,policy:this.policy}}}const D=new i.FixableBeetStruct([["accountDiscriminator",i.uniformFixedSizeArray(i.u8,8)],["isInitialized",i.bool],["bumpSeed",i.u8],["tokenProgramId",T.publicKey],["tokenA",T.publicKey],["tokenB",T.publicKey],["poolMint",T.publicKey],["tokenAMint",T.publicKey],["tokenBMint",T.publicKey],["poolFeeAccount",T.publicKey],["fees",Be],["curve",Ee],["policy",i.coption(T.publicKey)]],S.fromArgs,"TokenSwap"),l=new Map,p=new Map;class z extends Error{constructor(){super("Swap account already in use"),r(this,"code",6e3),r(this,"name","AlreadyInUse"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,z)}}l.set(6e3,()=>new z);p.set("AlreadyInUse",()=>new z);class N extends Error{constructor(){super("Invalid program address generated from bump seed and key"),r(this,"code",6001),r(this,"name","InvalidProgramAddress"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,N)}}l.set(6001,()=>new N);p.set("InvalidProgramAddress",()=>new N);class R extends Error{constructor(){super("Input account owner is not the program address"),r(this,"code",6002),r(this,"name","InvalidOwner"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,R)}}l.set(6002,()=>new R);p.set("InvalidOwner",()=>new R);class K extends Error{constructor(){super("Output pool account owner cannot be the program address"),r(this,"code",6003),r(this,"name","InvalidOutputOwner"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,K)}}l.set(6003,()=>new K);p.set("InvalidOutputOwner",()=>new K);class C extends Error{constructor(){super("Deserialized account is not an SPL Token mint"),r(this,"code",6004),r(this,"name","ExpectedMint"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,C)}}l.set(6004,()=>new C);p.set("ExpectedMint",()=>new C);class O extends Error{constructor(){super("Deserialized account is not an SPL Token account"),r(this,"code",6005),r(this,"name","ExpectedAccount"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,O)}}l.set(6005,()=>new O);p.set("ExpectedAccount",()=>new O);class q extends Error{constructor(){super("Input token account empty"),r(this,"code",6006),r(this,"name","EmptySupply"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,q)}}l.set(6006,()=>new q);p.set("EmptySupply",()=>new q);class L extends Error{constructor(){super("Pool token mint has a non-zero supply"),r(this,"code",6007),r(this,"name","InvalidSupply"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,L)}}l.set(6007,()=>new L);p.set("InvalidSupply",()=>new L);class J extends Error{constructor(){super("Token account has a delegate"),r(this,"code",6008),r(this,"name","InvalidDelegate"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,J)}}l.set(6008,()=>new J);p.set("InvalidDelegate",()=>new J);class U extends Error{constructor(){super("InvalidInput"),r(this,"code",6009),r(this,"name","InvalidInput"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,U)}}l.set(6009,()=>new U);p.set("InvalidInput",()=>new U);class G extends Error{constructor(){super("Address of the provided swap token account is incorrect"),r(this,"code",6010),r(this,"name","IncorrectSwapAccount"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,G)}}l.set(6010,()=>new G);p.set("IncorrectSwapAccount",()=>new G);class Q extends Error{constructor(){super("Address of the provided pool token mint is incorrect"),r(this,"code",6011),r(this,"name","IncorrectPoolMint"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,Q)}}l.set(6011,()=>new Q);p.set("IncorrectPoolMint",()=>new Q);class V extends Error{constructor(){super("InvalidOutput"),r(this,"code",6012),r(this,"name","InvalidOutput"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,V)}}l.set(6012,()=>new V);p.set("InvalidOutput",()=>new V);class H extends Error{constructor(){super("General calculation failure due to overflow or underflow"),r(this,"code",6013),r(this,"name","CalculationFailure"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,H)}}l.set(6013,()=>new H);p.set("CalculationFailure",()=>new H);class Z extends Error{constructor(){super("Invalid instruction"),r(this,"code",6014),r(this,"name","InvalidInstruction"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,Z)}}l.set(6014,()=>new Z);p.set("InvalidInstruction",()=>new Z);class $ extends Error{constructor(){super("Swap input token accounts have the same mint"),r(this,"code",6015),r(this,"name","RepeatedMint"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,$)}}l.set(6015,()=>new $);p.set("RepeatedMint",()=>new $);class j extends Error{constructor(){super("Swap instruction exceeds desired slippage limit"),r(this,"code",6016),r(this,"name","ExceededSlippage"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,j)}}l.set(6016,()=>new j);p.set("ExceededSlippage",()=>new j);class X extends Error{constructor(){super("Token account has a close authority"),r(this,"code",6017),r(this,"name","InvalidCloseAuthority"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,X)}}l.set(6017,()=>new X);p.set("InvalidCloseAuthority",()=>new X);class Y extends Error{constructor(){super("Pool token mint has a freeze authority"),r(this,"code",6018),r(this,"name","InvalidFreezeAuthority"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,Y)}}l.set(6018,()=>new Y);p.set("InvalidFreezeAuthority",()=>new Y);class _ extends Error{constructor(){super("Pool fee token account incorrect"),r(this,"code",6019),r(this,"name","IncorrectFeeAccount"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,_)}}l.set(6019,()=>new _);p.set("IncorrectFeeAccount",()=>new _);class ee extends Error{constructor(){super("Given pool token amount results in zero trading tokens"),r(this,"code",6020),r(this,"name","ZeroTradingTokens"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,ee)}}l.set(6020,()=>new ee);p.set("ZeroTradingTokens",()=>new ee);class te extends Error{constructor(){super("Fee calculation failed due to overflow, underflow, or unexpected 0"),r(this,"code",6021),r(this,"name","FeeCalculationFailure"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,te)}}l.set(6021,()=>new te);p.set("FeeCalculationFailure",()=>new te);class oe extends Error{constructor(){super("Conversion to u64/u128 failed with an overflow or underflow"),r(this,"code",6022),r(this,"name","ConversionFailure"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,oe)}}l.set(6022,()=>new oe);p.set("ConversionFailure",()=>new oe);class ne extends Error{constructor(){super("The provided fee does not match the program owner's constraints"),r(this,"code",6023),r(this,"name","InvalidFee"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,ne)}}l.set(6023,()=>new ne);p.set("InvalidFee",()=>new ne);class re extends Error{constructor(){super("The provided token program does not match the token program expected by the swap"),r(this,"code",6024),r(this,"name","IncorrectTokenProgramId"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,re)}}l.set(6024,()=>new re);p.set("IncorrectTokenProgramId",()=>new re);class ie extends Error{constructor(){super("The provided curve type is not supported by the program owner"),r(this,"code",6025),r(this,"name","UnsupportedCurveType"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,ie)}}l.set(6025,()=>new ie);p.set("UnsupportedCurveType",()=>new ie);class ae extends Error{constructor(){super("The provided curve parameters are invalid"),r(this,"code",6026),r(this,"name","InvalidCurve"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,ae)}}l.set(6026,()=>new ae);p.set("InvalidCurve",()=>new ae);class se extends Error{constructor(){super("The operation cannot be performed on the given curve"),r(this,"code",6027),r(this,"name","UnsupportedCurveOperation"),typeof Error.captureStackTrace=="function"&&Error.captureStackTrace(this,se)}}l.set(6027,()=>new se);p.set("UnsupportedCurveOperation",()=>new se);const ct=new i.BeetArgsStruct([["instructionDiscriminator",i.uniformFixedSizeArray(i.u8,8)],["poolTokenAmount",i.u64],["maximumTokenAAmount",i.u64],["maximumTokenBAmount",i.u64]],"DepositAllTokenTypesInstructionArgs"),ut=[32,95,69,60,75,79,205,238];function lt(t,e,n=new k("ASWfaoztykN8Lz1P2uwuvwWR61SvFrvn6acM1sJpxKtq")){const[c]=ct.serialize({instructionDiscriminator:ut,...e}),s=[{pubkey:t.tokenSwap,isWritable:!1,isSigner:!1},{pubkey:t.authority,isWritable:!1,isSigner:!1},{pubkey:t.userTransferAuthority,isWritable:!1,isSigner:!0},{pubkey:t.userTokenA,isWritable:!0,isSigner:!1},{pubkey:t.userTokenB,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenA,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenB,isWritable:!0,isSigner:!1},{pubkey:t.poolMint,isWritable:!0,isSigner:!1},{pubkey:t.destination,isWritable:!0,isSigner:!1},{pubkey:t.tokenProgram??I,isWritable:!1,isSigner:!1}];if(t.anchorRemainingAccounts!=null)for(const d of t.anchorRemainingAccounts)s.push(d);return new E({programId:n,keys:s,data:c})}const pt=new i.BeetArgsStruct([["instructionDiscriminator",i.uniformFixedSizeArray(i.u8,8)],["sourceTokenAmount",i.u64],["minimumPoolTokenAmount",i.u64]],"DepositSingleTokenTypeInstructionArgs"),dt=[175,0,152,41,199,0,148,43];function mt(t,e,n=new k("ASWfaoztykN8Lz1P2uwuvwWR61SvFrvn6acM1sJpxKtq")){const[c]=pt.serialize({instructionDiscriminator:dt,...e}),s=[{pubkey:t.tokenSwap,isWritable:!1,isSigner:!1},{pubkey:t.authority,isWritable:!1,isSigner:!1},{pubkey:t.userTransferAuthority,isWritable:!1,isSigner:!0},{pubkey:t.source,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenA,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenB,isWritable:!0,isSigner:!1},{pubkey:t.poolMint,isWritable:!0,isSigner:!1},{pubkey:t.destination,isWritable:!0,isSigner:!1},{pubkey:t.tokenProgram??I,isWritable:!1,isSigner:!1}];if(t.anchorRemainingAccounts!=null)for(const d of t.anchorRemainingAccounts)s.push(d);return new E({programId:n,keys:s,data:c})}const kt=new i.FixableBeetArgsStruct([["instructionDiscriminator",i.uniformFixedSizeArray(i.u8,8)],["feesInput",Be],["curveInput",Ee],["policy",i.coption(T.publicKey)]],"InitializeInstructionArgs"),ft=[175,175,109,31,13,152,155,237];function wt(t,e,n=new k("ASWfaoztykN8Lz1P2uwuvwWR61SvFrvn6acM1sJpxKtq")){const[c]=kt.serialize({instructionDiscriminator:ft,...e}),s=[{pubkey:t.authority,isWritable:!1,isSigner:!1},{pubkey:t.tokenSwap,isWritable:!0,isSigner:!0},{pubkey:t.poolMint,isWritable:!0,isSigner:!1},{pubkey:t.tokenA,isWritable:!0,isSigner:!1},{pubkey:t.tokenB,isWritable:!0,isSigner:!1},{pubkey:t.poolFee,isWritable:!0,isSigner:!1},{pubkey:t.destination,isWritable:!0,isSigner:!1},{pubkey:t.tokenProgram??I,isWritable:!1,isSigner:!1}];if(t.anchorRemainingAccounts!=null)for(const d of t.anchorRemainingAccounts)s.push(d);return new E({programId:n,keys:s,data:c})}const yt=new i.BeetArgsStruct([["instructionDiscriminator",i.uniformFixedSizeArray(i.u8,8)],["amountIn",i.u64],["minimumAmountOut",i.u64]],"SwapInstructionArgs"),ht=[248,198,158,145,225,117,135,200];function St(t,e,n=new k("ASWfaoztykN8Lz1P2uwuvwWR61SvFrvn6acM1sJpxKtq")){const[c]=yt.serialize({instructionDiscriminator:ht,...e}),s=[{pubkey:t.proofRequest??n,isWritable:!1,isSigner:!1},{pubkey:t.tokenSwap,isWritable:!1,isSigner:!1},{pubkey:t.authority,isWritable:!1,isSigner:!1},{pubkey:t.userTransferAuthority,isWritable:!1,isSigner:!0},{pubkey:t.userSource,isWritable:!0,isSigner:!1},{pubkey:t.userDestination,isWritable:!0,isSigner:!1},{pubkey:t.poolSource,isWritable:!0,isSigner:!1},{pubkey:t.poolDestination,isWritable:!0,isSigner:!1},{pubkey:t.poolMint,isWritable:!0,isSigner:!1},{pubkey:t.poolFee,isWritable:!0,isSigner:!1},{pubkey:t.hostFeeAccount??n,isWritable:!1,isSigner:!1},{pubkey:t.tokenProgram??I,isWritable:!1,isSigner:!1}];if(t.anchorRemainingAccounts!=null)for(const d of t.anchorRemainingAccounts)s.push(d);return new E({programId:n,keys:s,data:c})}const gt=new i.BeetArgsStruct([["instructionDiscriminator",i.uniformFixedSizeArray(i.u8,8)],["poolTokenAmount",i.u64],["minimumTokenAAmount",i.u64],["minimumTokenBAmount",i.u64]],"WithdrawAllTokenTypesInstructionArgs"),At=[189,254,156,174,210,9,164,216];function Tt(t,e,n=new k("ASWfaoztykN8Lz1P2uwuvwWR61SvFrvn6acM1sJpxKtq")){const[c]=gt.serialize({instructionDiscriminator:At,...e}),s=[{pubkey:t.tokenSwap,isWritable:!1,isSigner:!1},{pubkey:t.authority,isWritable:!1,isSigner:!1},{pubkey:t.userTransferAuthority,isWritable:!1,isSigner:!0},{pubkey:t.poolMint,isWritable:!0,isSigner:!1},{pubkey:t.source,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenA,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenB,isWritable:!0,isSigner:!1},{pubkey:t.destTokenA,isWritable:!0,isSigner:!1},{pubkey:t.destTokenB,isWritable:!0,isSigner:!1},{pubkey:t.poolFee,isWritable:!0,isSigner:!1},{pubkey:t.tokenProgram??I,isWritable:!1,isSigner:!1}];if(t.anchorRemainingAccounts!=null)for(const d of t.anchorRemainingAccounts)s.push(d);return new E({programId:n,keys:s,data:c})}const bt=new i.BeetArgsStruct([["instructionDiscriminator",i.uniformFixedSizeArray(i.u8,8)],["destinationTokenAmount",i.u64],["maximumPoolTokenAmount",i.u64]],"WithdrawSingleTokenTypeInstructionArgs"),vt=[111,171,21,77,237,181,241,56];function Ft(t,e,n=new k("ASWfaoztykN8Lz1P2uwuvwWR61SvFrvn6acM1sJpxKtq")){const[c]=bt.serialize({instructionDiscriminator:vt,...e}),s=[{pubkey:t.tokenSwap,isWritable:!1,isSigner:!1},{pubkey:t.authority,isWritable:!1,isSigner:!1},{pubkey:t.userTransferAuthority,isWritable:!1,isSigner:!0},{pubkey:t.poolMint,isWritable:!0,isSigner:!1},{pubkey:t.source,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenA,isWritable:!0,isSigner:!1},{pubkey:t.swapTokenB,isWritable:!0,isSigner:!1},{pubkey:t.destination,isWritable:!0,isSigner:!1},{pubkey:t.poolFee,isWritable:!0,isSigner:!1},{pubkey:t.tokenProgram??I,isWritable:!1,isSigner:!1}];if(t.anchorRemainingAccounts!=null)for(const d of t.anchorRemainingAccounts)s.push(d);return new E({programId:n,keys:s,data:c})}var Ie=(t=>(t[t.ConstantProduct=0]="ConstantProduct",t[t.ConstantPrice=1]="ConstantPrice",t[t.Offset=2]="Offset",t))(Ie||{});i.fixedScalarEnum(Ie);var We=(t=>(t[t.Floor=0]="Floor",t[t.Ceiling=1]="Ceiling",t))(We||{});i.fixedScalarEnum(We);var Me=(t=>(t[t.AtoB=0]="AtoB",t[t.BtoA=1]="BtoA",t))(Me||{});i.fixedScalarEnum(Me);const Bt="ASWfaoztykN8Lz1P2uwuvwWR61SvFrvn6acM1sJpxKtq",Et=new k(Bt);class It{constructor(e){r(this,"programId",Et),this.provider=e}get connection(){return this.provider.connection}swapAuthority(e){return k.findProgramAddressSync([e.toBuffer()],this.programId)[0]}async createTokenSwap(e,n){const c=new B,s=e.tokenSwap??Oe.generate(),d=Array.from({length:32}),y=Array.from(e.curveParameters??[]);for(let o=0;o<y.length;o++)d[o]=y[o];const h={curveType:e.curveType,curveParameters:d},u=S.byteSize({bumpSeed:0,curve:h,fees:{tradeFeeNumerator:0,tradeFeeDenominator:0,ownerTradeFeeNumerator:0,ownerTradeFeeDenominator:0,ownerWithdrawFeeNumerator:0,ownerWithdrawFeeDenominator:0,hostFeeNumerator:0,hostFeeDenominator:0},isInitialized:!1,policy:k.default,poolFeeAccount:k.default,poolMint:k.default,tokenA:k.default,tokenAMint:k.default,tokenB:k.default,tokenBMint:k.default,tokenProgramId:k.default}),b=await this.connection.getMinimumBalanceForRentExemption(u);c.add(qe.createAccount({fromPubkey:this.provider.publicKey,newAccountPubkey:s.publicKey,programId:this.programId,lamports:b,space:u})),c.add(wt({authority:this.swapAuthority(s.publicKey),tokenSwap:s.publicKey,destination:e.destination,poolMint:e.poolMint,poolFee:e.poolFee,tokenA:e.tokenA,tokenB:e.tokenB},{feesInput:{tradeFeeNumerator:new f(e.fees.tradeFeeNumerator.toString()),tradeFeeDenominator:new f(e.fees.tradeFeeDenominator.toString()),ownerTradeFeeNumerator:new f(e.fees.ownerTradeFeeNumerator.toString()),ownerTradeFeeDenominator:new f(e.fees.ownerTradeFeeDenominator.toString()),ownerWithdrawFeeNumerator:new f(e.fees.ownerWithdrawFeeNumerator.toString()),ownerWithdrawFeeDenominator:new f(e.fees.ownerWithdrawFeeDenominator.toString()),hostFeeNumerator:new f(e.fees.hostFeeNumerator.toString()),hostFeeDenominator:new f(e.fees.hostFeeDenominator.toString())},curveInput:h,policy:e.policy??null}));const v=await this.provider.sendAndConfirm(c,[s],n);return{tokenSwap:s.publicKey,signature:v}}async swap(e,n){const c=new B;try{await ot(this.connection,e.userDestination)}catch(s){(s instanceof nt||s instanceof rt)&&e.receiver&&e.destinationTokenMint&&c.add(it(this.provider.publicKey,e.userDestination,e.receiver,e.destinationTokenMint))}return c.add(St({authority:this.swapAuthority(e.tokenSwap),userTransferAuthority:this.provider.publicKey,userSource:e.userSource,userDestination:e.userDestination,tokenSwap:e.tokenSwap,poolFee:e.poolFee,poolMint:e.poolMint,poolSource:e.poolSource,poolDestination:e.poolDestination,proofRequest:e.proofRequest,hostFeeAccount:e.hostFeeAccount},{amountIn:new f(e.amountIn.toString()),minimumAmountOut:new f(e.minimumAmountOut.toString())})),this.provider.sendAndConfirm(c,[],n)}async depositAllTokenTypes(e,n){const c=lt({authority:this.swapAuthority(e.tokenSwap),userTransferAuthority:this.provider.publicKey,tokenSwap:e.tokenSwap,poolMint:e.poolMint,destination:e.destination,userTokenA:e.userTokenA,userTokenB:e.userTokenB,swapTokenA:e.swapTokenA,swapTokenB:e.swapTokenB},{poolTokenAmount:new f(e.poolTokenAmount.toString()),maximumTokenAAmount:new f(e.maximumTokenA.toString()),maximumTokenBAmount:new f(e.maximumTokenB.toString())}),s=new B().add(c);return this.provider.sendAndConfirm(s,[],n)}async withdrawAllTokenTypes(e,n){const c=Tt({authority:this.swapAuthority(e.tokenSwap),userTransferAuthority:this.provider.publicKey,tokenSwap:e.tokenSwap,poolMint:e.poolMint,poolFee:e.poolFee,source:e.source,destTokenA:e.destTokenA,destTokenB:e.destTokenB,swapTokenA:e.swapTokenA,swapTokenB:e.swapTokenB},{poolTokenAmount:new f(e.poolTokenAmount.toString()),minimumTokenAAmount:new f(e.minimumTokenA.toString()),minimumTokenBAmount:new f(e.minimumTokenB.toString())}),s=new B().add(c);return this.provider.sendAndConfirm(s,[],n)}async depositSingleTokenTypeExactAmountIn(e,n){const c=mt({authority:this.swapAuthority(e.tokenSwap),userTransferAuthority:this.provider.publicKey,tokenSwap:e.tokenSwap,poolMint:e.poolMint,source:e.source,destination:e.destination,swapTokenA:e.swapTokenA,swapTokenB:e.swapTokenB},{sourceTokenAmount:new f(e.sourceTokenAmount.toString()),minimumPoolTokenAmount:new f(e.minimumPoolTokenAmount.toString())}),s=new B().add(c);return this.provider.sendAndConfirm(s,[],n)}async withdrawSingleTokenTypeExactAmountOut(e,n){const c=Ft({authority:this.swapAuthority(e.tokenSwap),userTransferAuthority:this.provider.publicKey,tokenSwap:e.tokenSwap,poolMint:e.poolMint,poolFee:e.poolFee,source:e.source,destination:e.destination,swapTokenA:e.swapTokenA,swapTokenB:e.swapTokenB},{destinationTokenAmount:new f(e.destinationTokenAmount.toString()),maximumPoolTokenAmount:new f(e.maximumPoolTokenAmount.toString())}),s=new B().add(c);return this.provider.sendAndConfirm(s,[],n)}async load(e,n){return S.fromAccountAddress(this.provider.connection,new k(e),n)}async loadAll(e={}){const n=S.gpaBuilder().addFilter("accountDiscriminator",pe);return e.noData&&(n.config.dataSlice={offset:0,length:0}),e.tokenProgramId&&n.addFilter("tokenProgramId",new k(e.tokenProgramId)),e.poolMint&&n.addFilter("poolMint",new k(e.poolMint)),e.tokenAMint&&n.addFilter("tokenAMint",new k(e.tokenAMint)),e.tokenBMint&&n.addFilter("tokenBMint",new k(e.tokenBMint)),(await n.run(this.provider.connection)).map(({pubkey:c,account:s})=>({pubkey:c,data:e.noData?null:S.fromAccountInfo(s)[0]}))}}const Pt=Le("swap",()=>{const t=Je(),e=Ue(),n=Ge(),{publicKey:c}=Qe(),{notify:s}=Ve(),d=He(()=>new It(new Ae(t.connection,n.value??{publicKey:k.default},Ae.defaultOptions()))),y=M([]),h=M([]),u=M(),b=Te("token-a",""),v=Te("token-b",""),o=Ze({loading:!1,slippageDialog:!1,status:void 0,poolBalance:{},poolTokenSupply:0,from:be,to:be,swapping:!1,active:!1,slippage:.01,rate:0,minimumReceived:0,impact:0,fees:{host:0,trade:0,ownerTrade:0,ownerWithdraw:0},direction:0}),{handleFilterToken:ce,tokens:F}=$e();ce(je),A(F,()=>{F.value.length>=2&&(o.from=F.value.find(a=>a.mint===b.value)??F.value[0],o.to=F.value.find(a=>a.mint===v.value)??F.value[1])},{immediate:!0}),A(()=>o.from,()=>{o.from&&(b.value=o.from.mint)}),A(()=>o.to,()=>{o.to&&(v.value=o.to.mint)}),A(n,async a=>{xe().then(),a||De()},{immediate:!0});async function xe(){o.loading=!0;try{console.log("swapClient ================: ",d.value),y.value=await d.value.loadAll(),console.log("swaps ================: ",y.value)}catch(a){console.log(a),y.value=[]}finally{o.loading=!1}}const ue=M(!1),W=Xe(async()=>{if(console.log("loadPoolTokenAccounts ========= "),!!u.value){ue.value=!0;try{const a=await Ye(t.connection,d.value.swapAuthority(u.value.pubkey)),m={};for(const g of a)m[`${g.mint}`]=g.amount;o.poolBalance=m;const w=await _e(t.connection,u.value.data.poolMint);o.poolTokenSupply=Number(w.supply),console.log("[Pool Balance]",o.poolBalance),console.log("[Pool Balance] poolTokenSupply",o.poolTokenSupply)}catch(a){console.log("[Pool Balance] error",a)}finally{ue.value=!1}}},500);setInterval(W,6e4);function Pe(a){u.value=a,console.log("setTokenSwap: ",u.value)}A([y,()=>o.from?.mint,()=>o.to?.mint],async()=>{if(console.log("tokenSwapsAll: ",y.value),y.value&&o.from?.mint&&o.to?.mint&&o.from.mint!==o.to.mint)if(h.value=y.value.filter(a=>{const m=a.data?.tokenAMint.toBase58(),w=a.data?.tokenBMint.toBase58();return m===o.from.mint&&w===o.to.mint||m===o.to.mint&&w===o.from.mint}),h.value.length){if(h.value.length>1){const a=h.value.find(m=>e.state.certificates?.find(w=>w.data?.policy.toBase58()===m.data.policy?.toBase58()));a&&(u.value=a)}u.value=h.value[0]}else u.value=void 0;else h.value=[],u.value=void 0,e.setContractPolicy("","swap"),o.poolBalance={}},{immediate:!0}),A([u],async()=>{console.log("Token SWAP: ",u.value),e.setContractPolicy(u.value?.data.policy?.toBase58()??"","swap"),u.value&&W()},{immediate:!0});function De(){o.loading=!1,o.slippageDialog=!1,o.status=void 0,o.poolBalance={},o.poolTokenSupply=0}A([()=>o.direction,()=>o.from.amount,()=>o.poolBalance],async()=>{const a=Number(o.from.amount??0),m=ve(Number(o.poolBalance[o.from.mint]??0),o.from.decimals),w=ve(Number(o.poolBalance[o.to.mint]??0),o.to.decimals);if(a===0||Number.isNaN(a)){o.to.amount=0,o.rate=Number(w)/Number(m),o.impact=0,o.minimumReceived=0;return}const g=w-m*w/(m+a);o.rate=a?g/a:w/m,o.to.amount=g?Number(et(g*(1-o.fees.ownerTrade-o.fees.trade),o.to.decimals)):0,o.impact=a?1-g/a/(w/m):0,o.minimumReceived=x(o.to.amount-o.to.amount*o.slippage,o.to.decimals)},{immediate:!0});async function ze(){if(!e.certificateValid)return tt();if(!u.value||!c.value){console.log("TokenSwap is not initialized...");return}n.value.publicKey||s({type:"info",message:"Please connect your wallet first"});const m=Number(x(o.from.amount??0,o.from.decimals)),w=Number(x(e.tokenBalance(o.from.mint)??0,o.from.decimals)),g=Number(x(o.to.amount??0,o.to.decimals));if(m>w){s({type:"negative",message:"Insufficient balance."});return}try{o.swapping=!0;const le=o.direction===0?u.value.data.tokenAMint:u.value.data.tokenBMint,ke=o.direction===0?u.value.data.tokenBMint:u.value.data.tokenAMint,fe=o.direction===0?u.value.data.tokenA:u.value.data.tokenB,we=o.direction===0?u.value.data.tokenB:u.value.data.tokenA,ye=await Fe(le,n.value.publicKey),he=await Fe(ke,n.value.publicKey),Se=m;console.log("toAmount = ",g),console.log("slippage = ",o.slippage),console.log("slippage 2 = ",g*o.slippage);const ge=d.value.swapAuthority(u.value.pubkey);console.log("proofRequest = ",e.certificate?.pubkey.toBase58()),console.log("swapAuthority = ",ge),console.log("tokenSwap = ",u.value.pubkey.toBase58()),console.log("userSource = ",ye.toBase58()),console.log("userDestination = ",he.toBase58()),console.log("poolSource = ",fe.toBase58()),console.log("poolDestination = ",we.toBase58()),console.log("poolMint = ",u.value.data.poolMint.toBase58()),console.log("poolFee = ",u.value.data.poolFeeAccount.toBase58()),console.log("amountIn = ",Se),console.log("minimumAmountOut = ",o.minimumReceived),await d.value.swap({proofRequest:e.certificate?.pubkey,authority:ge,tokenSwap:u.value.pubkey,userSource:ye,userDestination:he,poolSource:fe,poolDestination:we,poolMint:u.value.data.poolMint,poolFee:u.value.data.poolFeeAccount,amountIn:Se,minimumAmountOut:o.minimumReceived,receiver:c.value,destinationTokenMint:ke},{commitment:"confirmed"}),de()}catch(le){console.log(le)}finally{o.swapping=!1}}function Ne(){const{from:a,to:m}=o;o.rate=0,o.to={...a,amount:void 0},o.from={...m,amount:void 0},o.direction=o.direction===0?1:0}function Re(){o.slippageDialog=!0}function Ke(){o.slippageDialog=!1}function Ce(a){o.from.amount=a}function de(){W(),o.from.amount=void 0,o.to.amount=void 0}A(()=>n.value?.publicKey,a=>{a||de()}),A(()=>o.to,a=>{a.amount&&(a.amount=void 0)});function me(a){return{host:P(a.fees.hostFeeNumerator,a.fees.hostFeeDenominator),trade:P(a.fees.tradeFeeNumerator,a.fees.tradeFeeDenominator),ownerTrade:P(a.fees.ownerTradeFeeNumerator,a.fees.ownerTradeFeeDenominator),ownerWithdraw:P(a.fees.ownerWithdrawFeeNumerator,a.fees.ownerWithdrawFeeDenominator)}}return A(u,a=>{if(!a)return;const m=me(a.data);o.fees.host=m.host,o.fees.trade=m.trade,o.fees.ownerTrade=m.ownerTrade,o.fees.ownerWithdraw=m.ownerWithdraw,console.log("fees ==== ",o.fees)}),{state:o,tokenSwapsAll:y,tokenSwaps:h,tokenSwap:u,swapClient:d,loadingPoolTokens:ue,loadPoolTokenAccounts:W,setTokenSwap:Pe,setMax:Ce,closeSlippage:Ke,openSlippage:Re,changeDirection:Ne,swapSubmit:ze,getPoolFee:me}});export{Ie as t,Pt as u};
